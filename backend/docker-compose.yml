version: '3.8'

services:
  # Backend API
  backend:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGO_URI=mongodb://mongo:27017/squdy-platform
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - BSC_TESTNET_RPC_URL=https://data-seed-prebsc-1-s1.binance.org:8545/
      - NETWORK=testnet
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - CORS_ORIGIN=http://localhost:8080
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - squdy-network

  # MongoDB
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=squdy-platform
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - squdy-network

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - squdy-network

  # MongoDB Express (optional, for database management)
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    networks:
      - squdy-network

volumes:
  mongo_data:
  redis_data:

networks:
  squdy-network:
    driver: bridge 