apiVersion: apps/v1
kind: Deployment
metadata:
  name: squdy-frontend
  namespace: squdy-production
  labels:
    app: squdy-frontend
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: squdy-frontend
  template:
    metadata:
      labels:
        app: squdy-frontend
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: frontend
        image: ghcr.io/squdy/squdy-platform-frontend:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_URL
          value: "https://api.squdy.io"
        - name: VITE_CAMPAIGN_MANAGER_ADDRESS
          valueFrom:
            secretKeyRef:
              name: squdy-secrets
              key: campaign-manager-address
        - name: VITE_SQUDY_TOKEN_ADDRESS
          valueFrom:
            secretKeyRef:
              name: squdy-secrets
              key: squdy-token-address
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      securityContext:
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - squdy-frontend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: squdy-frontend-service
  namespace: squdy-production
  labels:
    app: squdy-frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: squdy-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: squdy-frontend-ingress
  namespace: squdy-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
spec:
  tls:
  - hosts:
    - squdy.io
    - www.squdy.io
    secretName: squdy-tls
  rules:
  - host: squdy.io
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: squdy-frontend-service
            port:
              number: 80
  - host: www.squdy.io
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: squdy-frontend-service
            port:
              number: 80