{"id":"2569a87a3618dcb46a8fed3c3cb40e52","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/AutomatedSqudyCampaignManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n// import \"./ISqudyToken.sol\"; // Using IERC20 instead\n\n/**\n * @title AutomatedSqudyCampaignManager\n * @dev Simplified campaign manager with automated winner selection\n * @author Squdy Team\n */\ncontract AutomatedSqudyCampaignManager is AccessControl, ReentrancyGuard, Pausable {\n    using SafeERC20 for IERC20;\n\n    // ============ CONSTANTS ============\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\");\n\n    // ============ STATE VARIABLES ============\n    IERC20 public immutable squdyToken;\n    uint256 private _campaignIds;\n    uint256 private _randomSeed;\n    \n    // Campaign storage\n    mapping(uint256 => Campaign) public campaigns;\n    mapping(uint256 => mapping(address => Participant)) public participants;\n    mapping(uint256 => address[]) public campaignParticipants;\n    \n    // ============ STRUCTS ============\n    struct Campaign {\n        uint256 id;\n        string name;\n        string description;\n        string imageUrl;\n        uint256 softCap;\n        uint256 hardCap;\n        uint256 ticketAmount;\n        uint256 currentAmount;\n        uint256 refundableAmount;\n        uint256 startDate;\n        uint256 endDate;\n        uint256 participantCount;\n        string[] prizes;\n        address[] winners;\n        CampaignStatus status;\n        bool tokensAreBurned;\n        uint256 totalBurned;\n        uint256 winnerSelectionBlock; // Block number when winners were selected\n    }\n\n    struct Participant {\n        uint256 stakedAmount;\n        uint256 ticketCount;\n        bool hasCompletedSocial;\n        uint256 joinedAt;\n        bool hasWithdrawnRefund;\n    }\n\n    enum CampaignStatus { Pending, Active, Paused, Finished, Cancelled, Burned }\n\n    // ============ EVENTS ============\n    event CampaignCreated(uint256 indexed campaignId, address indexed creator, string name);\n    event UserStaked(uint256 indexed campaignId, address indexed user, uint256 amount, uint256 tickets);\n    event SocialTasksCompleted(uint256 indexed campaignId, address indexed user);\n    event WinnersSelected(uint256 indexed campaignId, address[] winners, uint256 blockNumber);\n    event TokensBurned(uint256 indexed campaignId, uint256 amount);\n    event CampaignStatusChanged(uint256 indexed campaignId, CampaignStatus status);\n    event CampaignTerminated(uint256 indexed campaignId, bool refunded);\n    event CampaignPaused(uint256 indexed campaignId);\n    event CampaignResumed(uint256 indexed campaignId);\n    event CampaignEndDateUpdated(uint256 indexed campaignId, uint256 oldEndDate, uint256 newEndDate);\n\n    // ============ MODIFIERS ============\n    modifier campaignExists(uint256 campaignId) {\n        require(campaignId > 0 && campaignId <= _campaignIds, \"Campaign does not exist\");\n        _;\n    }\n\n    modifier onlyOperator() {\n        require(hasRole(OPERATOR_ROLE, msg.sender) || hasRole(ADMIN_ROLE, msg.sender), \"Not authorized\");\n        _;\n    }\n\n    // ============ CONSTRUCTOR ============\n    constructor(address _squdyToken) {\n        require(_squdyToken != address(0), \"Invalid token address\");\n        squdyToken = IERC20(_squdyToken);\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n        _grantRole(OPERATOR_ROLE, msg.sender);\n        \n        // Initialize random seed\n        _randomSeed = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender)));\n    }\n\n    // ============ MAIN FUNCTIONS ============\n\n    /**\n     * @dev Creates a new campaign\n     */\n    function createCampaign(\n        string memory name,\n        string memory description,\n        string memory imageUrl,\n        uint256 softCap,\n        uint256 hardCap,\n        uint256 ticketAmount,\n        uint256 startDate,\n        uint256 endDate,\n        string[] memory prizes\n    ) external onlyRole(ADMIN_ROLE) returns (uint256) {\n        require(startDate > block.timestamp, \"Invalid start date\");\n        require(endDate > startDate, \"Invalid end date\");\n        require(softCap > 0 && hardCap > softCap, \"Invalid caps\");\n        require(ticketAmount > 0, \"Invalid ticket amount\");\n\n        _campaignIds++;\n        uint256 campaignId = _campaignIds;\n\n        Campaign storage campaign = campaigns[campaignId];\n        campaign.id = campaignId;\n        campaign.name = name;\n        campaign.description = description;\n        campaign.imageUrl = imageUrl;\n        campaign.softCap = softCap;\n        campaign.hardCap = hardCap;\n        campaign.ticketAmount = ticketAmount;\n        campaign.startDate = startDate;\n        campaign.endDate = endDate;\n        campaign.status = CampaignStatus.Active;\n        \n        // Copy prizes array\n        for (uint256 i = 0; i < prizes.length; i++) {\n            campaign.prizes.push(prizes[i]);\n        }\n\n        emit CampaignCreated(campaignId, msg.sender, name);\n        return campaignId;\n    }\n\n    /**\n     * @dev Stake tokens in a campaign\n     */\n    function stakeTokens(uint256 campaignId, uint256 amount) \n        external \n        nonReentrant \n        whenNotPaused \n        campaignExists(campaignId) \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Active, \"Campaign not active\");\n        require(block.timestamp >= campaign.startDate && block.timestamp <= campaign.endDate, \"Campaign not in progress\");\n        require(amount >= campaign.ticketAmount, \"Amount below minimum\");\n\n        Participant storage participant = participants[campaignId][msg.sender];\n        \n        // If first time participating, add to participants list\n        if (participant.stakedAmount == 0) {\n            campaignParticipants[campaignId].push(msg.sender);\n            campaign.participantCount++;\n            participant.joinedAt = block.timestamp;\n        }\n\n        // Transfer tokens and compute actual received (fee-on-transfer safe)\n        uint256 balBefore = squdyToken.balanceOf(address(this));\n        squdyToken.safeTransferFrom(msg.sender, address(this), amount);\n        uint256 received = squdyToken.balanceOf(address(this)) - balBefore;\n        require(received >= campaign.ticketAmount, \"Amount too small after fees\");\n\n        // Enforce hardCap on actual received\n        require(campaign.currentAmount + received <= campaign.hardCap, \"Exceeds hard cap\");\n\n        // Calculate tickets on actual received\n        uint256 ticketCount = received / campaign.ticketAmount;\n        require(ticketCount > 0, \"Insufficient for one ticket\");\n\n        // CEI: update state before external effects already done\n        participant.stakedAmount += received;\n        participant.ticketCount += ticketCount;\n        campaign.currentAmount += received;\n        campaign.refundableAmount += received;\n        \n        emit UserStaked(campaignId, msg.sender, received, ticketCount);\n    }\n\n    /**\n     * @dev Automated winner selection when campaign ends\n     * Can be called by anyone after campaign ends\n     */\n    function selectWinners(uint256 campaignId) \n        external \n        campaignExists(campaignId) \n        nonReentrant \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Active, \"Campaign not active\");\n        require(block.timestamp > campaign.endDate, \"Campaign still active\");\n        require(campaign.currentAmount >= campaign.softCap, \"Soft cap not reached\");\n\n        // Get eligible participants (those who completed social tasks)\n        address[] memory eligibleParticipants = getEligibleParticipants(campaignId);\n        require(eligibleParticipants.length > 0, \"No eligible participants\");\n\n        // Select winners based on weighted random selection\n        uint256 winnerCount = campaign.prizes.length;\n        if (winnerCount > eligibleParticipants.length) {\n            winnerCount = eligibleParticipants.length;\n        }\n\n        // Pseudo-randomness (non-VRF): mix prior blockhash to reduce manipulation surface\n        uint256 entropy = uint256(keccak256(abi.encodePacked(\n            blockhash(block.number - 1),\n            campaignId,\n            campaign.currentAmount,\n            _randomSeed++\n        )));\n\n        // Select winners using weighted random selection\n        for (uint256 i = 0; i < winnerCount; i++) {\n            address winner = selectWeightedWinner(campaignId, eligibleParticipants, entropy + i);\n            campaign.winners.push(winner);\n            \n            // Remove winner from eligible list for next selection\n            eligibleParticipants = removeFromArray(eligibleParticipants, winner);\n        }\n\n        campaign.status = CampaignStatus.Finished;\n        campaign.winnerSelectionBlock = block.number;\n\n        emit WinnersSelected(campaignId, campaign.winners, block.number);\n        emit CampaignStatusChanged(campaignId, CampaignStatus.Finished);\n    }\n\n    /**\n     * @dev Burn all staked tokens after winner selection\n     */\n    function burnTokens(uint256 campaignId) \n        external \n        campaignExists(campaignId) \n        nonReentrant \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Finished, \"Winners not selected\");\n        require(!campaign.tokensAreBurned, \"Tokens already burned\");\n\n        uint256 burnAmount = campaign.currentAmount;\n        campaign.tokensAreBurned = true;\n        campaign.totalBurned = burnAmount;\n        campaign.status = CampaignStatus.Burned;\n        campaign.currentAmount = 0;\n        campaign.refundableAmount = 0;\n\n        // Attempt real burn; fallback to transfer-to-dead if token lacks burn()\n        (bool ok, ) = address(squdyToken).call(abi.encodeWithSignature(\"burn(uint256)\", burnAmount));\n        if (!ok) {\n            squdyToken.safeTransfer(address(0xdEaD), burnAmount);\n        }\n\n        emit TokensBurned(campaignId, burnAmount);\n        emit CampaignStatusChanged(campaignId, CampaignStatus.Burned);\n    }\n\n    // ============ INTERNAL FUNCTIONS ============\n\n    /**\n     * @dev Get eligible participants (those who completed social tasks)\n     */\n    function getEligibleParticipants(uint256 campaignId) \n        internal \n        view \n        returns (address[] memory) \n    {\n        address[] memory allParticipants = campaignParticipants[campaignId];\n        address[] memory eligible = new address[](allParticipants.length);\n        uint256 eligibleCount = 0;\n\n        for (uint256 i = 0; i < allParticipants.length; i++) {\n            if (participants[campaignId][allParticipants[i]].hasCompletedSocial) {\n                eligible[eligibleCount] = allParticipants[i];\n                eligibleCount++;\n            }\n        }\n\n        // Resize array to actual eligible count\n        address[] memory result = new address[](eligibleCount);\n        for (uint256 i = 0; i < eligibleCount; i++) {\n            result[i] = eligible[i];\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev Select winner using weighted random selection based on ticket count\n     */\n    function selectWeightedWinner(\n        uint256 campaignId, \n        address[] memory eligibleParticipants, \n        uint256 randomness\n    ) internal view returns (address) {\n        // Calculate total tickets for eligible participants\n        uint256 totalTickets = 0;\n        for (uint256 i = 0; i < eligibleParticipants.length; i++) {\n            totalTickets += participants[campaignId][eligibleParticipants[i]].ticketCount;\n        }\n\n        // Generate random number within total tickets\n        uint256 randomTicket = randomness % totalTickets;\n        \n        // Find winner based on cumulative ticket distribution\n        uint256 cumulativeTickets = 0;\n        for (uint256 i = 0; i < eligibleParticipants.length; i++) {\n            cumulativeTickets += participants[campaignId][eligibleParticipants[i]].ticketCount;\n            if (randomTicket < cumulativeTickets) {\n                return eligibleParticipants[i];\n            }\n        }\n        \n        // Fallback (should never reach here)\n        return eligibleParticipants[0];\n    }\n\n    /**\n     * @dev Remove address from array\n     */\n    function removeFromArray(address[] memory arr, address target) \n        internal \n        pure \n        returns (address[] memory) \n    {\n        address[] memory result = new address[](arr.length - 1);\n        uint256 resultIndex = 0;\n        \n        for (uint256 i = 0; i < arr.length; i++) {\n            if (arr[i] != target) {\n                result[resultIndex] = arr[i];\n                resultIndex++;\n            }\n        }\n        \n        return result;\n    }\n\n    // ============ ADMIN FUNCTIONS ============\n\n    /**\n     * @dev Confirm social tasks completion for a user\n     */\n    function confirmSocialTasks(uint256 campaignId, address user) \n        external \n        onlyOperator \n        campaignExists(campaignId) \n    {\n        require(participants[campaignId][user].stakedAmount > 0, \"User not participating\");\n        require(!participants[campaignId][user].hasCompletedSocial, \"Already completed\");\n        \n        participants[campaignId][user].hasCompletedSocial = true;\n        \n        emit SocialTasksCompleted(campaignId, user);\n    }\n\n    // ============ VIEW FUNCTIONS ============\n\n    function getCampaign(uint256 campaignId) \n        external \n        view \n        campaignExists(campaignId) \n        returns (Campaign memory) \n    {\n        return campaigns[campaignId];\n    }\n\n    function getParticipant(uint256 campaignId, address user) \n        external \n        view \n        returns (Participant memory) \n    {\n        return participants[campaignId][user];\n    }\n\n    function getCampaignParticipants(uint256 campaignId) \n        external \n        view \n        campaignExists(campaignId) \n        returns (address[] memory) \n    {\n        return campaignParticipants[campaignId];\n    }\n\n    function getTotalCampaigns() external view returns (uint256) {\n        return _campaignIds;\n    }\n\n    // ============ ADMIN EMERGENCY FUNCTIONS ============\n\n    /**\n     * @dev Emergency terminate campaign (admin only)\n     * Allows early termination with optional refunds\n     */\n    function emergencyTerminateCampaign(uint256 campaignId, bool refundUsers) \n        external \n        onlyRole(ADMIN_ROLE) \n        campaignExists(campaignId) \n        nonReentrant \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Active, \"Campaign not active\");\n        \n        campaign.status = CampaignStatus.Cancelled;\n        if (refundUsers && campaign.currentAmount > 0) {\n            // Move to claim-based refunds to avoid gas DoS\n            // Funds remain held by contract; users call claimRefund() individually\n        } else if (!refundUsers && campaign.currentAmount > 0) {\n            // Optional: burn immediately if no refunds\n            uint256 amount = campaign.currentAmount;\n            campaign.currentAmount = 0;\n            campaign.refundableAmount = 0;\n            (bool ok2, ) = address(squdyToken).call(abi.encodeWithSignature(\"burn(uint256)\", amount));\n            if (!ok2) {\n                squdyToken.safeTransfer(address(0xdEaD), amount);\n            }\n            campaign.totalBurned += amount;\n            emit TokensBurned(campaignId, amount);\n        }\n        \n        emit CampaignTerminated(campaignId, refundUsers);\n    }\n\n    /**\n     * @dev Users claim their refund after a cancelled campaign\n     */\n    function claimRefund(uint256 campaignId) external nonReentrant campaignExists(campaignId) {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Cancelled, \"Not cancelled\");\n        Participant storage p = participants[campaignId][msg.sender];\n        uint256 amount = p.stakedAmount;\n        require(amount > 0, \"Nothing to refund\");\n        require(!p.hasWithdrawnRefund, \"Already refunded\");\n        p.hasWithdrawnRefund = true;\n        p.stakedAmount = 0;\n        p.ticketCount = 0;\n        if (campaign.refundableAmount >= amount) {\n            campaign.refundableAmount -= amount;\n        } else {\n            campaign.refundableAmount = 0;\n        }\n        squdyToken.safeTransfer(msg.sender, amount);\n    }\n\n    /**\n     * @dev Pause a specific campaign (admin/operator only)\n     */\n    function pauseCampaign(uint256 campaignId) \n        external \n        onlyRole(OPERATOR_ROLE) \n        campaignExists(campaignId) \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Active, \"Campaign not active\");\n        \n        campaign.status = CampaignStatus.Paused;\n        emit CampaignPaused(campaignId);\n    }\n\n    /**\n     * @dev Resume a paused campaign (admin/operator only)\n     */\n    function resumeCampaign(uint256 campaignId) \n        external \n        onlyRole(OPERATOR_ROLE) \n        campaignExists(campaignId) \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Paused, \"Campaign not paused\");\n        require(block.timestamp <= campaign.endDate, \"Campaign has ended\");\n        \n        campaign.status = CampaignStatus.Active;\n        emit CampaignResumed(campaignId);\n    }\n\n    /**\n     * @dev Emergency pause all contract operations (admin only)\n     */\n    function emergencyPause() external onlyRole(ADMIN_ROLE) {\n        _pause();\n    }\n\n    /**\n     * @dev Emergency unpause all contract operations (admin only)\n     */\n    function emergencyUnpause() external onlyRole(ADMIN_ROLE) {\n        _unpause();\n    }\n\n    /**\n     * @dev Update campaign end date (admin only, before campaign ends)\n     */\n    function updateCampaignEndDate(uint256 campaignId, uint256 newEndDate) \n        external \n        onlyRole(ADMIN_ROLE) \n        campaignExists(campaignId) \n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Active || campaign.status == CampaignStatus.Paused, \"Campaign not active/paused\");\n        require(newEndDate > block.timestamp, \"End date must be in future\");\n        require(newEndDate > campaign.endDate, \"Must extend end date\");\n        \n        uint256 oldEndDate = campaign.endDate;\n        campaign.endDate = newEndDate;\n        \n        emit CampaignEndDateUpdated(campaignId, oldEndDate, newEndDate);\n    }\n\n    /**\n     * @dev Admin convenience: force a campaign to be considered ended immediately\n     * Sets endDate to block.timestamp - 1 without changing other fields\n     */\n    function endCampaignNow(uint256 campaignId)\n        external\n        onlyRole(ADMIN_ROLE)\n        campaignExists(campaignId)\n    {\n        Campaign storage campaign = campaigns[campaignId];\n        require(campaign.status == CampaignStatus.Active || campaign.status == CampaignStatus.Paused, \"Campaign not active/paused\");\n        uint256 oldEndDate = campaign.endDate;\n        if (oldEndDate > block.timestamp - 1) {\n            campaign.endDate = block.timestamp - 1;\n            emit CampaignEndDateUpdated(campaignId, oldEndDate, campaign.endDate);\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[1041],"ERC165":[1242],"IAccessControl":[379],"IERC165":[1254]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1042,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1243,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,1242,1254,379,1041],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1241],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1241,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[461],"IERC165":[1254],"IERC20":[547]},"id":462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":462,"sourceUnit":470,"src":"133:36:2","symbolAliases":[{"foreign":{"id":382,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"141:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":462,"sourceUnit":466,"src":"170:38:2","symbolAliases":[{"foreign":{"id":384,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"178:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":387,"name":"IERC20","nameLocations":["590:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"590:6:2"},"id":388,"nodeType":"InheritanceSpecifier","src":"590:6:2"},{"baseName":{"id":389,"name":"IERC165","nameLocations":["598:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1254,"src":"598:7:2"},"id":390,"nodeType":"InheritanceSpecifier","src":"598:7:2"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"210:357:2","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":461,"linearizedBaseContracts":[461,1254,547],"name":"IERC1363","nameLocation":"578:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"1148:370:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":400,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:2","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"to","nameLocation":"1556:2:2","nodeType":"VariableDeclaration","scope":400,"src":"1548:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"value","nameLocation":"1568:5:2","nodeType":"VariableDeclaration","scope":400,"src":"1560:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:2"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"1593:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:2"},"scope":461,"src":"1523:76:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"1605:453:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":412,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:2","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"to","nameLocation":"2096:2:2","nodeType":"VariableDeclaration","scope":412,"src":"2088:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"value","nameLocation":"2108:5:2","nodeType":"VariableDeclaration","scope":412,"src":"2100:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"data","nameLocation":"2130:4:2","nodeType":"VariableDeclaration","scope":412,"src":"2115:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:2"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"2154:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":409,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:2"},"scope":461,"src":"2063:97:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2166:453:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":424,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:2","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"from","nameLocation":"2661:4:2","nodeType":"VariableDeclaration","scope":424,"src":"2653:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"to","nameLocation":"2675:2:2","nodeType":"VariableDeclaration","scope":424,"src":"2667:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"value","nameLocation":"2687:5:2","nodeType":"VariableDeclaration","scope":424,"src":"2679:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":424,"src":"2712:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":421,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:2"},"scope":461,"src":"2624:94:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2724:536:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"from","nameLocation":"3302:4:2","nodeType":"VariableDeclaration","scope":438,"src":"3294:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"to","nameLocation":"3316:2:2","nodeType":"VariableDeclaration","scope":438,"src":"3308:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"3328:5:2","nodeType":"VariableDeclaration","scope":438,"src":"3320:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"data","nameLocation":"3350:4:2","nodeType":"VariableDeclaration","scope":438,"src":"3335:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":432,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:2"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"3374:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":435,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:2"},"scope":461,"src":"3265:115:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"3386:390:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":448,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:2","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"spender","nameLocation":"3813:7:2","nodeType":"VariableDeclaration","scope":448,"src":"3805:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"value","nameLocation":"3830:5:2","nodeType":"VariableDeclaration","scope":448,"src":"3822:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:2"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":448,"src":"3855:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":445,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:2"},"scope":461,"src":"3781:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"3867:478:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:2","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"spender","nameLocation":"4382:7:2","nodeType":"VariableDeclaration","scope":460,"src":"4374:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"value","nameLocation":"4399:5:2","nodeType":"VariableDeclaration","scope":460,"src":"4391:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"data","nameLocation":"4421:4:2","nodeType":"VariableDeclaration","scope":460,"src":"4406:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":454,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"4445:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":457,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:2"},"scope":461,"src":"4350:101:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":462,"src":"568:3885:2","usedErrors":[],"usedEvents":[481,490]}],"src":"107:4347:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1254]},"id":466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":463,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":466,"sourceUnit":1255,"src":"133:59:3","symbolAliases":[{"foreign":{"id":464,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[547]},"id":470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":467,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":470,"sourceUnit":548,"src":"132:49:4","symbolAliases":[{"foreign":{"id":468,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"140:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[547]},"id":548,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":471,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"133:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":547,"linearizedBaseContracts":[547],"name":"IERC20","nameLocation":"215:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"228:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":481,"name":"Transfer","nameLocation":"397:8:5","nodeType":"EventDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:5","nodeType":"VariableDeclaration","scope":481,"src":"406:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:5","nodeType":"VariableDeclaration","scope":481,"src":"428:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:5","nodeType":"VariableDeclaration","scope":481,"src":"448:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:5"},"src":"391:72:5"},{"anonymous":false,"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"469:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":490,"name":"Approval","nameLocation":"628:8:5","nodeType":"EventDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:5","nodeType":"VariableDeclaration","scope":490,"src":"637:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":486,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":490,"src":"660:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:5","nodeType":"VariableDeclaration","scope":490,"src":"685:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:5"},"src":"622:78:5"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"706:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:5","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"796:2:5"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"822:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:5"},"scope":547,"src":"776:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"837:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:5","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"account","nameLocation":"940:7:5","nodeType":"VariableDeclaration","scope":504,"src":"932:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:5"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"972:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:5"},"scope":547,"src":"913:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"987:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":514,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:5","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"to","nameLocation":"1231:2:5","nodeType":"VariableDeclaration","scope":514,"src":"1223:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"value","nameLocation":"1243:5:5","nodeType":"VariableDeclaration","scope":514,"src":"1235:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"1268:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:5"},"scope":547,"src":"1205:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"1280:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":524,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:5","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"owner","nameLocation":"1576:5:5","nodeType":"VariableDeclaration","scope":524,"src":"1568:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"spender","nameLocation":"1591:7:5","nodeType":"VariableDeclaration","scope":524,"src":"1583:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:5"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"1623:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:5"},"scope":547,"src":"1549:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"1638:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":534,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:5","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"spender","nameLocation":"2335:7:5","nodeType":"VariableDeclaration","scope":534,"src":"2327:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"value","nameLocation":"2352:5:5","nodeType":"VariableDeclaration","scope":534,"src":"2344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:5"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"2377:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":531,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:5"},"scope":547,"src":"2310:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2389:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":546,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:5","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"from","nameLocation":"2721:4:5","nodeType":"VariableDeclaration","scope":546,"src":"2713:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"to","nameLocation":"2735:2:5","nodeType":"VariableDeclaration","scope":546,"src":"2727:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"value","nameLocation":"2747:5:5","nodeType":"VariableDeclaration","scope":546,"src":"2739:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:5"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"2772:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:5"},"scope":547,"src":"2691:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":548,"src":"205:2575:5","usedErrors":[],"usedEvents":[481,490]}],"src":"106:2675:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[461],"IERC20":[547],"SafeERC20":[1011]},"id":1012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":549,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1012,"sourceUnit":548,"src":"141:37:6","symbolAliases":[{"foreign":{"id":550,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"149:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1012,"sourceUnit":462,"src":"179:58:6","symbolAliases":[{"foreign":{"id":552,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"187:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"239:458:6","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1011,"linearizedBaseContracts":[1011],"name":"SafeERC20","nameLocation":"706:9:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"722:65:6","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":559,"name":"SafeERC20FailedOperation","nameLocation":"798:24:6","nodeType":"ErrorDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"token","nameLocation":"831:5:6","nodeType":"VariableDeclaration","scope":559,"src":"823:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:6"},"src":"792:46:6"},{"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"844:71:6","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":568,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:6","nodeType":"ErrorDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"spender","nameLocation":"967:7:6","nodeType":"VariableDeclaration","scope":568,"src":"959:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:6","nodeType":"VariableDeclaration","scope":568,"src":"976:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:6","nodeType":"VariableDeclaration","scope":568,"src":"1002:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:6"},"src":"920:109:6"},{"body":{"id":591,"nodeType":"Block","src":"1291:88:6","statements":[{"expression":{"arguments":[{"id":580,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1321:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":583,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1343:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":514,"src":"1343:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"1360:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"1364:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":581,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":579,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"1301:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"1301:71:6"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"1035:179:6","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:6","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"token","nameLocation":"1248:5:6","nodeType":"VariableDeclaration","scope":592,"src":"1241:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":571,"nodeType":"UserDefinedTypeName","pathNode":{"id":570,"name":"IERC20","nameLocations":["1241:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"1241:6:6"},"referencedDeclaration":547,"src":"1241:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"to","nameLocation":"1263:2:6","nodeType":"VariableDeclaration","scope":592,"src":"1255:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"value","nameLocation":"1275:5:6","nodeType":"VariableDeclaration","scope":592,"src":"1267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:6"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"1291:0:6"},"scope":1011,"src":"1219:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":618,"nodeType":"Block","src":"1708:98:6","statements":[{"expression":{"arguments":[{"id":606,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"1738:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":609,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"1760:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":546,"src":"1760:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":611,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"1781:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":612,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"1787:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"1791:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":607,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":605,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"1718:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"1718:81:6"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"1385:228:6","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:6","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"token","nameLocation":"1651:5:6","nodeType":"VariableDeclaration","scope":619,"src":"1644:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":595,"nodeType":"UserDefinedTypeName","pathNode":{"id":594,"name":"IERC20","nameLocations":["1644:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"1644:6:6"},"referencedDeclaration":547,"src":"1644:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"from","nameLocation":"1666:4:6","nodeType":"VariableDeclaration","scope":619,"src":"1658:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"to","nameLocation":"1680:2:6","nodeType":"VariableDeclaration","scope":619,"src":"1672:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"value","nameLocation":"1692:5:6","nodeType":"VariableDeclaration","scope":619,"src":"1684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:6"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"1708:0:6"},"scope":1011,"src":"1618:188:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":644,"nodeType":"Block","src":"2033:99:6","statements":[{"expression":{"arguments":[{"id":633,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2074:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":636,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2096:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":514,"src":"2096:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2113:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2117:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":634,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":632,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"2050:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":631,"id":643,"nodeType":"Return","src":"2043:82:6"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"1812:126:6","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":645,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:6","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"token","nameLocation":"1975:5:6","nodeType":"VariableDeclaration","scope":645,"src":"1968:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":622,"nodeType":"UserDefinedTypeName","pathNode":{"id":621,"name":"IERC20","nameLocations":["1968:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"1968:6:6"},"referencedDeclaration":547,"src":"1968:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"to","nameLocation":"1990:2:6","nodeType":"VariableDeclaration","scope":645,"src":"1982:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"value","nameLocation":"2002:5:6","nodeType":"VariableDeclaration","scope":645,"src":"1994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:6"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"2027:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":629,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:6"},"scope":1011,"src":"1943:189:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":673,"nodeType":"Block","src":"2381:109:6","statements":[{"expression":{"arguments":[{"id":661,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2422:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":664,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2444:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":546,"src":"2444:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"2465:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"2471:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2475:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":662,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":660,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"2398:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":659,"id":672,"nodeType":"Return","src":"2391:92:6"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"2138:130:6","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":674,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:6","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"token","nameLocation":"2309:5:6","nodeType":"VariableDeclaration","scope":674,"src":"2302:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":648,"nodeType":"UserDefinedTypeName","pathNode":{"id":647,"name":"IERC20","nameLocations":["2302:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"2302:6:6"},"referencedDeclaration":547,"src":"2302:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"from","nameLocation":"2324:4:6","nodeType":"VariableDeclaration","scope":674,"src":"2316:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"to","nameLocation":"2338:2:6","nodeType":"VariableDeclaration","scope":674,"src":"2330:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"value","nameLocation":"2350:5:6","nodeType":"VariableDeclaration","scope":674,"src":"2342:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:6"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":674,"src":"2375:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":657,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:6"},"scope":1011,"src":"2273:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"3232:139:6","statements":[{"assignments":[686],"declarations":[{"constant":false,"id":686,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:6","nodeType":"VariableDeclaration","scope":704,"src":"3242:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":695,"initialValue":{"arguments":[{"arguments":[{"id":691,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1011","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1011","typeString":"library SafeERC20"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:6","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3296:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":687,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3265:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":524,"src":"3265:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:6"},{"expression":{"arguments":[{"id":697,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3327:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3334:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":699,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3343:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3358:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3314:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"3314:50:6"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"2496:645:6","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:6","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"token","nameLocation":"3184:5:6","nodeType":"VariableDeclaration","scope":705,"src":"3177:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"IERC20","nameLocations":["3177:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"3177:6:6"},"referencedDeclaration":547,"src":"3177:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"spender","nameLocation":"3199:7:6","nodeType":"VariableDeclaration","scope":705,"src":"3191:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"value","nameLocation":"3216:5:6","nodeType":"VariableDeclaration","scope":705,"src":"3208:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:6"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"3232:0:6"},"scope":1011,"src":"3146:225:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"4137:370:6","statements":[{"id":746,"nodeType":"UncheckedBlock","src":"4147:354:6","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:6","nodeType":"VariableDeclaration","scope":746,"src":"4171:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":726,"initialValue":{"arguments":[{"arguments":[{"id":722,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1011","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1011","typeString":"library SafeERC20"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:6","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4229:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":718,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4198:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":524,"src":"4198:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4255:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":728,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4274:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":737,"nodeType":"IfStatement","src":"4251:160:6","trueBody":{"id":736,"nodeType":"Block","src":"4293:118:6","statements":[{"errorCall":{"arguments":[{"id":731,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4351:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4360:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":733,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4378:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4318:32:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"RevertStatement","src":"4311:85:6"}]}},{"expression":{"arguments":[{"id":739,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4437:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"id":740,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4444:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":741,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4453:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":742,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4472:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4424:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"4424:66:6"}]}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"3377:657:6","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:6","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"token","nameLocation":"4077:5:6","nodeType":"VariableDeclaration","scope":748,"src":"4070:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"IERC20","nameLocations":["4070:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"4070:6:6"},"referencedDeclaration":547,"src":"4070:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"4092:7:6","nodeType":"VariableDeclaration","scope":748,"src":"4084:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:6","nodeType":"VariableDeclaration","scope":748,"src":"4101:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:6"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"4137:0:6"},"scope":1011,"src":"4039:468:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"5161:303:6","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:6","nodeType":"VariableDeclaration","scope":794,"src":"5171:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":769,"initialValue":{"arguments":[{"expression":{"id":763,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5214:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":534,"src":"5214:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":765,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5230:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"5239:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":761,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:6"},{"condition":{"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:6","subExpression":{"arguments":[{"id":771,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5286:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"id":772,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5293:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":770,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5262:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"IfStatement","src":"5257:201:6","trueBody":{"id":792,"nodeType":"Block","src":"5308:150:6","statements":[{"expression":{"arguments":[{"id":776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5342:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":779,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5364:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":534,"src":"5364:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":781,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5380:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":777,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":775,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5322:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"5322:71:6"},{"expression":{"arguments":[{"id":788,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5427:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"id":789,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5434:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":787,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5407:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"5407:40:6"}]}}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"4513:566:6","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:6","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"token","nameLocation":"5113:5:6","nodeType":"VariableDeclaration","scope":795,"src":"5106:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":751,"nodeType":"UserDefinedTypeName","pathNode":{"id":750,"name":"IERC20","nameLocations":["5106:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"5106:6:6"},"referencedDeclaration":547,"src":"5106:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"spender","nameLocation":"5128:7:6","nodeType":"VariableDeclaration","scope":795,"src":"5120:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"value","nameLocation":"5145:5:6","nodeType":"VariableDeclaration","scope":795,"src":"5137:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:6"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1011,"src":"5084:380:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":837,"nodeType":"Block","src":"5911:219:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":808,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"5925:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:6","memberName":"code","nodeType":"MemberAccess","src":"5925:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:6","memberName":"length","nodeType":"MemberAccess","src":"5925:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:6","subExpression":{"arguments":[{"id":822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"6034:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"6038:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"6045:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":820,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6012:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:6","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":412,"src":"6012:21:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":835,"nodeType":"IfStatement","src":"6007:117:6","trueBody":{"id":834,"nodeType":"Block","src":"6052:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":830,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6106:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:6","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":827,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6073:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"RevertStatement","src":"6066:47:6"}]}},"id":836,"nodeType":"IfStatement","src":"5921:203:6","trueBody":{"id":819,"nodeType":"Block","src":"5946:55:6","statements":[{"expression":{"arguments":[{"id":814,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5973:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"5980:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5984:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":813,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"5960:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"5960:30:6"}]}}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"5470:333:6","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":838,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:6","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"token","nameLocation":"5849:5:6","nodeType":"VariableDeclaration","scope":838,"src":"5840:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"},"typeName":{"id":798,"nodeType":"UserDefinedTypeName","pathNode":{"id":797,"name":"IERC1363","nameLocations":["5840:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":461,"src":"5840:8:6"},"referencedDeclaration":461,"src":"5840:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"to","nameLocation":"5864:2:6","nodeType":"VariableDeclaration","scope":838,"src":"5856:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"value","nameLocation":"5876:5:6","nodeType":"VariableDeclaration","scope":838,"src":"5868:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"data","nameLocation":"5896:4:6","nodeType":"VariableDeclaration","scope":838,"src":"5883:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":804,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:6"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"5911:0:6"},"scope":1011,"src":"5808:322:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"6649:239:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":853,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"6663:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:6","memberName":"code","nodeType":"MemberAccess","src":"6663:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:6","memberName":"length","nodeType":"MemberAccess","src":"6663:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:6","subExpression":{"arguments":[{"id":868,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"6786:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"6792:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"6796:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":871,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6803:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":866,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"6760:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:6","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":438,"src":"6760:25:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":882,"nodeType":"IfStatement","src":"6755:127:6","trueBody":{"id":881,"nodeType":"Block","src":"6810:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":877,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"6864:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:6","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":874,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6831:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"RevertStatement","src":"6824:47:6"}]}},"id":883,"nodeType":"IfStatement","src":"6659:223:6","trueBody":{"id":865,"nodeType":"Block","src":"6684:65:6","statements":[{"expression":{"arguments":[{"id":859,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"6715:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},{"id":860,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"6722:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"6728:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"6732:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":858,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"6698:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"6698:40:6"}]}}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"6136:341:6","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:6","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"token","nameLocation":"6536:5:6","nodeType":"VariableDeclaration","scope":885,"src":"6527:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"},"typeName":{"id":841,"nodeType":"UserDefinedTypeName","pathNode":{"id":840,"name":"IERC1363","nameLocations":["6527:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":461,"src":"6527:8:6"},"referencedDeclaration":461,"src":"6527:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"from","nameLocation":"6559:4:6","nodeType":"VariableDeclaration","scope":885,"src":"6551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"to","nameLocation":"6581:2:6","nodeType":"VariableDeclaration","scope":885,"src":"6573:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"value","nameLocation":"6601:5:6","nodeType":"VariableDeclaration","scope":885,"src":"6593:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"data","nameLocation":"6629:4:6","nodeType":"VariableDeclaration","scope":885,"src":"6616:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":849,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:6"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"6649:0:6"},"scope":1011,"src":"6482:406:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"7655:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":898,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"7669:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:6","memberName":"code","nodeType":"MemberAccess","src":"7669:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:6","memberName":"length","nodeType":"MemberAccess","src":"7669:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:6","subExpression":{"arguments":[{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"7777:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"7781:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":914,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"7788:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":910,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7756:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:6","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":460,"src":"7756:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":925,"nodeType":"IfStatement","src":"7751:116:6","trueBody":{"id":924,"nodeType":"Block","src":"7795:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":920,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7849:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:6","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":917,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7816:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"RevertStatement","src":"7809:47:6"}]}},"id":926,"nodeType":"IfStatement","src":"7665:202:6","trueBody":{"id":909,"nodeType":"Block","src":"7690:55:6","statements":[{"expression":{"arguments":[{"id":904,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7717:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},{"id":905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"7724:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"7728:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7704:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"7704:30:6"}]}}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"6894:654:6","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":928,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:6","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"token","nameLocation":"7593:5:6","nodeType":"VariableDeclaration","scope":928,"src":"7584:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"},"typeName":{"id":888,"nodeType":"UserDefinedTypeName","pathNode":{"id":887,"name":"IERC1363","nameLocations":["7584:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":461,"src":"7584:8:6"},"referencedDeclaration":461,"src":"7584:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$461","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"to","nameLocation":"7608:2:6","nodeType":"VariableDeclaration","scope":928,"src":"7600:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"value","nameLocation":"7620:5:6","nodeType":"VariableDeclaration","scope":928,"src":"7612:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"data","nameLocation":"7640:4:6","nodeType":"VariableDeclaration","scope":928,"src":"7627:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":894,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:6"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"7655:0:6"},"scope":1011,"src":"7553:320:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":968,"nodeType":"Block","src":"8440:650:6","statements":[{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:6","nodeType":"VariableDeclaration","scope":968,"src":"8450:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":939,"nodeType":"VariableDeclarationStatement","src":"8450:18:6"},{"assignments":[941],"declarations":[{"constant":false,"id":941,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:6","nodeType":"VariableDeclaration","scope":968,"src":"8478:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"nodeType":"VariableDeclarationStatement","src":"8478:19:6"},{"AST":{"nodeType":"YulBlock","src":"8532:396:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:6"},"nodeType":"YulFunctionCall","src":"8566:5:6"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:6","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:6"},"nodeType":"YulFunctionCall","src":"8583:15:6"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:6"},"nodeType":"YulFunctionCall","src":"8600:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:6","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:6"},"nodeType":"YulFunctionCall","src":"8561:60:6"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:6"},"nodeType":"YulFunctionCall","src":"8711:11:6"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:6","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:6","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:6"},"nodeType":"YulFunctionCall","src":"8762:16:6"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:6"},"nodeType":"YulFunctionCall","src":"8739:40:6"},"nodeType":"YulExpressionStatement","src":"8739:40:6"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:6"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:6"},"nodeType":"YulFunctionCall","src":"8808:16:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:6"},"nodeType":"YulFunctionCall","src":"8796:29:6"},"nodeType":"YulExpressionStatement","src":"8796:29:6"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:6"},"nodeType":"YulFunctionCall","src":"8666:15:6"},"nodeType":"YulIf","src":"8663:176:6"},{"nodeType":"YulAssignment","src":"8852:30:6","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:6"},"nodeType":"YulFunctionCall","src":"8866:16:6"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:6"}]},{"nodeType":"YulAssignment","src":"8895:23:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:6","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:6"},"nodeType":"YulFunctionCall","src":"8910:8:6"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":934,"isOffset":false,"isSlot":false,"src":"8587:4:6","valueSize":1},{"declaration":934,"isOffset":false,"isSlot":false,"src":"8606:4:6","valueSize":1},{"declaration":938,"isOffset":false,"isSlot":false,"src":"8852:10:6","valueSize":1},{"declaration":941,"isOffset":false,"isSlot":false,"src":"8895:11:6","valueSize":1},{"declaration":932,"isOffset":false,"isSlot":false,"src":"8573:5:6","valueSize":1}],"flags":["memory-safe"],"id":943,"nodeType":"InlineAssembly","src":"8507:421:6"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"8942:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"8994:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:6","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":949,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8968:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}],"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:6","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:6","memberName":"code","nodeType":"MemberAccess","src":"8960:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:6","memberName":"length","nodeType":"MemberAccess","src":"8960:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":967,"nodeType":"IfStatement","src":"8938:146:6","trueBody":{"id":966,"nodeType":"Block","src":"9012:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":962,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9066:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:6","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":959,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9033:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"RevertStatement","src":"9026:47:6"}]}}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"7879:486:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":969,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:6","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"token","nameLocation":"8406:5:6","nodeType":"VariableDeclaration","scope":969,"src":"8399:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":931,"nodeType":"UserDefinedTypeName","pathNode":{"id":930,"name":"IERC20","nameLocations":["8399:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"8399:6:6"},"referencedDeclaration":547,"src":"8399:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"data","nameLocation":"8426:4:6","nodeType":"VariableDeclaration","scope":969,"src":"8413:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:6"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"8440:0:6"},"scope":1011,"src":"8370:720:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"9681:391:6","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"success","nameLocation":"9696:7:6","nodeType":"VariableDeclaration","scope":1009,"src":"9691:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":980,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":982,"nodeType":"VariableDeclarationStatement","src":"9691:12:6"},{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:6","nodeType":"VariableDeclaration","scope":1009,"src":"9713:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":985,"nodeType":"VariableDeclarationStatement","src":"9713:18:6"},{"assignments":[987],"declarations":[{"constant":false,"id":987,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:6","nodeType":"VariableDeclaration","scope":1009,"src":"9741:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":988,"nodeType":"VariableDeclarationStatement","src":"9741:19:6"},{"AST":{"nodeType":"YulBlock","src":"9795:174:6","statements":[{"nodeType":"YulAssignment","src":"9809:71:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:6"},"nodeType":"YulFunctionCall","src":"9825:5:6"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:6","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:6"},"nodeType":"YulFunctionCall","src":"9842:15:6"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:6"},"nodeType":"YulFunctionCall","src":"9859:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:6","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:6"},"nodeType":"YulFunctionCall","src":"9820:60:6"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:6"}]},{"nodeType":"YulAssignment","src":"9893:30:6","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:6"},"nodeType":"YulFunctionCall","src":"9907:16:6"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:6"}]},{"nodeType":"YulAssignment","src":"9936:23:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:6","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:6"},"nodeType":"YulFunctionCall","src":"9951:8:6"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":975,"isOffset":false,"isSlot":false,"src":"9846:4:6","valueSize":1},{"declaration":975,"isOffset":false,"isSlot":false,"src":"9865:4:6","valueSize":1},{"declaration":984,"isOffset":false,"isSlot":false,"src":"9893:10:6","valueSize":1},{"declaration":987,"isOffset":false,"isSlot":false,"src":"9936:11:6","valueSize":1},{"declaration":981,"isOffset":false,"isSlot":false,"src":"9809:7:6","valueSize":1},{"declaration":973,"isOffset":false,"isSlot":false,"src":"9832:5:6","valueSize":1}],"flags":["memory-safe"],"id":989,"nodeType":"InlineAssembly","src":"9770:199:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"9985:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":991,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"9997:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"10048:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:6","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":996,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"10023:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:6","typeDescriptions":{}}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:6","memberName":"code","nodeType":"MemberAccess","src":"10015:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:6","memberName":"length","nodeType":"MemberAccess","src":"10015:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":979,"id":1008,"nodeType":"Return","src":"9978:87:6"}]},"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"9096:491:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:6","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"token","nameLocation":"9632:5:6","nodeType":"VariableDeclaration","scope":1010,"src":"9625:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":972,"nodeType":"UserDefinedTypeName","pathNode":{"id":971,"name":"IERC20","nameLocations":["9625:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"9625:6:6"},"referencedDeclaration":547,"src":"9625:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"data","nameLocation":"9652:4:6","nodeType":"VariableDeclaration","scope":1010,"src":"9639:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":974,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:6"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"9675:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":977,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:6"},"scope":1011,"src":"9592:480:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1012,"src":"698:9376:6","usedErrors":[559,568],"usedEvents":[]}],"src":"115:9960:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1041]},"id":1042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1013,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1041,"linearizedBaseContracts":[1041],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1022,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":1019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1018,"id":1021,"nodeType":"Return","src":"728:17:7"}]},"id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":1041,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1031,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":1028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1027,"id":1030,"nodeType":"Return","src":"835:15:7"}]},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1025,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":1041,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1039,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1036,"id":1038,"nodeType":"Return","src":"945:8:7"}]},"id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":1041,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1042,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1041],"Pausable":[1149]},"id":1150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1043,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1150,"sourceUnit":1042,"src":"128:45:8","symbolAliases":[{"foreign":{"id":1044,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"136:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1047,"name":"Context","nameLocations":["645:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"645:7:8"},"id":1048,"nodeType":"InheritanceSpecifier","src":"645:7:8"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"175:439:8","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1149,"linearizedBaseContracts":[1149,1041],"name":"Pausable","nameLocation":"633:8:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1050,"mutability":"mutable","name":"_paused","nameLocation":"672:7:8","nodeType":"VariableDeclaration","scope":1149,"src":"659:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1049,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"686:73:8","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1055,"name":"Paused","nameLocation":"770:6:8","nodeType":"EventDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:8","nodeType":"VariableDeclaration","scope":1055,"src":"777:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:8"},"src":"764:30:8"},{"anonymous":false,"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"800:70:8","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1060,"name":"Unpaused","nameLocation":"881:8:8","nodeType":"EventDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:8","nodeType":"VariableDeclaration","scope":1060,"src":"890:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:8"},"src":"875:32:8"},{"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"913:76:8","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1063,"name":"EnforcedPause","nameLocation":"1000:13:8","nodeType":"ErrorDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"1013:2:8"},"src":"994:22:8"},{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"1022:80:8","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1066,"name":"ExpectedPause","nameLocation":"1113:13:8","nodeType":"ErrorDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"1126:2:8"},"src":"1107:22:8"},{"body":{"id":1073,"nodeType":"Block","src":"1340:47:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1069,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1350:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"1350:19:8"},{"id":1072,"nodeType":"PlaceholderStatement","src":"1379:1:8"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"1135:175:8","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1074,"name":"whenNotPaused","nameLocation":"1324:13:8","nodeType":"ModifierDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"1337:2:8"},"src":"1315:72:8","virtual":false,"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"1587:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1077,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"1597:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"1597:16:8"},{"id":1080,"nodeType":"PlaceholderStatement","src":"1623:1:8"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"1393:167:8","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1082,"name":"whenPaused","nameLocation":"1574:10:8","nodeType":"ModifierDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"1584:2:8"},"src":"1565:66:8","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"1779:31:8","statements":[{"expression":{"id":1088,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1796:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1087,"id":1089,"nodeType":"Return","src":"1789:14:8"}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"1637:84:8","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:8","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"1741:2:8"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"1773:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1085,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:8"},"scope":1149,"src":"1726:84:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1102,"nodeType":"Block","src":"1929:77:8","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1095,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"1943:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"1939:61:8","trueBody":{"id":1100,"nodeType":"Block","src":"1953:47:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1097,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"1974:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"1967:22:8"}]}}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1816:57:8","text":" @dev Throws if the contract is paused."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:8","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"1904:2:8"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[],"src":"1929:0:8"},"scope":1149,"src":"1878:128:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"2126:78:8","statements":[{"condition":{"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:8","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1107,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2141:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1114,"nodeType":"IfStatement","src":"2136:62:8","trueBody":{"id":1113,"nodeType":"Block","src":"2151:47:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1110,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"2172:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"RevertStatement","src":"2165:22:8"}]}}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"2012:61:8","text":" @dev Throws if the contract is not paused."},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:8","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"2101:2:8"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"2126:0:8"},"scope":1149,"src":"2078:126:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"2388:66:8","statements":[{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1122,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2398:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1125,"nodeType":"ExpressionStatement","src":"2398:14:8"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1127,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2434:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1126,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2427:6:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"EmitStatement","src":"2422:25:8"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"2210:124:8","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1132,"implemented":true,"kind":"function","modifiers":[{"id":1120,"kind":"modifierInvocation","modifierName":{"id":1119,"name":"whenNotPaused","nameLocations":["2374:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"2374:13:8"},"nodeType":"ModifierInvocation","src":"2374:13:8"}],"name":"_pause","nameLocation":"2348:6:8","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"2354:2:8"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"2388:0:8"},"scope":1149,"src":"2339:115:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"2634:69:8","statements":[{"expression":{"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1138,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2644:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1141,"nodeType":"ExpressionStatement","src":"2644:15:8"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1143,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2683:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1142,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2674:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"EmitStatement","src":"2669:27:8"}]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"2460:121:8","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1148,"implemented":true,"kind":"function","modifiers":[{"id":1136,"kind":"modifierInvocation","modifierName":{"id":1135,"name":"whenPaused","nameLocations":["2623:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2623:10:8"},"nodeType":"ModifierInvocation","src":"2623:10:8"}],"name":"_unpause","nameLocation":"2595:8:8","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"2603:2:8"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2634:0:8"},"scope":1149,"src":"2586:117:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1150,"src":"615:2090:8","usedErrors":[1063,1066],"usedEvents":[1055,1060]}],"src":"102:2604:8"},"id":8},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1218]},"id":1219,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1151,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"135:894:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1218,"linearizedBaseContracts":[1218],"name":"ReentrancyGuard","nameLocation":"1048:15:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1155,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:9","nodeType":"VariableDeclaration","scope":1218,"src":"1818:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1158,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:9","nodeType":"VariableDeclaration","scope":1218,"src":"1864:36:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1160,"mutability":"mutable","name":"_status","nameLocation":"1923:7:9","nodeType":"VariableDeclaration","scope":1218,"src":"1907:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"1937:52:9","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1163,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:9","nodeType":"ErrorDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"2028:2:9"},"src":"1994:37:9"},{"body":{"id":1170,"nodeType":"Block","src":"2051:38:9","statements":[{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1166,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1167,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2071:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1169,"nodeType":"ExpressionStatement","src":"2061:21:9"}]},"id":1171,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"2048:2:9"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"2051:0:9"},"scope":1218,"src":"2037:52:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"2490:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1174,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"2500:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"2500:21:9"},{"id":1177,"nodeType":"PlaceholderStatement","src":"2531:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1178,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"2542:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"2542:20:9"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"2095:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1182,"name":"nonReentrant","nameLocation":"2475:12:9","nodeType":"ModifierDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"2487:2:9"},"src":"2466:103:9","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"2614:268:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1186,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1192,"nodeType":"IfStatement","src":"2698:86:9","trueBody":{"id":1191,"nodeType":"Block","src":"2722:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1188,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2743:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"RevertStatement","src":"2736:37:9"}]}},{"expression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1193,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1194,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2868:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1196,"nodeType":"ExpressionStatement","src":"2858:17:9"}]},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:9","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"2603:2:9"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"2614:0:9"},"scope":1218,"src":"2575:307:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1205,"nodeType":"Block","src":"2926:170:9","statements":[{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1201,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"3068:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1202,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3078:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"3068:21:9"}]},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:9","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2915:2:9"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"2926:0:9"},"scope":1218,"src":"2888:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1216,"nodeType":"Block","src":"3339:42:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"3356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1213,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3367:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1211,"id":1215,"nodeType":"Return","src":"3349:25:9"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"3102:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:9","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3307:2:9"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"3333:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1209,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:9"},"scope":1218,"src":"3275:106:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1219,"src":"1030:2353:9","usedErrors":[1163],"usedEvents":[]}],"src":"109:3275:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1242],"IERC165":[1254]},"id":1243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1220,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":1255,"src":"140:38:10","symbolAliases":[{"foreign":{"id":1221,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1224,"name":"IERC165","nameLocations":["688:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1254,"src":"688:7:10"},"id":1225,"nodeType":"InheritanceSpecifier","src":"688:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"180:479:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1242,"linearizedBaseContracts":[1242,1254],"name":"ERC165","nameLocation":"678:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1253],"body":{"id":1240,"nodeType":"Block","src":"812:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"829:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1235,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"849:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1254_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1254_$","typeString":"type(contract IERC165)"}],"id":1234,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1254","typeString":"type(contract IERC165)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1232,"id":1239,"nodeType":"Return","src":"822:47:10"}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"702:23:10","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:10","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:10","nodeType":"VariableDeclaration","scope":1241,"src":"757:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1227,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:10"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"806:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1230,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:10"},"scope":1242,"src":"730:146:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1243,"src":"660:218:10","usedErrors":[],"usedEvents":[]}],"src":"114:765:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1254]},"id":1255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1244,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"142:280:11","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1254,"linearizedBaseContracts":[1254],"name":"IERC165","nameLocation":"433:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"447:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1253,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:11","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:11","nodeType":"VariableDeclaration","scope":1253,"src":"819:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1247,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:11"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1253,"src":"862:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1250,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:11"},"scope":1254,"src":"792:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1255,"src":"423:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:756:11"},"id":11},"contracts/AutomatedSqudyCampaignManager.sol":{"ast":{"absolutePath":"contracts/AutomatedSqudyCampaignManager.sol","exportedSymbols":{"AccessControl":[296],"AutomatedSqudyCampaignManager":[2990],"Context":[1041],"ERC165":[1242],"IAccessControl":[379],"IERC1363":[461],"IERC165":[1254],"IERC20":[547],"Pausable":[1149],"ReentrancyGuard":[1218],"SafeERC20":[1011]},"id":2991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2991,"sourceUnit":297,"src":"58:58:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2991,"sourceUnit":1219,"src":"117:59:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":1259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2991,"sourceUnit":1150,"src":"177:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1260,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2991,"sourceUnit":548,"src":"230:56:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1261,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2991,"sourceUnit":1012,"src":"287:65:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1263,"name":"AccessControl","nameLocations":["589:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"589:13:12"},"id":1264,"nodeType":"InheritanceSpecifier","src":"589:13:12"},{"baseName":{"id":1265,"name":"ReentrancyGuard","nameLocations":["604:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":1218,"src":"604:15:12"},"id":1266,"nodeType":"InheritanceSpecifier","src":"604:15:12"},{"baseName":{"id":1267,"name":"Pausable","nameLocations":["621:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1149,"src":"621:8:12"},"id":1268,"nodeType":"InheritanceSpecifier","src":"621:8:12"}],"canonicalName":"AutomatedSqudyCampaignManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"409:137:12","text":" @title AutomatedSqudyCampaignManager\n @dev Simplified campaign manager with automated winner selection\n @author Squdy Team"},"fullyImplemented":true,"id":2990,"linearizedBaseContracts":[2990,1149,1218,296,1242,1254,379,1041],"name":"AutomatedSqudyCampaignManager","nameLocation":"556:29:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1272,"libraryName":{"id":1269,"name":"SafeERC20","nameLocations":["642:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1011,"src":"642:9:12"},"nodeType":"UsingForDirective","src":"636:27:12","typeName":{"id":1271,"nodeType":"UserDefinedTypeName","pathNode":{"id":1270,"name":"IERC20","nameLocations":["656:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"656:6:12"},"referencedDeclaration":547,"src":"656:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"75b238fc","id":1277,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"736:10:12","nodeType":"VariableDeclaration","scope":2990,"src":"712:60:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"712:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"759:12:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":1274,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"749:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"749:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f5b541a6","id":1282,"mutability":"constant","name":"OPERATOR_ROLE","nameLocation":"802:13:12","nodeType":"VariableDeclaration","scope":2990,"src":"778:66:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"778:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f50455241544f525f524f4c45","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"828:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929","typeString":"literal_string \"OPERATOR_ROLE\""},"value":"OPERATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929","typeString":"literal_string \"OPERATOR_ROLE\""}],"id":1279,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"818:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"818:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"4eb53f99","id":1285,"mutability":"immutable","name":"squdyToken","nameLocation":"924:10:12","nodeType":"VariableDeclaration","scope":2990,"src":"900:34:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":1284,"nodeType":"UserDefinedTypeName","pathNode":{"id":1283,"name":"IERC20","nameLocations":["900:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"900:6:12"},"referencedDeclaration":547,"src":"900:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"id":1287,"mutability":"mutable","name":"_campaignIds","nameLocation":"956:12:12","nodeType":"VariableDeclaration","scope":2990,"src":"940:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1289,"mutability":"mutable","name":"_randomSeed","nameLocation":"990:11:12","nodeType":"VariableDeclaration","scope":2990,"src":"974:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"141961bc","id":1294,"mutability":"mutable","name":"campaigns","nameLocation":"1072:9:12","nodeType":"VariableDeclaration","scope":2990,"src":"1036:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign)"},"typeName":{"id":1293,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1036:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1292,"nodeType":"UserDefinedTypeName","pathNode":{"id":1291,"name":"Campaign","nameLocations":["1055:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"1055:8:12"},"referencedDeclaration":1346,"src":"1055:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}}},"visibility":"public"},{"constant":false,"functionSelector":"02e060c6","id":1301,"mutability":"mutable","name":"participants","nameLocation":"1146:12:12","nodeType":"VariableDeclaration","scope":2990,"src":"1087:71:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant))"},"typeName":{"id":1300,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1087:51:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1299,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1106:31:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1298,"nodeType":"UserDefinedTypeName","pathNode":{"id":1297,"name":"Participant","nameLocations":["1125:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"1125:11:12"},"referencedDeclaration":1357,"src":"1125:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"}}}},"visibility":"public"},{"constant":false,"functionSelector":"35abd49b","id":1306,"mutability":"mutable","name":"campaignParticipants","nameLocation":"1201:20:12","nodeType":"VariableDeclaration","scope":2990,"src":"1164:57:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":1305,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1164:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1304,"nodeType":"ArrayTypeName","src":"1183:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"canonicalName":"AutomatedSqudyCampaignManager.Campaign","id":1346,"members":[{"constant":false,"id":1308,"mutability":"mutable","name":"id","nameLocation":"1307:2:12","nodeType":"VariableDeclaration","scope":1346,"src":"1299:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"name","nameLocation":"1326:4:12","nodeType":"VariableDeclaration","scope":1346,"src":"1319:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1309,"name":"string","nodeType":"ElementaryTypeName","src":"1319:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"description","nameLocation":"1347:11:12","nodeType":"VariableDeclaration","scope":1346,"src":"1340:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1311,"name":"string","nodeType":"ElementaryTypeName","src":"1340:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"imageUrl","nameLocation":"1375:8:12","nodeType":"VariableDeclaration","scope":1346,"src":"1368:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1313,"name":"string","nodeType":"ElementaryTypeName","src":"1368:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"softCap","nameLocation":"1401:7:12","nodeType":"VariableDeclaration","scope":1346,"src":"1393:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1393:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"hardCap","nameLocation":"1426:7:12","nodeType":"VariableDeclaration","scope":1346,"src":"1418:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1418:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"ticketAmount","nameLocation":"1451:12:12","nodeType":"VariableDeclaration","scope":1346,"src":"1443:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"currentAmount","nameLocation":"1481:13:12","nodeType":"VariableDeclaration","scope":1346,"src":"1473:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"refundableAmount","nameLocation":"1512:16:12","nodeType":"VariableDeclaration","scope":1346,"src":"1504:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"startDate","nameLocation":"1546:9:12","nodeType":"VariableDeclaration","scope":1346,"src":"1538:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"endDate","nameLocation":"1573:7:12","nodeType":"VariableDeclaration","scope":1346,"src":"1565:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"participantCount","nameLocation":"1598:16:12","nodeType":"VariableDeclaration","scope":1346,"src":"1590:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"prizes","nameLocation":"1633:6:12","nodeType":"VariableDeclaration","scope":1346,"src":"1624:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1331,"name":"string","nodeType":"ElementaryTypeName","src":"1624:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1332,"nodeType":"ArrayTypeName","src":"1624:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"winners","nameLocation":"1659:7:12","nodeType":"VariableDeclaration","scope":1346,"src":"1649:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1335,"nodeType":"ArrayTypeName","src":"1649:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"status","nameLocation":"1691:6:12","nodeType":"VariableDeclaration","scope":1346,"src":"1676:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"typeName":{"id":1338,"nodeType":"UserDefinedTypeName","pathNode":{"id":1337,"name":"CampaignStatus","nameLocations":["1676:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"1676:14:12"},"referencedDeclaration":1364,"src":"1676:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"tokensAreBurned","nameLocation":"1712:15:12","nodeType":"VariableDeclaration","scope":1346,"src":"1707:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1340,"name":"bool","nodeType":"ElementaryTypeName","src":"1707:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"totalBurned","nameLocation":"1745:11:12","nodeType":"VariableDeclaration","scope":1346,"src":"1737:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"winnerSelectionBlock","nameLocation":"1774:20:12","nodeType":"VariableDeclaration","scope":1346,"src":"1766:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Campaign","nameLocation":"1280:8:12","nodeType":"StructDefinition","scope":2990,"src":"1273:571:12","visibility":"public"},{"canonicalName":"AutomatedSqudyCampaignManager.Participant","id":1357,"members":[{"constant":false,"id":1348,"mutability":"mutable","name":"stakedAmount","nameLocation":"1887:12:12","nodeType":"VariableDeclaration","scope":1357,"src":"1879:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"ticketCount","nameLocation":"1917:11:12","nodeType":"VariableDeclaration","scope":1357,"src":"1909:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"hasCompletedSocial","nameLocation":"1943:18:12","nodeType":"VariableDeclaration","scope":1357,"src":"1938:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1351,"name":"bool","nodeType":"ElementaryTypeName","src":"1938:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"joinedAt","nameLocation":"1979:8:12","nodeType":"VariableDeclaration","scope":1357,"src":"1971:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"hasWithdrawnRefund","nameLocation":"2002:18:12","nodeType":"VariableDeclaration","scope":1357,"src":"1997:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1355,"name":"bool","nodeType":"ElementaryTypeName","src":"1997:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Participant","nameLocation":"1857:11:12","nodeType":"StructDefinition","scope":2990,"src":"1850:177:12","visibility":"public"},{"canonicalName":"AutomatedSqudyCampaignManager.CampaignStatus","id":1364,"members":[{"id":1358,"name":"Pending","nameLocation":"2055:7:12","nodeType":"EnumValue","src":"2055:7:12"},{"id":1359,"name":"Active","nameLocation":"2064:6:12","nodeType":"EnumValue","src":"2064:6:12"},{"id":1360,"name":"Paused","nameLocation":"2072:6:12","nodeType":"EnumValue","src":"2072:6:12"},{"id":1361,"name":"Finished","nameLocation":"2080:8:12","nodeType":"EnumValue","src":"2080:8:12"},{"id":1362,"name":"Cancelled","nameLocation":"2090:9:12","nodeType":"EnumValue","src":"2090:9:12"},{"id":1363,"name":"Burned","nameLocation":"2101:6:12","nodeType":"EnumValue","src":"2101:6:12"}],"name":"CampaignStatus","nameLocation":"2038:14:12","nodeType":"EnumDefinition","src":"2033:76:12"},{"anonymous":false,"eventSelector":"c04c663886cae794dc52158f70fe6c8ee3b0140d4f48647282f9b693ff688a65","id":1372,"name":"CampaignCreated","nameLocation":"2161:15:12","nodeType":"EventDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2193:10:12","nodeType":"VariableDeclaration","scope":1372,"src":"2177:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1368,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"2221:7:12","nodeType":"VariableDeclaration","scope":1372,"src":"2205:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"2205:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2237:4:12","nodeType":"VariableDeclaration","scope":1372,"src":"2230:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1369,"name":"string","nodeType":"ElementaryTypeName","src":"2230:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2176:66:12"},"src":"2155:88:12"},{"anonymous":false,"eventSelector":"bf3a2998bf95effb9622e3aeea768ec248f238862fd602100075c04d21caa23c","id":1382,"name":"UserStaked","nameLocation":"2254:10:12","nodeType":"EventDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2281:10:12","nodeType":"VariableDeclaration","scope":1382,"src":"2265:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2309:4:12","nodeType":"VariableDeclaration","scope":1382,"src":"2293:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"2293:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1378,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2323:6:12","nodeType":"VariableDeclaration","scope":1382,"src":"2315:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1380,"indexed":false,"mutability":"mutable","name":"tickets","nameLocation":"2339:7:12","nodeType":"VariableDeclaration","scope":1382,"src":"2331:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2264:83:12"},"src":"2248:100:12"},{"anonymous":false,"eventSelector":"d8e2a0fb3631991dd34ac6af97a04f3485326d9f70043bb29f54e66f0c5577c6","id":1388,"name":"SocialTasksCompleted","nameLocation":"2359:20:12","nodeType":"EventDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2396:10:12","nodeType":"VariableDeclaration","scope":1388,"src":"2380:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1386,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2424:4:12","nodeType":"VariableDeclaration","scope":1388,"src":"2408:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"2408:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2379:50:12"},"src":"2353:77:12"},{"anonymous":false,"eventSelector":"a15551854f54807a0f0db8e3b861523fd994877676824ed8603655ab18ca6dd8","id":1397,"name":"WinnersSelected","nameLocation":"2441:15:12","nodeType":"EventDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2473:10:12","nodeType":"VariableDeclaration","scope":1397,"src":"2457:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1393,"indexed":false,"mutability":"mutable","name":"winners","nameLocation":"2495:7:12","nodeType":"VariableDeclaration","scope":1397,"src":"2485:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"2485:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1392,"nodeType":"ArrayTypeName","src":"2485:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1395,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"2512:11:12","nodeType":"VariableDeclaration","scope":1397,"src":"2504:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2504:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2456:68:12"},"src":"2435:90:12"},{"anonymous":false,"eventSelector":"8bc81353cf6671d259d22783e39ed930583c86f3f4cf7e981298e6a872dfb15d","id":1403,"name":"TokensBurned","nameLocation":"2536:12:12","nodeType":"EventDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2565:10:12","nodeType":"VariableDeclaration","scope":1403,"src":"2549:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2585:6:12","nodeType":"VariableDeclaration","scope":1403,"src":"2577:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2548:44:12"},"src":"2530:63:12"},{"anonymous":false,"eventSelector":"7e5e6bfcab605d9254dbb5c3b4c8bd65ee4705bb30b1fc434d9651d24d368f36","id":1410,"name":"CampaignStatusChanged","nameLocation":"2604:21:12","nodeType":"EventDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2642:10:12","nodeType":"VariableDeclaration","scope":1410,"src":"2626:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1408,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"2669:6:12","nodeType":"VariableDeclaration","scope":1410,"src":"2654:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"typeName":{"id":1407,"nodeType":"UserDefinedTypeName","pathNode":{"id":1406,"name":"CampaignStatus","nameLocations":["2654:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"2654:14:12"},"referencedDeclaration":1364,"src":"2654:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"visibility":"internal"}],"src":"2625:51:12"},"src":"2598:79:12"},{"anonymous":false,"eventSelector":"f75bd1a9b4e512fc86093732061ee514541c41fcf65f64697ffd3e0f6328c215","id":1416,"name":"CampaignTerminated","nameLocation":"2688:18:12","nodeType":"EventDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2723:10:12","nodeType":"VariableDeclaration","scope":1416,"src":"2707:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1414,"indexed":false,"mutability":"mutable","name":"refunded","nameLocation":"2740:8:12","nodeType":"VariableDeclaration","scope":1416,"src":"2735:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"2735:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2706:43:12"},"src":"2682:68:12"},{"anonymous":false,"eventSelector":"ab1902ee37c92d1a78dda53814d64b815e7e3ee287d60843a3dbd6954e3206b4","id":1420,"name":"CampaignPaused","nameLocation":"2761:14:12","nodeType":"EventDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2792:10:12","nodeType":"VariableDeclaration","scope":1420,"src":"2776:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2775:28:12"},"src":"2755:49:12"},{"anonymous":false,"eventSelector":"25128b02d37802123547e1526ab020238abf16bbc37a5bd0a918d5088b016e95","id":1424,"name":"CampaignResumed","nameLocation":"2815:15:12","nodeType":"EventDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2847:10:12","nodeType":"VariableDeclaration","scope":1424,"src":"2831:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2831:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2830:28:12"},"src":"2809:50:12"},{"anonymous":false,"eventSelector":"70e9f58eec5af783627e59f6af135becb4bcbd768c33d59e8f30f329cde15f2e","id":1432,"name":"CampaignEndDateUpdated","nameLocation":"2870:22:12","nodeType":"EventDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"indexed":true,"mutability":"mutable","name":"campaignId","nameLocation":"2909:10:12","nodeType":"VariableDeclaration","scope":1432,"src":"2893:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"indexed":false,"mutability":"mutable","name":"oldEndDate","nameLocation":"2929:10:12","nodeType":"VariableDeclaration","scope":1432,"src":"2921:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1430,"indexed":false,"mutability":"mutable","name":"newEndDate","nameLocation":"2949:10:12","nodeType":"VariableDeclaration","scope":1432,"src":"2941:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2941:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2892:68:12"},"src":"2864:97:12"},{"body":{"id":1448,"nodeType":"Block","src":"3054:108:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3072:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3085:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3072:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3090:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1441,"name":"_campaignIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3104:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3090:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3072:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e20646f6573206e6f74206578697374","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3118:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_046ec0846a75e1f2163746e85053c7af89d08b456f1f6bc8529a9da6f9cc656d","typeString":"literal_string \"Campaign does not exist\""},"value":"Campaign does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046ec0846a75e1f2163746e85053c7af89d08b456f1f6bc8529a9da6f9cc656d","typeString":"literal_string \"Campaign does not exist\""}],"id":1436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3064:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3064:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"3064:80:12"},{"id":1447,"nodeType":"PlaceholderStatement","src":"3154:1:12"}]},"id":1449,"name":"campaignExists","nameLocation":"3019:14:12","nodeType":"ModifierDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"campaignId","nameLocation":"3042:10:12","nodeType":"VariableDeclaration","scope":1449,"src":"3034:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3034:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3033:20:12"},"src":"3010:152:12","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"3192:124:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1453,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3218:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3233:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3237:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3233:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1452,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3210:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3210:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1458,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3256:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3268:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3272:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3268:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1457,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3248:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3248:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3210:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3281:16:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":1451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3202:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"3202:96:12"},{"id":1466,"nodeType":"PlaceholderStatement","src":"3308:1:12"}]},"id":1468,"name":"onlyOperator","nameLocation":"3177:12:12","nodeType":"ModifierDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"3189:2:12"},"src":"3168:148:12","virtual":false,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"3400:420:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"_squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3418:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3433:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"3433:7:12","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3418:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3445:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":1473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3410:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"3410:59:12"},{"expression":{"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1483,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"3479:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1485,"name":"_squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3499:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3492:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$547_$","typeString":"type(contract IERC20)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"src":"3479:32:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":1488,"nodeType":"ExpressionStatement","src":"3479:32:12"},{"expression":{"arguments":[{"id":1490,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3541:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3561:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3565:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3561:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3530:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1494,"nodeType":"ExpressionStatement","src":"3530:42:12"},{"expression":{"arguments":[{"id":1496,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3593:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3605:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3609:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3605:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1495,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3582:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1500,"nodeType":"ExpressionStatement","src":"3582:34:12"},{"expression":{"arguments":[{"id":1502,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3637:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3652:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3652:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1501,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3626:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3626:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"ExpressionStatement","src":"3626:37:12"},{"expression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3716:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3765:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3771:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"3765:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1515,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3782:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3788:10:12","memberName":"prevrandao","nodeType":"MemberAccess","src":"3782:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3800:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3804:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3800:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1511,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3748:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3752:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"3748:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1510,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3738:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3738:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3730:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3730:7:12","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3730:83:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3716:97:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1523,"nodeType":"ExpressionStatement","src":"3716:97:12"}]},"id":1525,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"_squdyToken","nameLocation":"3387:11:12","nodeType":"VariableDeclaration","scope":1525,"src":"3379:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"3379:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3378:21:12"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"3400:0:12"},"scope":2990,"src":"3367:453:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1693,"nodeType":"Block","src":"4263:1012:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"4281:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1555,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4293:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4299:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4293:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4281:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073746172742064617465","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4310:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3068ffe05273c6f58676e61a4c5e7346b522c994e655660a7c4737f685454361","typeString":"literal_string \"Invalid start date\""},"value":"Invalid start date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3068ffe05273c6f58676e61a4c5e7346b522c994e655660a7c4737f685454361","typeString":"literal_string \"Invalid start date\""}],"id":1553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4273:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"4273:58:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1562,"name":"endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"4349:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1563,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"4359:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4349:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420656e642064617465","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_df60a1a7f65ffce6784eec755d89900c791c4467cbd470f9ad00fba6461b6777","typeString":"literal_string \"Invalid end date\""},"value":"Invalid end date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df60a1a7f65ffce6784eec755d89900c791c4467cbd470f9ad00fba6461b6777","typeString":"literal_string \"Invalid end date\""}],"id":1561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4341:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4341:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1567,"nodeType":"ExpressionStatement","src":"4341:48:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"softCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"4407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4417:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4407:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"hardCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"4422:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1573,"name":"softCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"4432:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4422:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4407:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642063617073","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4441:14:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_55c611f65c359abd3463a2e555d45861304ede2715c8f3148ad76a1f4f4a64f5","typeString":"literal_string \"Invalid caps\""},"value":"Invalid caps"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55c611f65c359abd3463a2e555d45861304ede2715c8f3148ad76a1f4f4a64f5","typeString":"literal_string \"Invalid caps\""}],"id":1568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4399:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"ExpressionStatement","src":"4399:57:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"ticketAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"4474:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4489:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4474:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207469636b657420616d6f756e74","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4492:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd43ae399a90124610ff7f728878716b1e9b03e8b1719c8bbabd18623d816dd7","typeString":"literal_string \"Invalid ticket amount\""},"value":"Invalid ticket amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd43ae399a90124610ff7f728878716b1e9b03e8b1719c8bbabd18623d816dd7","typeString":"literal_string \"Invalid ticket amount\""}],"id":1579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4466:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4466:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"4466:50:12"},{"expression":{"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4527:14:12","subExpression":{"id":1586,"name":"_campaignIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"4527:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1588,"nodeType":"ExpressionStatement","src":"4527:14:12"},{"assignments":[1590],"declarations":[{"constant":false,"id":1590,"mutability":"mutable","name":"campaignId","nameLocation":"4559:10:12","nodeType":"VariableDeclaration","scope":1693,"src":"4551:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1592,"initialValue":{"id":1591,"name":"_campaignIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"4572:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4551:33:12"},{"assignments":[1595],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"campaign","nameLocation":"4612:8:12","nodeType":"VariableDeclaration","scope":1693,"src":"4595:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":1594,"nodeType":"UserDefinedTypeName","pathNode":{"id":1593,"name":"Campaign","nameLocations":["4595:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"4595:8:12"},"referencedDeclaration":1346,"src":"4595:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":1599,"initialValue":{"baseExpression":{"id":1596,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4623:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":1598,"indexExpression":{"id":1597,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4633:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4623:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4595:49:12"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1600,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4654:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4663:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"4654:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1603,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4668:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4654:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"4654:24:12"},{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1606,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4688:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4697:4:12","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"4688:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1609,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"4704:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4688:20:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1611,"nodeType":"ExpressionStatement","src":"4688:20:12"},{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1612,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4718:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4727:11:12","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"4718:20:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1615,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"4741:11:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4718:34:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1617,"nodeType":"ExpressionStatement","src":"4718:34:12"},{"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1618,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4762:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4771:8:12","memberName":"imageUrl","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"4762:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1621,"name":"imageUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"4782:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4762:28:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1623,"nodeType":"ExpressionStatement","src":"4762:28:12"},{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1624,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4800:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4809:7:12","memberName":"softCap","nodeType":"MemberAccess","referencedDeclaration":1316,"src":"4800:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1627,"name":"softCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"4819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4800:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ExpressionStatement","src":"4800:26:12"},{"expression":{"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1630,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4836:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4845:7:12","memberName":"hardCap","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"4836:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1633,"name":"hardCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"4855:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4836:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"nodeType":"ExpressionStatement","src":"4836:26:12"},{"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1636,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4872:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4881:12:12","memberName":"ticketAmount","nodeType":"MemberAccess","referencedDeclaration":1320,"src":"4872:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1639,"name":"ticketAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"4896:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4872:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1641,"nodeType":"ExpressionStatement","src":"4872:36:12"},{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1642,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4918:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4927:9:12","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":1326,"src":"4918:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1645,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"4939:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4918:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"4918:30:12"},{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1648,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4958:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4967:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"4958:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1651,"name":"endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"4977:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4958:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"4958:26:12"},{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1654,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4994:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5003:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"4994:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1657,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"5012:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"5012:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"4994:39:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"id":1660,"nodeType":"ExpressionStatement","src":"4994:39:12"},{"body":{"id":1682,"nodeType":"Block","src":"5125:56:12","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1677,"name":"prizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"5160:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1679,"indexExpression":{"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5167:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5160:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":1672,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5139:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5148:6:12","memberName":"prizes","nodeType":"MemberAccess","referencedDeclaration":1333,"src":"5139:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5155:4:12","memberName":"push","nodeType":"MemberAccess","src":"5139:20:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1681,"nodeType":"ExpressionStatement","src":"5139:31:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5101:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1666,"name":"prizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"5105:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5112:6:12","memberName":"length","nodeType":"MemberAccess","src":"5105:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5101:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"initializationExpression":{"assignments":[1662],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"i","nameLocation":"5094:1:12","nodeType":"VariableDeclaration","scope":1683,"src":"5086:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1664,"initialValue":{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5098:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5086:13:12"},"loopExpression":{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5120:3:12","subExpression":{"id":1669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5120:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ExpressionStatement","src":"5120:3:12"},"nodeType":"ForStatement","src":"5081:100:12"},{"eventCall":{"arguments":[{"id":1685,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"5212:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5224:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5228:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5224:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"5236:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1684,"name":"CampaignCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5196:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5196:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"EmitStatement","src":"5191:50:12"},{"expression":{"id":1691,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"5258:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1552,"id":1692,"nodeType":"Return","src":"5251:17:12"}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"3875:46:12","text":" @dev Creates a new campaign"},"functionSelector":"03463dd9","id":1694,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1548,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4233:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1549,"kind":"modifierInvocation","modifierName":{"id":1547,"name":"onlyRole","nameLocations":["4224:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4224:8:12"},"nodeType":"ModifierInvocation","src":"4224:20:12"}],"name":"createCampaign","nameLocation":"3935:14:12","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"name","nameLocation":"3973:4:12","nodeType":"VariableDeclaration","scope":1694,"src":"3959:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1527,"name":"string","nodeType":"ElementaryTypeName","src":"3959:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"description","nameLocation":"4001:11:12","nodeType":"VariableDeclaration","scope":1694,"src":"3987:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1529,"name":"string","nodeType":"ElementaryTypeName","src":"3987:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"imageUrl","nameLocation":"4036:8:12","nodeType":"VariableDeclaration","scope":1694,"src":"4022:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1531,"name":"string","nodeType":"ElementaryTypeName","src":"4022:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"softCap","nameLocation":"4062:7:12","nodeType":"VariableDeclaration","scope":1694,"src":"4054:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"hardCap","nameLocation":"4087:7:12","nodeType":"VariableDeclaration","scope":1694,"src":"4079:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4079:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"ticketAmount","nameLocation":"4112:12:12","nodeType":"VariableDeclaration","scope":1694,"src":"4104:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"4104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"startDate","nameLocation":"4142:9:12","nodeType":"VariableDeclaration","scope":1694,"src":"4134:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"4134:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"endDate","nameLocation":"4169:7:12","nodeType":"VariableDeclaration","scope":1694,"src":"4161:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"4161:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"prizes","nameLocation":"4202:6:12","nodeType":"VariableDeclaration","scope":1694,"src":"4186:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1543,"name":"string","nodeType":"ElementaryTypeName","src":"4186:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1544,"nodeType":"ArrayTypeName","src":"4186:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3949:265:12"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"4254:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"4254:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4253:9:12"},"scope":2990,"src":"3926:1349:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1883,"nodeType":"Block","src":"5497:1736:12","statements":[{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"campaign","nameLocation":"5524:8:12","nodeType":"VariableDeclaration","scope":1883,"src":"5507:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":1710,"nodeType":"UserDefinedTypeName","pathNode":{"id":1709,"name":"Campaign","nameLocations":["5507:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"5507:8:12"},"referencedDeclaration":1346,"src":"5507:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":1715,"initialValue":{"baseExpression":{"id":1712,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5535:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":1714,"indexExpression":{"id":1713,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"5545:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5535:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5507:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1717,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5574:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5583:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"5574:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1719,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"5593:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5608:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"5593:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"5574:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f7420616374697665","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5616:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""},"value":"Campaign not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""}],"id":1716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5566:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"5566:72:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1726,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5656:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5662:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5656:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1728,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5675:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5684:9:12","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":1326,"src":"5675:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5656:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1731,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5697:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5703:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5697:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1733,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5716:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5725:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"5716:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5697:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5656:76:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f7420696e2070726f6772657373","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5734:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_fda26857398081e2f4288f8766ef282a6709a9931ab3882f9f7438ff982f8dc5","typeString":"literal_string \"Campaign not in progress\""},"value":"Campaign not in progress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fda26857398081e2f4288f8766ef282a6709a9931ab3882f9f7438ff982f8dc5","typeString":"literal_string \"Campaign not in progress\""}],"id":1725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5648:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5648:113:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"5648:113:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"5779:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1742,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5789:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5798:12:12","memberName":"ticketAmount","nodeType":"MemberAccess","referencedDeclaration":1320,"src":"5789:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5779:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e742062656c6f77206d696e696d756d","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5812:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_190c38c712564d7f4d958b7f38b071f18c2060e9fad6cb4b0e097a55947d06d3","typeString":"literal_string \"Amount below minimum\""},"value":"Amount below minimum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_190c38c712564d7f4d958b7f38b071f18c2060e9fad6cb4b0e097a55947d06d3","typeString":"literal_string \"Amount below minimum\""}],"id":1740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5771:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5771:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"5771:64:12"},{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"participant","nameLocation":"5866:11:12","nodeType":"VariableDeclaration","scope":1883,"src":"5846:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"},"typeName":{"id":1749,"nodeType":"UserDefinedTypeName","pathNode":{"id":1748,"name":"Participant","nameLocations":["5846:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"5846:11:12"},"referencedDeclaration":1357,"src":"5846:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"}},"visibility":"internal"}],"id":1757,"initialValue":{"baseExpression":{"baseExpression":{"id":1751,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5880:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":1753,"indexExpression":{"id":1752,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"5893:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5880:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":1756,"indexExpression":{"expression":{"id":1754,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5905:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5905:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5880:36:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5846:70:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1758,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6004:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":1759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6016:12:12","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"6004:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6032:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6004:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1783,"nodeType":"IfStatement","src":"6000:202:12","trueBody":{"id":1782,"nodeType":"Block","src":"6035:167:12","statements":[{"expression":{"arguments":[{"expression":{"id":1766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6087:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6091:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6087:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":1762,"name":"campaignParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"6049:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":1764,"indexExpression":{"id":1763,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6070:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6049:32:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6082:4:12","memberName":"push","nodeType":"MemberAccess","src":"6049:37:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6049:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"6049:49:12"},{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6112:27:12","subExpression":{"expression":{"id":1770,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6112:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6121:16:12","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":1330,"src":"6112:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ExpressionStatement","src":"6112:27:12"},{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1775,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6153:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":1777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6165:8:12","memberName":"joinedAt","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"6153:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1778,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6176:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6182:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"6176:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6153:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1781,"nodeType":"ExpressionStatement","src":"6153:38:12"}]}},{"assignments":[1785],"declarations":[{"constant":false,"id":1785,"mutability":"mutable","name":"balBefore","nameLocation":"6298:9:12","nodeType":"VariableDeclaration","scope":1883,"src":"6290:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6290:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1793,"initialValue":{"arguments":[{"arguments":[{"id":1790,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6339:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_AutomatedSqudyCampaignManager_$2990","typeString":"contract AutomatedSqudyCampaignManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AutomatedSqudyCampaignManager_$2990","typeString":"contract AutomatedSqudyCampaignManager"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6331:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"6331:7:12","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6331:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1786,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6310:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6321:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":504,"src":"6310:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6290:55:12"},{"expression":{"arguments":[{"expression":{"id":1797,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6383:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6383:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1801,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6403:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_AutomatedSqudyCampaignManager_$2990","typeString":"contract AutomatedSqudyCampaignManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AutomatedSqudyCampaignManager_$2990","typeString":"contract AutomatedSqudyCampaignManager"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6395:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"6395:7:12","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6395:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6410:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1794,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6355:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6366:16:12","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":619,"src":"6355:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6355:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1805,"nodeType":"ExpressionStatement","src":"6355:62:12"},{"assignments":[1807],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"received","nameLocation":"6435:8:12","nodeType":"VariableDeclaration","scope":1883,"src":"6427:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"6427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1817,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1812,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6475:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_AutomatedSqudyCampaignManager_$2990","typeString":"contract AutomatedSqudyCampaignManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AutomatedSqudyCampaignManager_$2990","typeString":"contract AutomatedSqudyCampaignManager"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6467:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"6467:7:12","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1808,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6446:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6457:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":504,"src":"6446:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6446:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1815,"name":"balBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6484:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6446:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6427:66:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6511:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1820,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6523:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6532:12:12","memberName":"ticketAmount","nodeType":"MemberAccess","referencedDeclaration":1320,"src":"6523:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6511:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f20736d616c6c2061667465722066656573","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6546:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8ca4b5ef1cf7aeb970a279768ab944c58fa6696191593f9f1b52a1bb85f7fef","typeString":"literal_string \"Amount too small after fees\""},"value":"Amount too small after fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8ca4b5ef1cf7aeb970a279768ab944c58fa6696191593f9f1b52a1bb85f7fef","typeString":"literal_string \"Amount too small after fees\""}],"id":1818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6503:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6503:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"ExpressionStatement","src":"6503:73:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1827,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6641:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6650:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"6641:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1829,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6666:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6641:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1831,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6678:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6687:7:12","memberName":"hardCap","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"6678:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6641:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206861726420636170","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6696:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dc644386c7d327445336e2ec73ca73c47491987366d1e64e60c02bb35b21f08","typeString":"literal_string \"Exceeds hard cap\""},"value":"Exceeds hard cap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dc644386c7d327445336e2ec73ca73c47491987366d1e64e60c02bb35b21f08","typeString":"literal_string \"Exceeds hard cap\""}],"id":1826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6633:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"6633:82:12"},{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"ticketCount","nameLocation":"6782:11:12","nodeType":"VariableDeclaration","scope":1883,"src":"6774:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"6774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6796:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":1840,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6807:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6816:12:12","memberName":"ticketAmount","nodeType":"MemberAccess","referencedDeclaration":1320,"src":"6807:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6796:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6774:54:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"ticketCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6846:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6860:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6846:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420666f72206f6e65207469636b6574","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6863:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4e3c99e32641fa20e3d471645c4c8f34879bdad45c79c6f47eb1cffe7698a990","typeString":"literal_string \"Insufficient for one ticket\""},"value":"Insufficient for one ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4e3c99e32641fa20e3d471645c4c8f34879bdad45c79c6f47eb1cffe7698a990","typeString":"literal_string \"Insufficient for one ticket\""}],"id":1844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6838:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6838:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"6838:55:12"},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1851,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6970:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":1853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6982:12:12","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"6970:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1854,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6998:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6970:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"6970:36:12"},{"expression":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1857,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7016:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":1859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7028:11:12","memberName":"ticketCount","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"7016:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1860,"name":"ticketCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7043:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7016:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1862,"nodeType":"ExpressionStatement","src":"7016:38:12"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1863,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"7064:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7073:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"7064:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1866,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7090:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7064:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"7064:34:12"},{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1869,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"7108:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7117:16:12","memberName":"refundableAmount","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"7108:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1872,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7137:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7108:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"7108:37:12"},{"eventCall":{"arguments":[{"id":1876,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7180:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7192:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7196:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7192:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1879,"name":"received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7204:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1880,"name":"ticketCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7214:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"name":"UserStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7169:10:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7169:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"EmitStatement","src":"7164:62:12"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"5281:50:12","text":" @dev Stake tokens in a campaign"},"functionSelector":"3b7b6188","id":1884,"implemented":true,"kind":"function","modifiers":[{"id":1702,"kind":"modifierInvocation","modifierName":{"id":1701,"name":"nonReentrant","nameLocations":["5420:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"5420:12:12"},"nodeType":"ModifierInvocation","src":"5420:12:12"},{"id":1704,"kind":"modifierInvocation","modifierName":{"id":1703,"name":"whenNotPaused","nameLocations":["5442:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"5442:13:12"},"nodeType":"ModifierInvocation","src":"5442:13:12"},{"arguments":[{"id":1706,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"5480:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1707,"kind":"modifierInvocation","modifierName":{"id":1705,"name":"campaignExists","nameLocations":["5465:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"5465:14:12"},"nodeType":"ModifierInvocation","src":"5465:26:12"}],"name":"stakeTokens","nameLocation":"5345:11:12","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"campaignId","nameLocation":"5365:10:12","nodeType":"VariableDeclaration","scope":1884,"src":"5357:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"amount","nameLocation":"5385:6:12","nodeType":"VariableDeclaration","scope":1884,"src":"5377:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"5377:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:36:12"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"5497:0:12"},"scope":2990,"src":"5336:1897:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2050,"nodeType":"Block","src":"7488:1757:12","statements":[{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"campaign","nameLocation":"7515:8:12","nodeType":"VariableDeclaration","scope":2050,"src":"7498:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":1896,"nodeType":"UserDefinedTypeName","pathNode":{"id":1895,"name":"Campaign","nameLocations":["7498:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"7498:8:12"},"referencedDeclaration":1346,"src":"7498:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":1901,"initialValue":{"baseExpression":{"id":1898,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7526:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":1900,"indexExpression":{"id":1899,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"7536:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7526:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7498:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1903,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"7565:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7574:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"7565:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1905,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7584:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7599:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"7584:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"7565:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f7420616374697665","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7607:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""},"value":"Campaign not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""}],"id":1902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7557:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7557:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"ExpressionStatement","src":"7557:72:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1912,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7647:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7653:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"7647:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1914,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"7665:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7674:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"7665:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7647:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e207374696c6c20616374697665","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7683:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c6a962c7aa86ffa7e0a1d57c16942dc0ea365b59a6d283bd85490c180e6bbce","typeString":"literal_string \"Campaign still active\""},"value":"Campaign still active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c6a962c7aa86ffa7e0a1d57c16942dc0ea365b59a6d283bd85490c180e6bbce","typeString":"literal_string \"Campaign still active\""}],"id":1911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7639:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7639:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1919,"nodeType":"ExpressionStatement","src":"7639:68:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1921,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"7725:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7734:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"7725:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1923,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"7751:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7760:7:12","memberName":"softCap","nodeType":"MemberAccess","referencedDeclaration":1316,"src":"7751:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7725:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f667420636170206e6f742072656163686564","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7769:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6a18c0fce911094bc40c24d18ec8207b5ce1c6b43b52d6b01dd1ae8050c4309","typeString":"literal_string \"Soft cap not reached\""},"value":"Soft cap not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6a18c0fce911094bc40c24d18ec8207b5ce1c6b43b52d6b01dd1ae8050c4309","typeString":"literal_string \"Soft cap not reached\""}],"id":1920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7717:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7717:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"7717:75:12"},{"assignments":[1933],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"eligibleParticipants","nameLocation":"7892:20:12","nodeType":"VariableDeclaration","scope":2050,"src":"7875:37:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"7875:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1932,"nodeType":"ArrayTypeName","src":"7875:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1937,"initialValue":{"arguments":[{"id":1935,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"7939:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1934,"name":"getEligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"7915:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (address[] memory)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7915:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7875:75:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1939,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7968:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7989:6:12","memberName":"length","nodeType":"MemberAccess","src":"7968:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7998:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7968:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20656c696769626c65207061727469636970616e7473","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8001:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51850fcc7c69d4f75782b2a8b5a024308b66458e85cea8edf35305f365c9ceda","typeString":"literal_string \"No eligible participants\""},"value":"No eligible participants"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51850fcc7c69d4f75782b2a8b5a024308b66458e85cea8edf35305f365c9ceda","typeString":"literal_string \"No eligible participants\""}],"id":1938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7960:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7960:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"ExpressionStatement","src":"7960:68:12"},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"winnerCount","nameLocation":"8108:11:12","nodeType":"VariableDeclaration","scope":2050,"src":"8100:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"8100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1951,"initialValue":{"expression":{"expression":{"id":1948,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8122:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8131:6:12","memberName":"prizes","nodeType":"MemberAccess","referencedDeclaration":1333,"src":"8122:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8138:6:12","memberName":"length","nodeType":"MemberAccess","src":"8122:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8100:44:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"winnerCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"8158:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1953,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8172:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8193:6:12","memberName":"length","nodeType":"MemberAccess","src":"8172:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8158:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1962,"nodeType":"IfStatement","src":"8154:113:12","trueBody":{"id":1961,"nodeType":"Block","src":"8201:66:12","statements":[{"expression":{"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"winnerCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"8215:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1957,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8229:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8250:6:12","memberName":"length","nodeType":"MemberAccess","src":"8229:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8215:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1960,"nodeType":"ExpressionStatement","src":"8215:41:12"}]}},{"assignments":[1964],"declarations":[{"constant":false,"id":1964,"mutability":"mutable","name":"entropy","nameLocation":"8376:7:12","nodeType":"VariableDeclaration","scope":2050,"src":"8368:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"8368:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1984,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1971,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8444:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8450:6:12","memberName":"number","nodeType":"MemberAccess","src":"8444:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8459:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8444:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1970,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"8434:9:12","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1976,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"8475:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1977,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8499:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":1978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8508:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"8499:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8535:13:12","subExpression":{"id":1979,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"8535:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1968,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8404:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8408:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"8404:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:154:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1967,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8394:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8394:165:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8386:7:12","typeDescriptions":{}}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:174:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8368:192:12"},{"body":{"id":2020,"nodeType":"Block","src":"8671:314:12","statements":[{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"winner","nameLocation":"8693:6:12","nodeType":"VariableDeclaration","scope":2020,"src":"8685:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"8685:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2004,"initialValue":{"arguments":[{"id":1998,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"8723:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1999,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8735:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"8757:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8767:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8757:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"name":"selectWeightedWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8702:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (uint256,address[] memory,uint256) view returns (address)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8702:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8685:84:12"},{"expression":{"arguments":[{"id":2010,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8805:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2005,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8783:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8792:7:12","memberName":"winners","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"8783:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8800:4:12","memberName":"push","nodeType":"MemberAccess","src":"8783:21:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8783:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"8783:29:12"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8906:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2015,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8945:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2016,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8967:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2014,"name":"removeFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8929:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,address) pure returns (address[] memory)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"8906:68:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2019,"nodeType":"ExpressionStatement","src":"8906:68:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8649:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1990,"name":"winnerCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"8653:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8649:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"initializationExpression":{"assignments":[1986],"declarations":[{"constant":false,"id":1986,"mutability":"mutable","name":"i","nameLocation":"8642:1:12","nodeType":"VariableDeclaration","scope":2021,"src":"8634:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"8634:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1988,"initialValue":{"hexValue":"30","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8646:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8634:13:12"},"loopExpression":{"expression":{"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8666:3:12","subExpression":{"id":1992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8666:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1994,"nodeType":"ExpressionStatement","src":"8666:3:12"},"nodeType":"ForStatement","src":"8629:356:12"},{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2022,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8995:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9004:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"8995:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2025,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9013:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9028:8:12","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"9013:23:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"8995:41:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"id":2028,"nodeType":"ExpressionStatement","src":"8995:41:12"},{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2029,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9046:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9055:20:12","memberName":"winnerSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":1345,"src":"9046:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2032,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9078:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9084:6:12","memberName":"number","nodeType":"MemberAccess","src":"9078:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9046:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"9046:44:12"},{"eventCall":{"arguments":[{"id":2037,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"9122:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2038,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9134:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9143:7:12","memberName":"winners","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"9134:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},{"expression":{"id":2040,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9152:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9158:6:12","memberName":"number","nodeType":"MemberAccess","src":"9152:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2036,"name":"WinnersSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"9106:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address[] memory,uint256)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"EmitStatement","src":"9101:64:12"},{"eventCall":{"arguments":[{"id":2045,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"9202:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2046,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9214:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9229:8:12","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"9214:23:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}],"id":2044,"name":"CampaignStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"9180:21:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_CampaignStatus_$1364_$returns$__$","typeString":"function (uint256,enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9180:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"EmitStatement","src":"9175:63:12"}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"7239:120:12","text":" @dev Automated winner selection when campaign ends\n Can be called by anyone after campaign ends"},"functionSelector":"39a2eb2a","id":2051,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1890,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"7449:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1891,"kind":"modifierInvocation","modifierName":{"id":1889,"name":"campaignExists","nameLocations":["7434:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"7434:14:12"},"nodeType":"ModifierInvocation","src":"7434:26:12"},{"id":1893,"kind":"modifierInvocation","modifierName":{"id":1892,"name":"nonReentrant","nameLocations":["7470:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"7470:12:12"},"nodeType":"ModifierInvocation","src":"7470:12:12"}],"name":"selectWinners","nameLocation":"7373:13:12","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"campaignId","nameLocation":"7395:10:12","nodeType":"VariableDeclaration","scope":2051,"src":"7387:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"7387:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7386:20:12"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"7488:0:12"},"scope":2990,"src":"7364:1881:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2160,"nodeType":"Block","src":"9446:884:12","statements":[{"assignments":[2064],"declarations":[{"constant":false,"id":2064,"mutability":"mutable","name":"campaign","nameLocation":"9473:8:12","nodeType":"VariableDeclaration","scope":2160,"src":"9456:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2063,"nodeType":"UserDefinedTypeName","pathNode":{"id":2062,"name":"Campaign","nameLocations":["9456:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"9456:8:12"},"referencedDeclaration":1346,"src":"9456:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2068,"initialValue":{"baseExpression":{"id":2065,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9484:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2067,"indexExpression":{"id":2066,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9494:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9484:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9456:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2070,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9523:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9532:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"9523:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2072,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9542:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9557:8:12","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"9542:23:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"9523:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57696e6e657273206e6f742073656c6563746564","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9567:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_13e2663d7a8f403a39ec0f7a9a64b3478e5f07b323fd077c049773bc1d68655d","typeString":"literal_string \"Winners not selected\""},"value":"Winners not selected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13e2663d7a8f403a39ec0f7a9a64b3478e5f07b323fd077c049773bc1d68655d","typeString":"literal_string \"Winners not selected\""}],"id":2069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9515:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9515:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"9515:75:12"},{"expression":{"arguments":[{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9608:25:12","subExpression":{"expression":{"id":2079,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9609:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9618:15:12","memberName":"tokensAreBurned","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"9609:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e7320616c7265616479206275726e6564","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9635:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4acd4a6003e950e825575d4fbcd00f272d0c7bf2e427f512299f9663b6891b19","typeString":"literal_string \"Tokens already burned\""},"value":"Tokens already burned"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4acd4a6003e950e825575d4fbcd00f272d0c7bf2e427f512299f9663b6891b19","typeString":"literal_string \"Tokens already burned\""}],"id":2078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9600:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"9600:59:12"},{"assignments":[2086],"declarations":[{"constant":false,"id":2086,"mutability":"mutable","name":"burnAmount","nameLocation":"9678:10:12","nodeType":"VariableDeclaration","scope":2160,"src":"9670:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"9670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2089,"initialValue":{"expression":{"id":2087,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9691:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9700:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"9691:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9670:43:12"},{"expression":{"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2090,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9723:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9732:15:12","memberName":"tokensAreBurned","nodeType":"MemberAccess","referencedDeclaration":1341,"src":"9723:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9750:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9723:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"nodeType":"ExpressionStatement","src":"9723:31:12"},{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2096,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9764:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9773:11:12","memberName":"totalBurned","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"9764:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2099,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"9787:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9764:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"9764:33:12"},{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2102,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9807:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9816:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"9807:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2105,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9825:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9840:6:12","memberName":"Burned","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"9825:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"9807:39:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"id":2108,"nodeType":"ExpressionStatement","src":"9807:39:12"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2109,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9856:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9865:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"9856:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9881:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9856:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"9856:26:12"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2115,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9892:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9901:16:12","memberName":"refundableAmount","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"9892:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9920:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9892:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"nodeType":"ExpressionStatement","src":"9892:29:12"},{"assignments":[2122,null],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"ok","nameLocation":"10019:2:12","nodeType":"VariableDeclaration","scope":2160,"src":"10014:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2121,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2134,"initialValue":{"arguments":[{"arguments":[{"hexValue":"6275726e2875696e7432353629","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10076:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_42966c689b5afe9b9b3f8a7103b2a19980d59629bfd6a20a60972312ed41d836","typeString":"literal_string \"burn(uint256)\""},"value":"burn(uint256)"},{"id":2131,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"10093:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_42966c689b5afe9b9b3f8a7103b2a19980d59629bfd6a20a60972312ed41d836","typeString":"literal_string \"burn(uint256)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2128,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10052:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10056:19:12","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"10052:23:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10052:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2125,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10035:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10027:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"10027:7:12","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10027:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10047:4:12","memberName":"call","nodeType":"MemberAccess","src":"10027:24:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10027:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10013:92:12"},{"condition":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10119:3:12","subExpression":{"id":2135,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"10120:2:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2148,"nodeType":"IfStatement","src":"10115:86:12","trueBody":{"id":2147,"nodeType":"Block","src":"10124:77:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"307864456144","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10170:6:12","typeDescriptions":{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"},"value":"0xdEaD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10162:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"10162:7:12","typeDescriptions":{}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10162:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2144,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"10179:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2137,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10138:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10149:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":592,"src":"10138:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"10138:52:12"}]}},{"eventCall":{"arguments":[{"id":2150,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10229:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2151,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"10241:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10216:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10216:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"EmitStatement","src":"10211:41:12"},{"eventCall":{"arguments":[{"id":2155,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10289:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2156,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"10301:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10316:6:12","memberName":"Burned","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"10301:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}],"id":2154,"name":"CampaignStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10267:21:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_CampaignStatus_$1364_$returns$__$","typeString":"function (uint256,enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10267:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"EmitStatement","src":"10262:61:12"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"9251:69:12","text":" @dev Burn all staked tokens after winner selection"},"functionSelector":"6d1b229d","id":2161,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2057,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9407:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2058,"kind":"modifierInvocation","modifierName":{"id":2056,"name":"campaignExists","nameLocations":["9392:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"9392:14:12"},"nodeType":"ModifierInvocation","src":"9392:26:12"},{"id":2060,"kind":"modifierInvocation","modifierName":{"id":2059,"name":"nonReentrant","nameLocations":["9428:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"9428:12:12"},"nodeType":"ModifierInvocation","src":"9428:12:12"}],"name":"burnTokens","nameLocation":"9334:10:12","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"campaignId","nameLocation":"9353:10:12","nodeType":"VariableDeclaration","scope":2161,"src":"9345:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"9345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9344:20:12"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"9446:0:12"},"scope":2990,"src":"9325:1005:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2262,"nodeType":"Block","src":"10604:699:12","statements":[{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"allParticipants","nameLocation":"10631:15:12","nodeType":"VariableDeclaration","scope":2262,"src":"10614:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"10614:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2173,"nodeType":"ArrayTypeName","src":"10614:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2178,"initialValue":{"baseExpression":{"id":2175,"name":"campaignParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10649:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":2177,"indexExpression":{"id":2176,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"10670:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10649:32:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10614:67:12"},{"assignments":[2183],"declarations":[{"constant":false,"id":2183,"mutability":"mutable","name":"eligible","nameLocation":"10708:8:12","nodeType":"VariableDeclaration","scope":2262,"src":"10691:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"10691:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2182,"nodeType":"ArrayTypeName","src":"10691:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2190,"initialValue":{"arguments":[{"expression":{"id":2187,"name":"allParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10733:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10749:6:12","memberName":"length","nodeType":"MemberAccess","src":"10733:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10719:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"10723:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2185,"nodeType":"ArrayTypeName","src":"10723:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10719:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10691:65:12"},{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"eligibleCount","nameLocation":"10774:13:12","nodeType":"VariableDeclaration","scope":2262,"src":"10766:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2194,"initialValue":{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:25:12"},{"body":{"id":2227,"nodeType":"Block","src":"10855:203:12","statements":[{"condition":{"expression":{"baseExpression":{"baseExpression":{"id":2206,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10873:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2208,"indexExpression":{"id":2207,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"10886:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10873:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2212,"indexExpression":{"baseExpression":{"id":2209,"name":"allParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10898:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2211,"indexExpression":{"id":2210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10914:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10898:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10873:44:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"id":2213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10918:18:12","memberName":"hasCompletedSocial","nodeType":"MemberAccess","referencedDeclaration":1352,"src":"10873:63:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"10869:179:12","trueBody":{"id":2225,"nodeType":"Block","src":"10938:110:12","statements":[{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2214,"name":"eligible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"10956:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2216,"indexExpression":{"id":2215,"name":"eligibleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10965:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10956:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2217,"name":"allParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10982:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2219,"indexExpression":{"id":2218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10998:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10982:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10956:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2221,"nodeType":"ExpressionStatement","src":"10956:44:12"},{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11018:15:12","subExpression":{"id":2222,"name":"eligibleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11018:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"nodeType":"ExpressionStatement","src":"11018:15:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10822:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2200,"name":"allParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10826:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10842:6:12","memberName":"length","nodeType":"MemberAccess","src":"10826:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10822:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2228,"initializationExpression":{"assignments":[2196],"declarations":[{"constant":false,"id":2196,"mutability":"mutable","name":"i","nameLocation":"10815:1:12","nodeType":"VariableDeclaration","scope":2228,"src":"10807:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"10807:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2198,"initialValue":{"hexValue":"30","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10807:13:12"},"loopExpression":{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10850:3:12","subExpression":{"id":2203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10850:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"nodeType":"ExpressionStatement","src":"10850:3:12"},"nodeType":"ForStatement","src":"10802:256:12"},{"assignments":[2233],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"result","nameLocation":"11134:6:12","nodeType":"VariableDeclaration","scope":2262,"src":"11117:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"11117:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2232,"nodeType":"ArrayTypeName","src":"11117:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2239,"initialValue":{"arguments":[{"id":2237,"name":"eligibleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11157:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11143:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2235,"nodeType":"ArrayTypeName","src":"11147:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11143:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11117:54:12"},{"body":{"id":2258,"nodeType":"Block","src":"11225:48:12","statements":[{"expression":{"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"11239:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2252,"indexExpression":{"id":2251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"11246:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11239:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2253,"name":"eligible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"11251:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2255,"indexExpression":{"id":2254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"11260:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11251:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11239:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2257,"nodeType":"ExpressionStatement","src":"11239:23:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"11201:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2245,"name":"eligibleCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11205:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11201:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"initializationExpression":{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"i","nameLocation":"11194:1:12","nodeType":"VariableDeclaration","scope":2259,"src":"11186:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2243,"initialValue":{"hexValue":"30","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11186:13:12"},"loopExpression":{"expression":{"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11220:3:12","subExpression":{"id":2247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"11220:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"nodeType":"ExpressionStatement","src":"11220:3:12"},"nodeType":"ForStatement","src":"11181:92:12"},{"expression":{"id":2260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"11290:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2169,"id":2261,"nodeType":"Return","src":"11283:13:12"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"10389:84:12","text":" @dev Get eligible participants (those who completed social tasks)"},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"getEligibleParticipants","nameLocation":"10487:23:12","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"campaignId","nameLocation":"10519:10:12","nodeType":"VariableDeclaration","scope":2263,"src":"10511:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"10511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10510:20:12"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"10581:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"10581:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2167,"nodeType":"ArrayTypeName","src":"10581:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10580:18:12"},"scope":2990,"src":"10478:825:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2351,"nodeType":"Block","src":"11578:879:12","statements":[{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"totalTickets","nameLocation":"11657:12:12","nodeType":"VariableDeclaration","scope":2351,"src":"11649:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"11649:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2279,"initialValue":{"hexValue":"30","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11672:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11649:24:12"},{"body":{"id":2302,"nodeType":"Block","src":"11741:102:12","statements":[{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2291,"name":"totalTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"11755:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":2292,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"11771:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2294,"indexExpression":{"id":2293,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"11784:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11771:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2298,"indexExpression":{"baseExpression":{"id":2295,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"11796:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2297,"indexExpression":{"id":2296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"11817:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11796:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11771:49:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"id":2299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11821:11:12","memberName":"ticketCount","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"11771:61:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11755:77:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"11755:77:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"11703:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2285,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"11707:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11728:6:12","memberName":"length","nodeType":"MemberAccess","src":"11707:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11703:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"initializationExpression":{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"i","nameLocation":"11696:1:12","nodeType":"VariableDeclaration","scope":2303,"src":"11688:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"11688:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2283,"initialValue":{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11700:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11688:13:12"},"loopExpression":{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11736:3:12","subExpression":{"id":2288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"11736:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ExpressionStatement","src":"11736:3:12"},"nodeType":"ForStatement","src":"11683:160:12"},{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"randomTicket","nameLocation":"11916:12:12","nodeType":"VariableDeclaration","scope":2351,"src":"11908:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2306,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"11931:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2307,"name":"totalTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"11944:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11931:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11908:48:12"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"cumulativeTickets","nameLocation":"12046:17:12","nodeType":"VariableDeclaration","scope":2351,"src":"12038:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"12038:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2313,"initialValue":{"hexValue":"30","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12066:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12038:29:12"},{"body":{"id":2345,"nodeType":"Block","src":"12135:221:12","statements":[{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2325,"name":"cumulativeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"12149:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":2326,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"12170:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2328,"indexExpression":{"id":2327,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"12183:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12170:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2332,"indexExpression":{"baseExpression":{"id":2329,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12195:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2331,"indexExpression":{"id":2330,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"12216:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12195:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12170:49:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"id":2333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12220:11:12","memberName":"ticketCount","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"12170:61:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12149:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2335,"nodeType":"ExpressionStatement","src":"12149:82:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2336,"name":"randomTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"12249:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2337,"name":"cumulativeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"12264:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12249:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2344,"nodeType":"IfStatement","src":"12245:101:12","trueBody":{"id":2343,"nodeType":"Block","src":"12283:63:12","statements":[{"expression":{"baseExpression":{"id":2339,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12308:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2341,"indexExpression":{"id":2340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"12329:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12308:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2275,"id":2342,"nodeType":"Return","src":"12301:30:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"12097:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2319,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12101:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12122:6:12","memberName":"length","nodeType":"MemberAccess","src":"12101:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12097:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"initializationExpression":{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"i","nameLocation":"12090:1:12","nodeType":"VariableDeclaration","scope":2346,"src":"12082:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2317,"initialValue":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12094:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12082:13:12"},"loopExpression":{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12130:3:12","subExpression":{"id":2322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"12130:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"12130:3:12"},"nodeType":"ForStatement","src":"12077:279:12"},{"expression":{"baseExpression":{"id":2347,"name":"eligibleParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12427:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2349,"indexExpression":{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12448:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12427:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2275,"id":2350,"nodeType":"Return","src":"12420:30:12"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"11309:91:12","text":" @dev Select winner using weighted random selection based on ticket count"},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"selectWeightedWinner","nameLocation":"11414:20:12","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"campaignId","nameLocation":"11452:10:12","nodeType":"VariableDeclaration","scope":2352,"src":"11444:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11444:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"eligibleParticipants","nameLocation":"11490:20:12","nodeType":"VariableDeclaration","scope":2352,"src":"11473:37:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2268,"nodeType":"ArrayTypeName","src":"11473:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"randomness","nameLocation":"11529:10:12","nodeType":"VariableDeclaration","scope":2352,"src":"11521:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11434:111:12"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2352,"src":"11569:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"11569:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11568:9:12"},"scope":2990,"src":"11405:1052:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2415,"nodeType":"Block","src":"12653:334:12","statements":[{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"result","nameLocation":"12680:6:12","nodeType":"VariableDeclaration","scope":2415,"src":"12663:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"12663:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2367,"nodeType":"ArrayTypeName","src":"12663:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2377,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2372,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12703:3:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12707:6:12","memberName":"length","nodeType":"MemberAccess","src":"12703:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12716:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12703:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12689:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"12693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2370,"nodeType":"ArrayTypeName","src":"12693:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12689:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12663:55:12"},{"assignments":[2379],"declarations":[{"constant":false,"id":2379,"mutability":"mutable","name":"resultIndex","nameLocation":"12736:11:12","nodeType":"VariableDeclaration","scope":2415,"src":"12728:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"12728:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2381,"initialValue":{"hexValue":"30","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12750:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12728:23:12"},{"body":{"id":2411,"nodeType":"Block","src":"12811:138:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2393,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12829:3:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2395,"indexExpression":{"id":2394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"12833:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12829:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2396,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"12839:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12829:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2410,"nodeType":"IfStatement","src":"12825:114:12","trueBody":{"id":2409,"nodeType":"Block","src":"12847:92:12","statements":[{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"12865:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2400,"indexExpression":{"id":2399,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"12872:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12865:19:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2401,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12887:3:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2403,"indexExpression":{"id":2402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"12891:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12887:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12865:28:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2405,"nodeType":"ExpressionStatement","src":"12865:28:12"},{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12911:13:12","subExpression":{"id":2406,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"12911:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"12911:13:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"12790:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2387,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12794:3:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12798:6:12","memberName":"length","nodeType":"MemberAccess","src":"12794:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12790:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2412,"initializationExpression":{"assignments":[2383],"declarations":[{"constant":false,"id":2383,"mutability":"mutable","name":"i","nameLocation":"12783:1:12","nodeType":"VariableDeclaration","scope":2412,"src":"12775:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"12775:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2385,"initialValue":{"hexValue":"30","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12787:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12775:13:12"},"loopExpression":{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12806:3:12","subExpression":{"id":2390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"12806:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"12806:3:12"},"nodeType":"ForStatement","src":"12770:179:12"},{"expression":{"id":2413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"12974:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2363,"id":2414,"nodeType":"Return","src":"12967:13:12"}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"12463:49:12","text":" @dev Remove address from array"},"id":2416,"implemented":true,"kind":"function","modifiers":[],"name":"removeFromArray","nameLocation":"12526:15:12","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"arr","nameLocation":"12559:3:12","nodeType":"VariableDeclaration","scope":2416,"src":"12542:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"12542:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2355,"nodeType":"ArrayTypeName","src":"12542:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"target","nameLocation":"12572:6:12","nodeType":"VariableDeclaration","scope":2416,"src":"12564:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"12564:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12541:38:12"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2416,"src":"12630:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"12630:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2361,"nodeType":"ArrayTypeName","src":"12630:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12629:18:12"},"scope":2990,"src":"12517:470:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"13257:326:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2430,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13275:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2432,"indexExpression":{"id":2431,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"13288:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13275:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2434,"indexExpression":{"id":2433,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"13300:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13275:30:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"id":2435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13306:12:12","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"13275:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13275:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55736572206e6f742070617274696369706174696e67","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13324:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a65eff1b2c64d3484bcdb9cd963b71090a1e4bf2a799f7e2024f626d722e359","typeString":"literal_string \"User not participating\""},"value":"User not participating"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a65eff1b2c64d3484bcdb9cd963b71090a1e4bf2a799f7e2024f626d722e359","typeString":"literal_string \"User not participating\""}],"id":2429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13267:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13267:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2440,"nodeType":"ExpressionStatement","src":"13267:82:12"},{"expression":{"arguments":[{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13367:50:12","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2442,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13368:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2444,"indexExpression":{"id":2443,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"13381:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13368:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2446,"indexExpression":{"id":2445,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"13393:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13368:30:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"id":2447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13399:18:12","memberName":"hasCompletedSocial","nodeType":"MemberAccess","referencedDeclaration":1352,"src":"13368:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636f6d706c65746564","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13419:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f369e85a19655c0883076c2e4c104f0267a2d45e9a4a8427106f693cc983daab","typeString":"literal_string \"Already completed\""},"value":"Already completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f369e85a19655c0883076c2e4c104f0267a2d45e9a4a8427106f693cc983daab","typeString":"literal_string \"Already completed\""}],"id":2441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13359:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13359:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"ExpressionStatement","src":"13359:80:12"},{"expression":{"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":2452,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13458:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2455,"indexExpression":{"id":2453,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"13471:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13458:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2456,"indexExpression":{"id":2454,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"13483:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13458:30:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13489:18:12","memberName":"hasCompletedSocial","nodeType":"MemberAccess","referencedDeclaration":1352,"src":"13458:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13510:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13458:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2460,"nodeType":"ExpressionStatement","src":"13458:56:12"},{"eventCall":{"arguments":[{"id":2462,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"13559:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2463,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"13571:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2461,"name":"SocialTasksCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"13538:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13538:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"EmitStatement","src":"13533:43:12"}]},"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"13043:66:12","text":" @dev Confirm social tasks completion for a user"},"functionSelector":"b5801d91","id":2467,"implemented":true,"kind":"function","modifiers":[{"id":2424,"kind":"modifierInvocation","modifierName":{"id":2423,"name":"onlyOperator","nameLocations":["13203:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1468,"src":"13203:12:12"},"nodeType":"ModifierInvocation","src":"13203:12:12"},{"arguments":[{"id":2426,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"13240:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2427,"kind":"modifierInvocation","modifierName":{"id":2425,"name":"campaignExists","nameLocations":["13225:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"13225:14:12"},"nodeType":"ModifierInvocation","src":"13225:26:12"}],"name":"confirmSocialTasks","nameLocation":"13123:18:12","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"campaignId","nameLocation":"13150:10:12","nodeType":"VariableDeclaration","scope":2467,"src":"13142:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"13142:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"user","nameLocation":"13170:4:12","nodeType":"VariableDeclaration","scope":2467,"src":"13162:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"13162:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13141:34:12"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[],"src":"13257:0:12"},"scope":2990,"src":"13114:469:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2482,"nodeType":"Block","src":"13787:45:12","statements":[{"expression":{"baseExpression":{"id":2478,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"13804:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2480,"indexExpression":{"id":2479,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13814:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13804:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"functionReturnParameters":2477,"id":2481,"nodeType":"Return","src":"13797:28:12"}]},"functionSelector":"5598f8cc","id":2483,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2472,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13735:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2473,"kind":"modifierInvocation","modifierName":{"id":2471,"name":"campaignExists","nameLocations":["13720:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"13720:14:12"},"nodeType":"ModifierInvocation","src":"13720:26:12"}],"name":"getCampaign","nameLocation":"13647:11:12","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"campaignId","nameLocation":"13667:10:12","nodeType":"VariableDeclaration","scope":2483,"src":"13659:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"13659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13658:20:12"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2483,"src":"13765:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_memory_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"Campaign","nameLocations":["13765:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"13765:8:12"},"referencedDeclaration":1346,"src":"13765:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"src":"13764:17:12"},"scope":2990,"src":"13638:194:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2499,"nodeType":"Block","src":"13971:54:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2493,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13988:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2495,"indexExpression":{"id":2494,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"14001:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13988:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2497,"indexExpression":{"id":2496,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"14013:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13988:30:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"functionReturnParameters":2492,"id":2498,"nodeType":"Return","src":"13981:37:12"}]},"functionSelector":"35f3ad7a","id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"getParticipant","nameLocation":"13847:14:12","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"campaignId","nameLocation":"13870:10:12","nodeType":"VariableDeclaration","scope":2500,"src":"13862:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"13862:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"user","nameLocation":"13890:4:12","nodeType":"VariableDeclaration","scope":2500,"src":"13882:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"13882:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13861:34:12"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"13946:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_memory_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"},"typeName":{"id":2490,"nodeType":"UserDefinedTypeName","pathNode":{"id":2489,"name":"Participant","nameLocations":["13946:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"13946:11:12"},"referencedDeclaration":1357,"src":"13946:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"}},"visibility":"internal"}],"src":"13945:20:12"},"scope":2990,"src":"13838:187:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2515,"nodeType":"Block","src":"14193:56:12","statements":[{"expression":{"baseExpression":{"id":2511,"name":"campaignParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"14210:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":2513,"indexExpression":{"id":2512,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"14231:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14210:32:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2510,"id":2514,"nodeType":"Return","src":"14203:39:12"}]},"functionSelector":"8c6ab238","id":2516,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2505,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"14140:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2506,"kind":"modifierInvocation","modifierName":{"id":2504,"name":"campaignExists","nameLocations":["14125:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"14125:14:12"},"nodeType":"ModifierInvocation","src":"14125:26:12"}],"name":"getCampaignParticipants","nameLocation":"14040:23:12","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"campaignId","nameLocation":"14072:10:12","nodeType":"VariableDeclaration","scope":2516,"src":"14064:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"14064:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14063:20:12"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2516,"src":"14170:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"14170:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2508,"nodeType":"ArrayTypeName","src":"14170:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14169:18:12"},"scope":2990,"src":"14031:218:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2523,"nodeType":"Block","src":"14316:36:12","statements":[{"expression":{"id":2521,"name":"_campaignIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"14333:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2520,"id":2522,"nodeType":"Return","src":"14326:19:12"}]},"functionSelector":"16f43dd4","id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalCampaigns","nameLocation":"14264:17:12","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"14281:2:12"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"14307:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"14307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14306:9:12"},"scope":2990,"src":"14255:97:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2641,"nodeType":"Block","src":"14727:1046:12","statements":[{"assignments":[2542],"declarations":[{"constant":false,"id":2542,"mutability":"mutable","name":"campaign","nameLocation":"14754:8:12","nodeType":"VariableDeclaration","scope":2641,"src":"14737:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2541,"nodeType":"UserDefinedTypeName","pathNode":{"id":2540,"name":"Campaign","nameLocations":["14737:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"14737:8:12"},"referencedDeclaration":1346,"src":"14737:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2546,"initialValue":{"baseExpression":{"id":2543,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"14765:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2545,"indexExpression":{"id":2544,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"14775:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14765:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14737:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2548,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"14804:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14813:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"14804:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2550,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"14823:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14838:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"14823:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"14804:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f7420616374697665","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14846:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""},"value":"Campaign not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""}],"id":2547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14796:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14796:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2555,"nodeType":"ExpressionStatement","src":"14796:72:12"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2556,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"14887:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14896:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"14887:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2559,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"14905:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14920:9:12","memberName":"Cancelled","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"14905:24:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"14887:42:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"id":2562,"nodeType":"ExpressionStatement","src":"14887:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"refundUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"14943:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2564,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"14958:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14967:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"14958:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14958:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14943:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15151:12:12","subExpression":{"id":2570,"name":"refundUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"15152:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2572,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"15167:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15176:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"15167:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15192:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15167:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15151:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2634,"nodeType":"IfStatement","src":"15147:553:12","trueBody":{"id":2633,"nodeType":"Block","src":"15195:505:12","statements":[{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"amount","nameLocation":"15273:6:12","nodeType":"VariableDeclaration","scope":2633,"src":"15265:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"15265:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2581,"initialValue":{"expression":{"id":2579,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"15282:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15291:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"15282:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15265:39:12"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2582,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"15318:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15327:13:12","memberName":"currentAmount","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"15318:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15343:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15318:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"15318:26:12"},{"expression":{"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2588,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"15358:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15367:16:12","memberName":"refundableAmount","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"15358:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15386:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15358:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2593,"nodeType":"ExpressionStatement","src":"15358:29:12"},{"assignments":[2595,null],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"ok2","nameLocation":"15407:3:12","nodeType":"VariableDeclaration","scope":2633,"src":"15402:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2594,"name":"bool","nodeType":"ElementaryTypeName","src":"15402:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2607,"initialValue":{"arguments":[{"arguments":[{"hexValue":"6275726e2875696e7432353629","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15465:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_42966c689b5afe9b9b3f8a7103b2a19980d59629bfd6a20a60972312ed41d836","typeString":"literal_string \"burn(uint256)\""},"value":"burn(uint256)"},{"id":2604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"15482:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_42966c689b5afe9b9b3f8a7103b2a19980d59629bfd6a20a60972312ed41d836","typeString":"literal_string \"burn(uint256)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15441:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15445:19:12","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"15441:23:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15441:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2598,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"15424:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}],"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15416:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"15416:7:12","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15436:4:12","memberName":"call","nodeType":"MemberAccess","src":"15416:24:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"15401:89:12"},{"condition":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15508:4:12","subExpression":{"id":2608,"name":"ok2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"15509:3:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2621,"nodeType":"IfStatement","src":"15504:91:12","trueBody":{"id":2620,"nodeType":"Block","src":"15514:81:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"307864456144","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:6:12","typeDescriptions":{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"},"value":"0xdEaD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"}],"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15556:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2613,"name":"address","nodeType":"ElementaryTypeName","src":"15556:7:12","typeDescriptions":{}}},"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15556:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"15573:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2610,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"15532:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15543:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":592,"src":"15532:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15532:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2619,"nodeType":"ExpressionStatement","src":"15532:48:12"}]}},{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2622,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"15608:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15617:11:12","memberName":"totalBurned","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"15608:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"15632:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15608:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"15608:30:12"},{"eventCall":{"arguments":[{"id":2629,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15670:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"15682:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2628,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"15657:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15657:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2632,"nodeType":"EmitStatement","src":"15652:37:12"}]}},"id":2635,"nodeType":"IfStatement","src":"14939:761:12","trueBody":{"id":2569,"nodeType":"Block","src":"14986:155:12","statements":[]}},{"eventCall":{"arguments":[{"id":2637,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15742:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2638,"name":"refundUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"15754:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2636,"name":"CampaignTerminated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15723:18:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15723:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2640,"nodeType":"EmitStatement","src":"15718:48:12"}]},"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"14418:119:12","text":" @dev Emergency terminate campaign (admin only)\n Allows early termination with optional refunds"},"functionSelector":"871f87cf","id":2642,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2532,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"14652:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2533,"kind":"modifierInvocation","modifierName":{"id":2531,"name":"onlyRole","nameLocations":["14643:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"14643:8:12"},"nodeType":"ModifierInvocation","src":"14643:20:12"},{"arguments":[{"id":2535,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"14688:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2536,"kind":"modifierInvocation","modifierName":{"id":2534,"name":"campaignExists","nameLocations":["14673:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"14673:14:12"},"nodeType":"ModifierInvocation","src":"14673:26:12"},{"id":2538,"kind":"modifierInvocation","modifierName":{"id":2537,"name":"nonReentrant","nameLocations":["14709:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"14709:12:12"},"nodeType":"ModifierInvocation","src":"14709:12:12"}],"name":"emergencyTerminateCampaign","nameLocation":"14551:26:12","nodeType":"FunctionDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"campaignId","nameLocation":"14586:10:12","nodeType":"VariableDeclaration","scope":2642,"src":"14578:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"14578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"refundUsers","nameLocation":"14603:11:12","nodeType":"VariableDeclaration","scope":2642,"src":"14598:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2528,"name":"bool","nodeType":"ElementaryTypeName","src":"14598:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14577:38:12"},"returnParameters":{"id":2539,"nodeType":"ParameterList","parameters":[],"src":"14727:0:12"},"scope":2990,"src":"14542:1231:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2743,"nodeType":"Block","src":"15949:681:12","statements":[{"assignments":[2655],"declarations":[{"constant":false,"id":2655,"mutability":"mutable","name":"campaign","nameLocation":"15976:8:12","nodeType":"VariableDeclaration","scope":2743,"src":"15959:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2654,"nodeType":"UserDefinedTypeName","pathNode":{"id":2653,"name":"Campaign","nameLocations":["15959:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"15959:8:12"},"referencedDeclaration":1346,"src":"15959:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2659,"initialValue":{"baseExpression":{"id":2656,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"15987:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2658,"indexExpression":{"id":2657,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"15997:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15987:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15959:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2661,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"16026:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16035:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"16026:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2663,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"16045:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16060:9:12","memberName":"Cancelled","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"16045:24:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"16026:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742063616e63656c6c6564","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16071:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a705eae3238c5f443e1acf5ef39a62f52bb75d593eca1dbf2a7687d4a4fa2834","typeString":"literal_string \"Not cancelled\""},"value":"Not cancelled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a705eae3238c5f443e1acf5ef39a62f52bb75d593eca1dbf2a7687d4a4fa2834","typeString":"literal_string \"Not cancelled\""}],"id":2660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16018:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16018:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2668,"nodeType":"ExpressionStatement","src":"16018:69:12"},{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"p","nameLocation":"16117:1:12","nodeType":"VariableDeclaration","scope":2743,"src":"16097:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"Participant","nameLocations":["16097:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"16097:11:12"},"referencedDeclaration":1357,"src":"16097:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant"}},"visibility":"internal"}],"id":2678,"initialValue":{"baseExpression":{"baseExpression":{"id":2672,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"16121:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref))"}},"id":2674,"indexExpression":{"id":2673,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"16134:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16121:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$1357_storage_$","typeString":"mapping(address => struct AutomatedSqudyCampaignManager.Participant storage ref)"}},"id":2677,"indexExpression":{"expression":{"id":2675,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16146:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16150:6:12","memberName":"sender","nodeType":"MemberAccess","src":"16146:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16121:36:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage","typeString":"struct AutomatedSqudyCampaignManager.Participant storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16097:60:12"},{"assignments":[2680],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"amount","nameLocation":"16175:6:12","nodeType":"VariableDeclaration","scope":2743,"src":"16167:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"16167:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2683,"initialValue":{"expression":{"id":2681,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16184:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16186:12:12","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"16184:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16167:31:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"16216:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16225:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16216:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7468696e6720746f20726566756e64","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16228:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1","typeString":"literal_string \"Nothing to refund\""},"value":"Nothing to refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94670486c87ad326bb7b8c524f999267960e388fccae7b51a66fc87492a429c1","typeString":"literal_string \"Nothing to refund\""}],"id":2684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16208:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16208:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"ExpressionStatement","src":"16208:40:12"},{"expression":{"arguments":[{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16266:21:12","subExpression":{"expression":{"id":2692,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16267:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":2693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16269:18:12","memberName":"hasWithdrawnRefund","nodeType":"MemberAccess","referencedDeclaration":1356,"src":"16267:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920726566756e646564","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16289:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f","typeString":"literal_string \"Already refunded\""},"value":"Already refunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f","typeString":"literal_string \"Already refunded\""}],"id":2691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16258:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16258:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2697,"nodeType":"ExpressionStatement","src":"16258:50:12"},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2698,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16318:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":2700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16320:18:12","memberName":"hasWithdrawnRefund","nodeType":"MemberAccess","referencedDeclaration":1356,"src":"16318:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16341:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16318:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2703,"nodeType":"ExpressionStatement","src":"16318:27:12"},{"expression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2704,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16355:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":2706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16357:12:12","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"16355:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16372:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16355:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2709,"nodeType":"ExpressionStatement","src":"16355:18:12"},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2710,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"16383:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$1357_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Participant storage pointer"}},"id":2712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16385:11:12","memberName":"ticketCount","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"16383:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16399:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16383:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2715,"nodeType":"ExpressionStatement","src":"16383:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2716,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"16414:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16423:16:12","memberName":"refundableAmount","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"16414:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2718,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"16443:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16414:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2733,"nodeType":"Block","src":"16517:54:12","statements":[{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2727,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"16531:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16540:16:12","memberName":"refundableAmount","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"16531:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16559:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16531:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2732,"nodeType":"ExpressionStatement","src":"16531:29:12"}]},"id":2734,"nodeType":"IfStatement","src":"16410:161:12","trueBody":{"id":2726,"nodeType":"Block","src":"16451:60:12","statements":[{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2720,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"16465:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16474:16:12","memberName":"refundableAmount","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"16465:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2723,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"16494:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16465:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2725,"nodeType":"ExpressionStatement","src":"16465:35:12"}]}},{"expression":{"arguments":[{"expression":{"id":2738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16604:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16608:6:12","memberName":"sender","nodeType":"MemberAccess","src":"16604:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2740,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"16616:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2735,"name":"squdyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"16580:10:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16591:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":592,"src":"16580:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16580:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2742,"nodeType":"ExpressionStatement","src":"16580:43:12"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"15779:75:12","text":" @dev Users claim their refund after a cancelled campaign"},"functionSelector":"5b7baf64","id":2744,"implemented":true,"kind":"function","modifiers":[{"id":2648,"kind":"modifierInvocation","modifierName":{"id":2647,"name":"nonReentrant","nameLocations":["15909:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"15909:12:12"},"nodeType":"ModifierInvocation","src":"15909:12:12"},{"arguments":[{"id":2650,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"15937:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2651,"kind":"modifierInvocation","modifierName":{"id":2649,"name":"campaignExists","nameLocations":["15922:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"15922:14:12"},"nodeType":"ModifierInvocation","src":"15922:26:12"}],"name":"claimRefund","nameLocation":"15868:11:12","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"campaignId","nameLocation":"15888:10:12","nodeType":"VariableDeclaration","scope":2744,"src":"15880:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"15880:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15879:20:12"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[],"src":"15949:0:12"},"scope":2990,"src":"15859:771:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2783,"nodeType":"Block","src":"16847:247:12","statements":[{"assignments":[2758],"declarations":[{"constant":false,"id":2758,"mutability":"mutable","name":"campaign","nameLocation":"16874:8:12","nodeType":"VariableDeclaration","scope":2783,"src":"16857:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2757,"nodeType":"UserDefinedTypeName","pathNode":{"id":2756,"name":"Campaign","nameLocations":["16857:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"16857:8:12"},"referencedDeclaration":1346,"src":"16857:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2762,"initialValue":{"baseExpression":{"id":2759,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"16885:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2761,"indexExpression":{"id":2760,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"16895:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16885:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16857:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2764,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"16924:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16933:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"16924:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2766,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"16943:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16958:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"16943:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"16924:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f7420616374697665","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16966:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""},"value":"Campaign not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_592104a37a676381d23c0a479350ace306a33b2e5c5d1435f35cbd8a6adb261b","typeString":"literal_string \"Campaign not active\""}],"id":2763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16916:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16916:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"ExpressionStatement","src":"16916:72:12"},{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2772,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"17007:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17016:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"17007:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2775,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"17025:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17040:6:12","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"17025:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"17007:39:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"id":2778,"nodeType":"ExpressionStatement","src":"17007:39:12"},{"eventCall":{"arguments":[{"id":2780,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"17076:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"name":"CampaignPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"17061:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17061:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2782,"nodeType":"EmitStatement","src":"17056:31:12"}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"16636:71:12","text":" @dev Pause a specific campaign (admin/operator only)"},"functionSelector":"de99347a","id":2784,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2750,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"16791:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2751,"kind":"modifierInvocation","modifierName":{"id":2749,"name":"onlyRole","nameLocations":["16782:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"16782:8:12"},"nodeType":"ModifierInvocation","src":"16782:23:12"},{"arguments":[{"id":2753,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"16830:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2754,"kind":"modifierInvocation","modifierName":{"id":2752,"name":"campaignExists","nameLocations":["16815:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"16815:14:12"},"nodeType":"ModifierInvocation","src":"16815:26:12"}],"name":"pauseCampaign","nameLocation":"16721:13:12","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"campaignId","nameLocation":"16743:10:12","nodeType":"VariableDeclaration","scope":2784,"src":"16735:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"16735:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16734:20:12"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[],"src":"16847:0:12"},"scope":2990,"src":"16712:382:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2832,"nodeType":"Block","src":"17311:324:12","statements":[{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"campaign","nameLocation":"17338:8:12","nodeType":"VariableDeclaration","scope":2832,"src":"17321:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"Campaign","nameLocations":["17321:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"17321:8:12"},"referencedDeclaration":1346,"src":"17321:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2802,"initialValue":{"baseExpression":{"id":2799,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"17349:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2801,"indexExpression":{"id":2800,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17359:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17349:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17321:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2804,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"17388:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17397:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"17388:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2806,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"17407:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17422:6:12","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"17407:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"17388:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f7420706175736564","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17430:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0f2ef061c6eb67d99bf1fa43d58eb7744aaa0bcb7f7a14473ac75622a593c92","typeString":"literal_string \"Campaign not paused\""},"value":"Campaign not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0f2ef061c6eb67d99bf1fa43d58eb7744aaa0bcb7f7a14473ac75622a593c92","typeString":"literal_string \"Campaign not paused\""}],"id":2803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17380:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17380:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2811,"nodeType":"ExpressionStatement","src":"17380:72:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2813,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17470:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17476:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"17470:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2815,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"17489:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17498:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"17489:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17470:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e2068617320656e646564","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17507:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0aa6ac620dafe8972a6bc3dc8dcb82ff075def5918e020291dc9c9232267f372","typeString":"literal_string \"Campaign has ended\""},"value":"Campaign has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0aa6ac620dafe8972a6bc3dc8dcb82ff075def5918e020291dc9c9232267f372","typeString":"literal_string \"Campaign has ended\""}],"id":2812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17462:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17462:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2820,"nodeType":"ExpressionStatement","src":"17462:66:12"},{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2821,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"17547:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17556:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"17547:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2824,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"17565:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17580:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"17565:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"17547:39:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"id":2827,"nodeType":"ExpressionStatement","src":"17547:39:12"},{"eventCall":{"arguments":[{"id":2829,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17617:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2828,"name":"CampaignResumed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"17601:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17601:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2831,"nodeType":"EmitStatement","src":"17596:32:12"}]},"documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"17100:70:12","text":" @dev Resume a paused campaign (admin/operator only)"},"functionSelector":"9e3696d9","id":2833,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2790,"name":"OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"17255:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2791,"kind":"modifierInvocation","modifierName":{"id":2789,"name":"onlyRole","nameLocations":["17246:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"17246:8:12"},"nodeType":"ModifierInvocation","src":"17246:23:12"},{"arguments":[{"id":2793,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17294:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2794,"kind":"modifierInvocation","modifierName":{"id":2792,"name":"campaignExists","nameLocations":["17279:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"17279:14:12"},"nodeType":"ModifierInvocation","src":"17279:26:12"}],"name":"resumeCampaign","nameLocation":"17184:14:12","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"campaignId","nameLocation":"17207:10:12","nodeType":"VariableDeclaration","scope":2833,"src":"17199:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"17199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17198:20:12"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"17311:0:12"},"scope":2990,"src":"17175:460:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2843,"nodeType":"Block","src":"17778:25:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2840,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"17788:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17788:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2842,"nodeType":"ExpressionStatement","src":"17788:8:12"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"17641:76:12","text":" @dev Emergency pause all contract operations (admin only)"},"functionSelector":"51858e27","id":2844,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2837,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"17766:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2838,"kind":"modifierInvocation","modifierName":{"id":2836,"name":"onlyRole","nameLocations":["17757:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"17757:8:12"},"nodeType":"ModifierInvocation","src":"17757:20:12"}],"name":"emergencyPause","nameLocation":"17731:14:12","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[],"src":"17745:2:12"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[],"src":"17778:0:12"},"scope":2990,"src":"17722:81:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2854,"nodeType":"Block","src":"17950:27:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2851,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"17960:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17960:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"17960:10:12"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"17809:78:12","text":" @dev Emergency unpause all contract operations (admin only)"},"functionSelector":"4a4e3bd5","id":2855,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2848,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"17938:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2849,"kind":"modifierInvocation","modifierName":{"id":2847,"name":"onlyRole","nameLocations":["17929:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"17929:8:12"},"nodeType":"ModifierInvocation","src":"17929:20:12"}],"name":"emergencyUnpause","nameLocation":"17901:16:12","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[],"src":"17917:2:12"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"17950:0:12"},"scope":2990,"src":"17892:85:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2924,"nodeType":"Block","src":"18231:525:12","statements":[{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"campaign","nameLocation":"18258:8:12","nodeType":"VariableDeclaration","scope":2924,"src":"18241:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2870,"nodeType":"UserDefinedTypeName","pathNode":{"id":2869,"name":"Campaign","nameLocations":["18241:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"18241:8:12"},"referencedDeclaration":1346,"src":"18241:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2875,"initialValue":{"baseExpression":{"id":2872,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"18269:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2874,"indexExpression":{"id":2873,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18279:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18269:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18241:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2877,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"18308:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18317:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"18308:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2879,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"18327:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18342:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"18327:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"18308:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2882,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"18352:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18361:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"18352:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2884,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"18371:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18386:6:12","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"18371:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"18352:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18308:84:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f74206163746976652f706175736564","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18394:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e36e31551b7b281b6f6c3a21ef86e6c2c4d7d84e6747756d82f93a1c7c95fa45","typeString":"literal_string \"Campaign not active/paused\""},"value":"Campaign not active/paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e36e31551b7b281b6f6c3a21ef86e6c2c4d7d84e6747756d82f93a1c7c95fa45","typeString":"literal_string \"Campaign not active/paused\""}],"id":2876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18300:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18300:123:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2890,"nodeType":"ExpressionStatement","src":"18300:123:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"newEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"18441:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2893,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18454:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18460:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"18454:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18441:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e642064617465206d75737420626520696e20667574757265","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18471:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3776440d7ca213bc664fbe68211b0680d09e2393bcfbf5edd7e1cc564249f59","typeString":"literal_string \"End date must be in future\""},"value":"End date must be in future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3776440d7ca213bc664fbe68211b0680d09e2393bcfbf5edd7e1cc564249f59","typeString":"literal_string \"End date must be in future\""}],"id":2891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18433:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18433:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2898,"nodeType":"ExpressionStatement","src":"18433:67:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"newEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"18518:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2901,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"18531:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18540:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"18531:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18518:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420657874656e6420656e642064617465","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18549:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f6ed6aefee79fa56f6528394d4d0a85cdbdc2ce5ca06c55d742922116ad28e4","typeString":"literal_string \"Must extend end date\""},"value":"Must extend end date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f6ed6aefee79fa56f6528394d4d0a85cdbdc2ce5ca06c55d742922116ad28e4","typeString":"literal_string \"Must extend end date\""}],"id":2899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18510:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18510:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2906,"nodeType":"ExpressionStatement","src":"18510:62:12"},{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"oldEndDate","nameLocation":"18599:10:12","nodeType":"VariableDeclaration","scope":2924,"src":"18591:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"18591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2911,"initialValue":{"expression":{"id":2909,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"18612:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18621:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"18612:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18591:37:12"},{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2912,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"18638:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18647:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"18638:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2915,"name":"newEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"18657:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18638:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"18638:29:12"},{"eventCall":{"arguments":[{"id":2919,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18714:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2920,"name":"oldEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"18726:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2921,"name":"newEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"18738:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2918,"name":"CampaignEndDateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"18691:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18691:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"EmitStatement","src":"18686:63:12"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"17983:83:12","text":" @dev Update campaign end date (admin only, before campaign ends)"},"functionSelector":"171e986e","id":2925,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2863,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"18178:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2864,"kind":"modifierInvocation","modifierName":{"id":2862,"name":"onlyRole","nameLocations":["18169:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"18169:8:12"},"nodeType":"ModifierInvocation","src":"18169:20:12"},{"arguments":[{"id":2866,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"18214:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2867,"kind":"modifierInvocation","modifierName":{"id":2865,"name":"campaignExists","nameLocations":["18199:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"18199:14:12"},"nodeType":"ModifierInvocation","src":"18199:26:12"}],"name":"updateCampaignEndDate","nameLocation":"18080:21:12","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"campaignId","nameLocation":"18110:10:12","nodeType":"VariableDeclaration","scope":2925,"src":"18102:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"18102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"newEndDate","nameLocation":"18130:10:12","nodeType":"VariableDeclaration","scope":2925,"src":"18122:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"18122:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18101:40:12"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[],"src":"18231:0:12"},"scope":2990,"src":"18071:685:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2988,"nodeType":"Block","src":"19063:439:12","statements":[{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"campaign","nameLocation":"19090:8:12","nodeType":"VariableDeclaration","scope":2988,"src":"19073:25:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"},"typeName":{"id":2938,"nodeType":"UserDefinedTypeName","pathNode":{"id":2937,"name":"Campaign","nameLocations":["19073:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"19073:8:12"},"referencedDeclaration":1346,"src":"19073:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign"}},"visibility":"internal"}],"id":2943,"initialValue":{"baseExpression":{"id":2940,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"19101:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$1346_storage_$","typeString":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign storage ref)"}},"id":2942,"indexExpression":{"id":2941,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19111:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19101:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19073:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2945,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19140:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19149:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"19140:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2947,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"19159:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19174:6:12","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"19159:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"19140:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2950,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19184:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19193:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1339,"src":"19184:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2952,"name":"CampaignStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"19203:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CampaignStatus_$1364_$","typeString":"type(enum AutomatedSqudyCampaignManager.CampaignStatus)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19218:6:12","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"19203:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_CampaignStatus_$1364","typeString":"enum AutomatedSqudyCampaignManager.CampaignStatus"}},"src":"19184:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19140:84:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e206e6f74206163746976652f706175736564","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19226:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e36e31551b7b281b6f6c3a21ef86e6c2c4d7d84e6747756d82f93a1c7c95fa45","typeString":"literal_string \"Campaign not active/paused\""},"value":"Campaign not active/paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e36e31551b7b281b6f6c3a21ef86e6c2c4d7d84e6747756d82f93a1c7c95fa45","typeString":"literal_string \"Campaign not active/paused\""}],"id":2944,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19132:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19132:123:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2958,"nodeType":"ExpressionStatement","src":"19132:123:12"},{"assignments":[2960],"declarations":[{"constant":false,"id":2960,"mutability":"mutable","name":"oldEndDate","nameLocation":"19273:10:12","nodeType":"VariableDeclaration","scope":2988,"src":"19265:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"19265:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2963,"initialValue":{"expression":{"id":2961,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19286:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19295:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"19286:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19265:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"oldEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"19316:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2965,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19329:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19335:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"19329:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19347:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19329:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19316:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2987,"nodeType":"IfStatement","src":"19312:184:12","trueBody":{"id":2986,"nodeType":"Block","src":"19350:146:12","statements":[{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2970,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19364:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19373:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"19364:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2973,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19383:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19389:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"19383:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19401:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19383:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19364:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"nodeType":"ExpressionStatement","src":"19364:38:12"},{"eventCall":{"arguments":[{"id":2980,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19444:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2981,"name":"oldEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"19456:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2982,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19468:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$1346_storage_ptr","typeString":"struct AutomatedSqudyCampaignManager.Campaign storage pointer"}},"id":2983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19477:7:12","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"19468:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2979,"name":"CampaignEndDateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"19421:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19421:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"EmitStatement","src":"19416:69:12"}]}}]},"documentation":{"id":2926,"nodeType":"StructuredDocumentation","src":"18762:167:12","text":" @dev Admin convenience: force a campaign to be considered ended immediately\n Sets endDate to block.timestamp - 1 without changing other fields"},"functionSelector":"0b040563","id":2989,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2931,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"19012:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2932,"kind":"modifierInvocation","modifierName":{"id":2930,"name":"onlyRole","nameLocations":["19003:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"19003:8:12"},"nodeType":"ModifierInvocation","src":"19003:20:12"},{"arguments":[{"id":2934,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19047:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2935,"kind":"modifierInvocation","modifierName":{"id":2933,"name":"campaignExists","nameLocations":["19032:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"19032:14:12"},"nodeType":"ModifierInvocation","src":"19032:26:12"}],"name":"endCampaignNow","nameLocation":"18943:14:12","nodeType":"FunctionDefinition","parameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"campaignId","nameLocation":"18966:10:12","nodeType":"VariableDeclaration","scope":2989,"src":"18958:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"18958:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18957:20:12"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[],"src":"19063:0:12"},"scope":2990,"src":"18934:568:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2991,"src":"547:18957:12","usedErrors":[306,309,559,1063,1066,1163],"usedEvents":[318,327,336,1055,1060,1372,1382,1388,1397,1403,1410,1416,1420,1424,1432]}],"src":"32:19472:12"},"id":12}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}]},"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {IERC165, ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\\n\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)22_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)22_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)22_storage"},"t_struct(RoleData)22_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":19,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":21,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC-165 detection.","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}]},"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\\n\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204b11b539b9d278da2eb9c9e02d85c5c2aa96a0adc6fb0b029ac1f7e8144a69c964736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B GT 0xB5 CODECOPY 0xB9 0xD2 PUSH25 0xDA2EB9C9E02D85C5C2AA96A0ADC6FB0B029AC1F7E8144A69C9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204b11b539b9d278da2eb9c9e02d85c5c2aa96a0adc6fb0b029ac1f7e8144a69c964736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B GT 0xB5 CODECOPY 0xB9 0xD2 PUSH25 0xDA2EB9C9E02D85C5C2AA96A0ADC6FB0B029AC1F7E8144A69C9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite","trySafeTransfer(contract IERC20,address,uint256)":"infinite","trySafeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","errors":{"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}]},"events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1050,"contract":"@openzeppelin/contracts/utils/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1160,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AutomatedSqudyCampaignManager.sol":{"AutomatedSqudyCampaignManager":{"abi":[{"inputs":[{"internalType":"address","name":"_squdyToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"CampaignCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldEndDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newEndDate","type":"uint256"}],"name":"CampaignEndDateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"CampaignPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"CampaignResumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"enum AutomatedSqudyCampaignManager.CampaignStatus","name":"status","type":"uint8"}],"name":"CampaignStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"refunded","type":"bool"}],"name":"CampaignTerminated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"SocialTasksCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tickets","type":"uint256"}],"name":"UserStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"winners","type":"address[]"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"WinnersSelected","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"burnTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"campaignParticipants","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"campaigns","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"imageUrl","type":"string"},{"internalType":"uint256","name":"softCap","type":"uint256"},{"internalType":"uint256","name":"hardCap","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"uint256","name":"currentAmount","type":"uint256"},{"internalType":"uint256","name":"refundableAmount","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"uint256","name":"participantCount","type":"uint256"},{"internalType":"enum AutomatedSqudyCampaignManager.CampaignStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"tokensAreBurned","type":"bool"},{"internalType":"uint256","name":"totalBurned","type":"uint256"},{"internalType":"uint256","name":"winnerSelectionBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"claimRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"confirmSocialTasks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"imageUrl","type":"string"},{"internalType":"uint256","name":"softCap","type":"uint256"},{"internalType":"uint256","name":"hardCap","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"string[]","name":"prizes","type":"string[]"}],"name":"createCampaign","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"bool","name":"refundUsers","type":"bool"}],"name":"emergencyTerminateCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyUnpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"endCampaignNow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"getCampaign","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"imageUrl","type":"string"},{"internalType":"uint256","name":"softCap","type":"uint256"},{"internalType":"uint256","name":"hardCap","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"uint256","name":"currentAmount","type":"uint256"},{"internalType":"uint256","name":"refundableAmount","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"uint256","name":"participantCount","type":"uint256"},{"internalType":"string[]","name":"prizes","type":"string[]"},{"internalType":"address[]","name":"winners","type":"address[]"},{"internalType":"enum AutomatedSqudyCampaignManager.CampaignStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"tokensAreBurned","type":"bool"},{"internalType":"uint256","name":"totalBurned","type":"uint256"},{"internalType":"uint256","name":"winnerSelectionBlock","type":"uint256"}],"internalType":"struct AutomatedSqudyCampaignManager.Campaign","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"getCampaignParticipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getParticipant","outputs":[{"components":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"ticketCount","type":"uint256"},{"internalType":"bool","name":"hasCompletedSocial","type":"bool"},{"internalType":"uint256","name":"joinedAt","type":"uint256"},{"internalType":"bool","name":"hasWithdrawnRefund","type":"bool"}],"internalType":"struct AutomatedSqudyCampaignManager.Participant","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalCampaigns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"participants","outputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"ticketCount","type":"uint256"},{"internalType":"bool","name":"hasCompletedSocial","type":"bool"},{"internalType":"uint256","name":"joinedAt","type":"uint256"},{"internalType":"bool","name":"hasWithdrawnRefund","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"pauseCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"resumeCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"selectWinners","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"squdyToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stakeTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"uint256","name":"newEndDate","type":"uint256"}],"name":"updateCampaignEndDate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Squdy Team","details":"Simplified campaign manager with automated winner selection","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}],"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"burnTokens(uint256)":{"details":"Burn all staked tokens after winner selection"},"claimRefund(uint256)":{"details":"Users claim their refund after a cancelled campaign"},"confirmSocialTasks(uint256,address)":{"details":"Confirm social tasks completion for a user"},"createCampaign(string,string,string,uint256,uint256,uint256,uint256,uint256,string[])":{"details":"Creates a new campaign"},"emergencyPause()":{"details":"Emergency pause all contract operations (admin only)"},"emergencyTerminateCampaign(uint256,bool)":{"details":"Emergency terminate campaign (admin only) Allows early termination with optional refunds"},"emergencyUnpause()":{"details":"Emergency unpause all contract operations (admin only)"},"endCampaignNow(uint256)":{"details":"Admin convenience: force a campaign to be considered ended immediately Sets endDate to block.timestamp - 1 without changing other fields"},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"pauseCampaign(uint256)":{"details":"Pause a specific campaign (admin/operator only)"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"resumeCampaign(uint256)":{"details":"Resume a paused campaign (admin/operator only)"},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"selectWinners(uint256)":{"details":"Automated winner selection when campaign ends Can be called by anyone after campaign ends"},"stakeTokens(uint256,uint256)":{"details":"Stake tokens in a campaign"},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"updateCampaignEndDate(uint256,uint256)":{"details":"Update campaign end date (admin only, before campaign ends)"}},"title":"AutomatedSqudyCampaignManager","version":1},"evm":{"bytecode":{"functionDebugData":{"fun_grantRole":{"entryPoint":631,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_948":{"entryPoint":341,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_949":{"entryPoint":469,"id":257,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a03462000150576001600160401b0390601f62002f6a38819003918201601f191683019184831184841017620000f5578084926020946040528339810103126200015057516001600160a01b0381169081900362000150576001805580156200010b57608052620000713362000155565b506200007d33620001d5565b50620000893362000277565b5060405160208101904282524460408201523360601b606082015260548152608081019281841090841117620000f55782604052519020600455612c35908162000315823960805181818161079d0152818161096001528181610b770152818161105301526111a40152f35b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b600080fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620001d157818052816020526040822081835260205260408220600160ff19825416179055339160008051602062002f4a8339815191528180a4600190565b5090565b6001600160a01b031660008181527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260408120549091907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759060ff166200027257808352826020526040832082845260205260408320600160ff1982541617905560008051602062002f4a833981519152339380a4600190565b505090565b6001600160a01b031660008181527fee57cd81e84075558e8fcc182a1f4393f91fc97f963a136e66b7f949a62f319f60205260408120549091907f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299060ff166200027257808352826020526040832082845260205260408320600160ff1982541617905560008051602062002f4a833981519152339380a460019056fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146122085750806302e060c61461218a57806303463dd914611e2b5780630b04056314611d6c578063141961bc14611c4557806316f43dd414611c27578063171e986e14611ae9578063248a9ca314611aba5780632f2ff15d14611a7b57806335abd49b14611a3157806335f3ad7a1461195a57806336568abe1461191357806339a2eb2a146115005780633b7b6188146110ec5780634a4e3bd5146110825780634eb53f991461103d57806351858e2714610fe35780635598f8cc14610c5c5780635b7baf6414610a945780635c975abb14610a715780636d1b229d1461089157806375b238fc14610856578063871f87cf146106925780638c6ab2381461061f57806391d14854146105d25780639e3696d9146104bf578063a217fddf146104a3578063b5801d91146102a2578063d547741f14610261578063de99347a146101b45763f5b541a61461017457600080fd5b346101af5760003660031901126101af5760206040517f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298152f35b600080fd5b346101af5760203660031901126101af576004356101d06125bd565b80151580610255575b6101e290612865565b806000526005602052600e604060002001805460ff811690600682101561023f576102116001600293146128b1565b60ff19161790557fab1902ee37c92d1a78dda53814d64b815e7e3ee287d60843a3dbd6954e3206b4600080a2005b634e487b7160e01b600052602160045260246000fd5b506003548111156101d9565b346101af5760403660031901126101af576102a060043561028061225b565b9080600052600060205261029b600160406000200154612619565b6126bd565b005b346101af5760403660031901126101af576004356102be61225b565b3360009081527fee57cd81e84075558e8fcc182a1f4393f91fc97f963a136e66b7f949a62f319f602090815260409091205491929160ff168015610461575b1561042c5781151580610420575b61031490612865565b60008281526006825260408082206001600160a01b03909516808352948352902054156103e3578160005260068152604060002083600052815260ff600260406000200154166103ab57816000526006815260406000209083600052526002604060002001600160ff198254161790557fd8e2a0fb3631991dd34ac6af97a04f3485326d9f70043bb29f54e66f0c5577c6600080a3005b6064906040519062461bcd60e51b825260048201526011602482015270105b1c9958591e4818dbdb5c1b195d1959607a1b6044820152fd5b6064906040519062461bcd60e51b82526004820152601660248201527555736572206e6f742070617274696369706174696e6760501b6044820152fd5b5060035482111561030b565b6064906040519062461bcd60e51b82526004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152fd5b507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560005260008152604060002033600052815260ff604060002054166102fd565b346101af5760003660031901126101af57602060405160008152f35b346101af5760203660031901126101af576004356104db6125bd565b801515806105c6575b6104ed90612865565b8060005260056020526040600020600e81019081549060ff8216600681101561023f5760020361058b57600a015442116105515760ff191660011790557f25128b02d37802123547e1526ab020238abf16bbc37a5bd0a918d5088b016e95600080a2005b60405162461bcd60e51b815260206004820152601260248201527110d85b5c185a59db881a185cc8195b99195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527210d85b5c185a59db881b9bdd081c185d5cd959606a1b6044820152606490fd5b506003548111156104e4565b346101af5760403660031901126101af576105eb61225b565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101af5760203660031901126101af5760043580151580610686575b61064590612865565b600052600760205261068261066761066e6040600020604051928380926129e5565b03826122f8565b604051918291602083526020830190612506565b0390f35b5060035481111561063c565b346101af5760403660031901126101af5760043560243580159081158082036101af576106bd612543565b8315158061084a575b6106cf90612865565b6106d76129c2565b836000526005602052604060002092600e84019384549160ff831694600686101561023f577ff75bd1a9b4e512fc86093732061ee514541c41fcf65f64697ffd3e0f6328c2159660048995610730600160209a146128b1565b60ff19161790558061083d575b15610753575b505050604051908152a260018055005b80610830575b610764575b80610743565b8381600f60077f8bc81353cf6671d259d22783e39ed930583c86f3f4cf7e981298e6a872dfb15d940191600083549355600060088201557f00000000000000000000000000000000000000000000000000000000000000008360008060405188810190630852cd8d60e31b8252846024820152602481526107e4816122dc565b5190826001600160a01b0387165af16107fb612a2b565b5015610820575b50500161081082825461293b565b9055604051908152a2838561075e565b61082991612a5b565b8a83610802565b5060078101541515610759565b506007820154151561073d565b506003548411156106c6565b346101af5760003660031901126101af5760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b346101af576020806003193601126101af576004359081151580610a65575b6108b990612865565b6108c16129c2565b81600052600581526040600020600e81019081549160ff8316600681101561023f57600303610a295760ff8360081c166109ec57837f7e5e6bfcab605d9254dbb5c3b4c8bd65ee4705bb30b1fc434d9651d24d368f3694936000600885827f8bc81353cf6671d259d22783e39ed930583c86f3f4cf7e981298e6a872dfb15d9660078c99019061010582549788600f87015561ffff19161790555501557f00000000000000000000000000000000000000000000000000000000000000008160008060405186810190630852cd8d60e31b8252846024820152602481526109a7816122dc565b5190826001600160a01b0387165af16109be612a2b565b50156109dc575b5050604051908152a260405160058152a260018055005b6109e591612a5b565b87816109c5565b60405162461bcd60e51b8152600481018590526015602482015274151bdad95b9cc8185b1c9958591e48189d5c9b9959605a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052601460248201527315da5b9b995c9cc81b9bdd081cd95b1958dd195960621b6044820152606490fd5b506003548211156108b0565b346101af5760003660031901126101af57602060ff600254166040519015158152f35b346101af576020806003193601126101af5760043590610ab26129c2565b81151580610c50575b610ac490612865565b816000526005815260406000209160ff600e84015416600681101561023f57600403610c1b5760005260068152604060002033600052815260406000208054908115610be25760048101805460ff8116610baa576001600893610b9b97938260009460ff19161790558281550155018181541015600014610ba157610b4a82825461292e565b90555b6040519163a9059cbb60e01b90830152336024830152604482015260448152610b75816122c0565b7f0000000000000000000000000000000000000000000000000000000000000000612948565b60018055005b60009055610b4d565b60405162461bcd60e51b815260048101869052601060248201526f105b1c9958591e481c99599d5b99195960821b6044820152606490fd5b60405162461bcd60e51b8152600481018490526011602482015270139bdd1a1a5b99c81d1bc81c99599d5b99607a1b6044820152606490fd5b60405162461bcd60e51b815260048101839052600d60248201526c139bdd0818d85b98d95b1b1959609a1b6044820152606490fd5b50600354821115610abb565b346101af5760203660031901126101af576000610220604051610c7e816122a3565b82815260606020820152606060408201526060808201528260808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015282610160820152606061018082015260606101a0820152826101c0820152826101e082015282610200820152015260043580151580610fd7575b610d0590612865565b6000526005602052604060002060405190610d1f826122a3565b80548252610d2f600182016123cf565b6020830152610d40600282016123cf565b6040830152610d51600382016123cf565b606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a810154610140830152600b810154610160830152600c810154610db88161237d565b90610dc660405192836122f8565b80825260208201600c840160005260206000206000915b838310610fba5750505050610180830152604051610e028161066781600d86016129e5565b6101a0830152600e81015490600660ff8316101561023f5760ff8281601094166101c086015260081c1615156101e0840152600f81015461020084015201546102208201526040516020815281516020820152610ea2610e8c610e7660208501516102406040860152610260850190612475565b6040850151848203601f19016060860152612475565b6060840151838203601f19016080850152612475565b91608081015160a083015260a081015160c083015260c081015160e083015260e081015161010083015261010081015161012083015261012081015161014083015261014081015161016083015261016081015161018083015261018081015192601f19838203016101a0840152835180825260208201916020808360051b8301019601926000915b838310610f8d57868087610220610f548c6101a0840151601f19868303016101c0870152612506565b91610f696101c08201516101e08601906124b5565b6101e081015115156102008501526102008101518285015201516102408301520390f35b9091929396602080610fab600193601f198682030187528b51612475565b99019301930191939290610f2b565b600160208192610fc9856123cf565b815201920192019190610ddd565b50600354811115610cfc565b346101af5760003660031901126101af57610ffc612543565b6110046129a4565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346101af5760003660031901126101af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101af5760003660031901126101af5761109b612543565b60025460ff8116156110da5760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346101af576110fa366124c2565b906111036129c2565b61110b6129a4565b801515806114f4575b61111d90612865565b806000526020916005835260406000209260ff600e85015416600681101561023f57600161114b91146128b1565b6009840154421015806114e6575b156114a25760068401938454831061146657836000526006825260406000203360005282526040600020805415611435575b6040516370a0823160e01b8082523060048301526024957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116939092909187838a81885afa9384156113f4578893600095611400575b509061122291604051916323b872dd60e01b86840152338c84015230604484015260648301526064825261121d82612271565b612948565b876040518095819382523060048301525afa80156113f4576000906113c5575b61124c925061292e565b95549081871061138157600783019161126688845461293b565b60058501541061134a5780156113355787049485156112f257509060018261129289600896955461293b565b8155016112a086825461293b565b90556112ad87825461293b565b9055016112bb85825461293b565b90556040519384528301527fbf3a2998bf95effb9622e3aeea768ec248f238862fd602100075c04d21caa23c60403393a360018055005b84601b6064926040519262461bcd60e51b845260048401528201527f496e73756666696369656e7420666f72206f6e65207469636b657400000000006044820152fd5b85634e487b7160e01b60005260126004526000fd5b60405162461bcd60e51b8152600481018690526010818801526f0457863656564732068617264206361760841b6044820152606490fd5b60405162461bcd60e51b815260048101859052601b818701527f416d6f756e7420746f6f20736d616c6c206166746572206665657300000000006044820152606490fd5b508482813d83116113ed575b6113db81836122f8565b810103126101af5761124c9151611242565b503d6113d1565b6040513d6000823e3d90fd5b848193959296503d831161142e575b61141981836122f8565b810103126101af5751928792906112226111ea565b503d61140f565b846000526007835261144b3360406000206128f3565b600b82016114598154612732565b905542600382015561118b565b60405162461bcd60e51b8152600481018390526014602482015273416d6f756e742062656c6f77206d696e696d756d60601b6044820152606490fd5b6064906040519062461bcd60e51b82526004820152601860248201527f43616d706169676e206e6f7420696e2070726f677265737300000000000000006044820152fd5b50600a840154421115611159565b50600354811115611114565b346101af5760203660031901126101af57600435151580611905575b61152590612865565b61152d6129c2565b6004356000526005602052604060002060ff80600e83015416906006918281101561023f57600161155e91146128b1565b600a8301544211156118c8576007830154916004840154831061188c57600435600052600760205261066761159d6040600020604051928380926129e5565b6115a78151612a8b565b9060009260005b825181101561162f5760043560009081526020839052604090206001600160a01b0390816115dc8487612851565b51166000526020528660026040600020015416611603575b506115fe90612732565b6115ae565b8195611628916116166115fe9487612851565b51166116228288612851565b52612732565b94906115f4565b8784888761163c81612a8b565b9260005b82811061187157505050819082511561182c57600c8401549251808411611824575b5060001943019043821161180e5760045461167c81612732565b600455604051916020830193408452600435604084015260608301526080820152608081526116aa81612271565b519020916000925b81841061174b57600e8501805460ff1916600317905543601086015560408051818152907fa15551854f54807a0f0db8e3b861523fd994877676824ed8603655ab18ca6dd890611707908301600d89016129e5565b9143602082015280600435930390a2604051600381527f7e5e6bfcab605d9254dbb5c3b4c8bd65ee4705bb30b1fc434d9651d24d368f36602060043592a260018055005b611761611758858361293b565b84600435612abd565b9061176f82600d88016128f3565b83518060001981011161180e576117899060001901612a8b565b9560009360005b86518110156117f4576001600160a01b03858116906117af838a612851565b5116036117c5575b6117c090612732565b611790565b946117c0906117ec906001600160a01b036117e0898b612851565b5116611622828d612851565b9590506117b7565b5095945095909250611807915092612732565b92906116b2565b634e487b7160e01b600052601160045260246000fd5b925084611662565b60405162461bcd60e51b815260206004820152601860248201527f4e6f20656c696769626c65207061727469636970616e747300000000000000006044820152606490fd5b611887906001600160a01b036116168285612851565b611640565b60405162461bcd60e51b815260206004820152601460248201527314dbd99d0818d85c081b9bdd081c995858da195960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527443616d706169676e207374696c6c2061637469766560581b6044820152606490fd5b50600354600435111561151c565b346101af5760403660031901126101af5761192c61225b565b336001600160a01b03821603611948576102a0906004356126bd565b60405163334bd91960e11b8152600490fd5b346101af5760403660031901126101af5761197361225b565b6000608060405161198381612271565b8281528260208201528260408201528260608201520152600435600052600660205260406000209060018060a01b031660005260205260a060406000206040516119cc81612271565b81549182825260018101546020830190815260ff60028301541690604084019115158252608060ff6004600386015495606088019687520154169401931515845260405194855251602085015251151560408401525160608301525115156080820152f35b346101af57611a3f366124c2565b906000526007602052604060002080548210156101af57602091611a62916124d8565b905460405160039290921b1c6001600160a01b03168152f35b346101af5760403660031901126101af576102a0600435611a9a61225b565b90806000526000602052611ab5600160406000200154612619565b61263f565b346101af5760203660031901126101af5760043560005260006020526020600160406000200154604051908152f35b346101af57611af7366124c2565b611aff612543565b81151580611c1b575b611b1190612865565b816000526005602052604060002060ff600e82015416600681101561023f57806001611b469214908115611c10575b50612bb3565b42821115611bcb57600a01805480831115611b8f57827f70e9f58eec5af783627e59f6af135becb4bcbd768c33d59e8f30f329cde15f2e936040935582519182526020820152a2005b60405162461bcd60e51b81526020600482015260146024820152734d75737420657874656e6420656e64206461746560601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f456e642064617465206d75737420626520696e206675747572650000000000006044820152606490fd5b600291501485611b40565b50600354821115611b08565b346101af5760003660031901126101af576020600354604051908152f35b346101af5760203660031901126101af576004356000526005602052604060002080549060018101611c76906123cf565b90611c83600282016123cf565b611c8f600383016123cf565b916004810154926005820154600683015460078401546008850154600986015491600a87015493600b88015495600e89015497600f8a015499601001549a6040519e8f9e8f9182526102008060208401528201611ceb91612475565b908082039060400152611cfd91612475565b8d810360608f0152611d0e91612475565b9a60808d015260a08c015260c08b015260e08a0152610100890152610120880152610140870152610160860152610180850160ff821690611d4e916124b5565b60081c60ff1615156101a08501526101c08401526101e08301520390f35b346101af5760203660031901126101af57600435611d88612543565b80151580611e1f575b611d9a90612865565b806000526005602052604060002060ff600e8201541690600682101561023f57611dd1826001600a9414908115611c105750612bb3565b0180549060001942019142831161180e57828111611deb57005b827f70e9f58eec5af783627e59f6af135becb4bcbd768c33d59e8f30f329cde15f2e936040935582519182526020820152a2005b50600354811115611d91565b346101af576101203660031901126101af5767ffffffffffffffff6004358181116101af57611e5e903690600401612336565b9060249182358281116101af57611e79903690600401612336565b6044358381116101af57611e91903690600401612336565b61010435908482116101af57366023830112156101af57816004013591611eb78361237d565b92611ec560405194856122f8565b808452602096888886019260051b840101923684116101af57898101925b848410612164575050505050611ef7612543565b60c4354281111561212b5760e43591818311156120f457606435801515806120e9575b156120b65760a43591821561207a5792889994919260059993611f7e8a9896611f75611f6c9b611f4b600354612732565b9e8f998a6003558a60005252604060002098895560019c8d9c8d8b01612741565b60028901612741565b60038701612741565b6004850155608435600585015560068401556009830155600a820155600e8101805460ff191685179055600c01936000905b611ffa575b878787817fc04c663886cae794dc52158f70fe6c8ee3b0140d4f48647282f9b693ff688a6560405185815280611fef339588830190612475565b0390a3604051908152f35b81518110156120755761200d8183612851565b518554600160401b81101561206057808661202b92018855876124d8565b61204b579161203f61204492879594612741565b612732565b9091611fb0565b84634e487b7160e01b60005260006004526000fd5b84634e487b7160e01b60005260416004526000fd5b611fb5565b60405162461bcd60e51b8152600481018a90526015818c015274125b9d985b1a59081d1a58dad95d08185b5bdd5b9d605a1b6044820152606490fd5b60405162461bcd60e51b815260048101899052600c818b01526b496e76616c6964206361707360a01b6044820152606490fd5b508060843511611f1a565b60405162461bcd60e51b8152600481018890526010818a01526f496e76616c696420656e64206461746560801b6044820152606490fd5b60405162461bcd60e51b81526004810187905260128189015271496e76616c6964207374617274206461746560701b6044820152606490fd5b83358381116101af578a9161217f83928e3691870101612336565b815201930192611ee3565b346101af5760403660031901126101af576121a361225b565b600435600052600660205260406000209060018060a01b031660005260205260a0604060002080549060018101549060ff60028201541660ff600460038401549301541692604051948552602085015215156040840152606083015215156080820152f35b346101af5760203660031901126101af576004359063ffffffff60e01b82168092036101af57602091637965db0b60e01b811490811561224a575b5015158152f35b6301ffc9a760e01b14905083612243565b602435906001600160a01b03821682036101af57565b60a0810190811067ffffffffffffffff82111761228d57604052565b634e487b7160e01b600052604160045260246000fd5b610240810190811067ffffffffffffffff82111761228d57604052565b6080810190811067ffffffffffffffff82111761228d57604052565b6060810190811067ffffffffffffffff82111761228d57604052565b90601f8019910116810190811067ffffffffffffffff82111761228d57604052565b67ffffffffffffffff811161228d57601f01601f191660200190565b81601f820112156101af5780359061234d8261231a565b9261235b60405194856122f8565b828452602083830101116101af57816000926020809301838601378301015290565b67ffffffffffffffff811161228d5760051b60200190565b90600182811c921680156123c5575b60208310146123af57565b634e487b7160e01b600052602260045260246000fd5b91607f16916123a4565b90604051918260008254926123e384612395565b908184526001948581169081600014612452575060011461240f575b505061240d925003836122f8565b565b9093915060005260209081600020936000915b81831061243a57505061240d935082010138806123ff565b85548884018501529485019487945091830191612422565b91505061240d94506020925060ff191682840152151560051b82010138806123ff565b919082519283825260005b8481106124a1575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612480565b90600682101561023f5752565b60409060031901126101af576004359060243590565b80548210156124f05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110612526575050505090565b83516001600160a01b031685529381019392810192600101612518565b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260409020547fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759060ff161561259f5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527fee57cd81e84075558e8fcc182a1f4393f91fc97f963a136e66b7f949a62f319f60205260409020547f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299060ff161561259f5750565b80600052600060205260406000203360005260205260ff604060002054161561259f5750565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416156000146126b857808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146126b85780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b600019811461180e5760010190565b919091825167ffffffffffffffff811161228d5761275f8254612395565b601f8111612809575b50602080601f83116001146127a557508192939460009261279a575b50508160011b916000199060031b1c1916179055565b015190503880612784565b90601f198316958460005282600020926000905b8882106127f1575050836001959697106127d8575b505050811b019055565b015160001960f88460031b161c191690553880806127ce565b806001859682949686015181550195019301906127b9565b600083815260208120601f840160051c81019260208510612847575b601f0160051c01915b82811061283c575050612768565b81815560010161282e565b9092508290612825565b80518210156124f05760209160051b010190565b1561286c57565b60405162461bcd60e51b815260206004820152601760248201527f43616d706169676e20646f6573206e6f742065786973740000000000000000006044820152606490fd5b156128b857565b60405162461bcd60e51b815260206004820152601360248201527243616d706169676e206e6f742061637469766560681b6044820152606490fd5b8054600160401b81101561228d57612910916001820181556124d8565b819291549060031b9160018060a01b03809116831b921b1916179055565b9190820391821161180e57565b9190820180921161180e57565b906000602091828151910182855af1156113f4576000513d61299b57506001600160a01b0381163b155b6129795750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415612972565b60ff600254166129b057565b60405163d93c066560e01b8152600490fd5b6002600154146129d3576002600155565b604051633ee5aeb560e01b8152600490fd5b90815480825260208092019260005281600020916000905b828210612a0b575050505090565b83546001600160a01b0316855293840193600193840193909101906129fd565b3d15612a56573d90612a3c8261231a565b91612a4a60405193846122f8565b82523d6000602084013e565b606090565b9061240d916040519163a9059cbb60e01b602084015261dead602484015260448301526044825261121d826122c0565b90612a958261237d565b612aa260405191826122f8565b8281528092612ab3601f199161237d565b0190602036910137565b600093845b8351861015612b1357612b07612b0d918460005260016020600681526040908160002090838060a01b03612af68d8c612851565b51166000525260002001549061293b565b95612732565b94612ac2565b91939094508115612b9d570690600091825b8251811015612b815784600052612b56602094600686526001604080600020828060a01b039889612af6888b612851565b93848310612b6d5750612b6890612732565b612b25565b9450919050612b7c9250612851565b511690565b50509150508051156124f057602001516001600160a01b031690565b634e487b7160e01b600052601260045260246000fd5b15612bba57565b60405162461bcd60e51b815260206004820152601a60248201527f43616d706169676e206e6f74206163746976652f7061757365640000000000006044820152606490fdfea2646970667358221220f0425668dee834cf06218eabaaad7d45e721e673019bde7f209ca0e62f963f2e64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0xA0 CALLVALUE PUSH3 0x150 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH3 0x2F6A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 DUP5 DUP4 GT DUP5 DUP5 LT OR PUSH3 0xF5 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x150 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x150 JUMPI PUSH1 0x1 DUP1 SSTORE DUP1 ISZERO PUSH3 0x10B JUMPI PUSH1 0x80 MSTORE PUSH3 0x71 CALLER PUSH3 0x155 JUMP JUMPDEST POP PUSH3 0x7D CALLER PUSH3 0x1D5 JUMP JUMPDEST POP PUSH3 0x89 CALLER PUSH3 0x277 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE PREVRANDAO PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP3 DUP2 DUP5 LT SWAP1 DUP5 GT OR PUSH3 0xF5 JUMPI DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x4 SSTORE PUSH2 0x2C35 SWAP1 DUP2 PUSH3 0x315 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x79D ADD MSTORE DUP2 DUP2 PUSH2 0x960 ADD MSTORE DUP2 DUP2 PUSH2 0xB77 ADD MSTORE DUP2 DUP2 PUSH2 0x1053 ADD MSTORE PUSH2 0x11A4 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x1D1 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH1 0xFF AND PUSH3 0x272 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xEE57CD81E84075558E8FCC182A1F4393F91FC97F963A136E66B7F949A62F319F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 SWAP1 PUSH1 0xFF AND PUSH3 0x272 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F4A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x2208 JUMPI POP DUP1 PUSH4 0x2E060C6 EQ PUSH2 0x218A JUMPI DUP1 PUSH4 0x3463DD9 EQ PUSH2 0x1E2B JUMPI DUP1 PUSH4 0xB040563 EQ PUSH2 0x1D6C JUMPI DUP1 PUSH4 0x141961BC EQ PUSH2 0x1C45 JUMPI DUP1 PUSH4 0x16F43DD4 EQ PUSH2 0x1C27 JUMPI DUP1 PUSH4 0x171E986E EQ PUSH2 0x1AE9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1ABA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A7B JUMPI DUP1 PUSH4 0x35ABD49B EQ PUSH2 0x1A31 JUMPI DUP1 PUSH4 0x35F3AD7A EQ PUSH2 0x195A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1913 JUMPI DUP1 PUSH4 0x39A2EB2A EQ PUSH2 0x1500 JUMPI DUP1 PUSH4 0x3B7B6188 EQ PUSH2 0x10EC JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x1082 JUMPI DUP1 PUSH4 0x4EB53F99 EQ PUSH2 0x103D JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0xFE3 JUMPI DUP1 PUSH4 0x5598F8CC EQ PUSH2 0xC5C JUMPI DUP1 PUSH4 0x5B7BAF64 EQ PUSH2 0xA94 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xA71 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0x871F87CF EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x8C6AB238 EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0x9E3696D9 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xB5801D91 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xDE99347A EQ PUSH2 0x1B4 JUMPI PUSH4 0xF5B541A6 EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D0 PUSH2 0x25BD JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x255 JUMPI JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x23F JUMPI PUSH2 0x211 PUSH1 0x1 PUSH1 0x2 SWAP4 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH32 0xAB1902EE37C92D1A78DDA53814D64B815E7E3EE287D60843A3DBD6954E3206B4 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1D9 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x2A0 PUSH1 0x4 CALLDATALOAD PUSH2 0x280 PUSH2 0x225B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x29B PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2619 JUMP JUMPDEST PUSH2 0x26BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2BE PUSH2 0x225B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEE57CD81E84075558E8FCC182A1F4393F91FC97F963A136E66B7F949A62F319F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x461 JUMPI JUMPDEST ISZERO PUSH2 0x42C JUMPI DUP2 ISZERO ISZERO DUP1 PUSH2 0x420 JUMPI JUMPDEST PUSH2 0x314 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP1 DUP4 MSTORE SWAP5 DUP4 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3E3 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3AB JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 PUSH1 0x0 MSTORE MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xD8E2A0FB3631991DD34AC6AF97A04F3485326D9F70043BB29F54E66F0C5577C6 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E4818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206E6F742070617274696369706174696E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x30B JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2FD JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4DB PUSH2 0x25BD JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x5C6 JUMPI JUMPDEST PUSH2 0x4ED SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x2 SUB PUSH2 0x58B JUMPI PUSH1 0xA ADD SLOAD TIMESTAMP GT PUSH2 0x551 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x25128B02D37802123547E1526AB020238ABF16BBC37A5BD0A918D5088B016E95 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10D85B5C185A59DB881A185CC8195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10D85B5C185A59DB881B9BDD081C185D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x4E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x5EB PUSH2 0x225B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x686 JUMPI JUMPDEST PUSH2 0x645 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x682 PUSH2 0x667 PUSH2 0x66E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x29E5 JUMP JUMPDEST SUB DUP3 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2506 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x63C JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP1 ISZERO SWAP1 DUP2 ISZERO DUP1 DUP3 SUB PUSH2 0x1AF JUMPI PUSH2 0x6BD PUSH2 0x2543 JUMP JUMPDEST DUP4 ISZERO ISZERO DUP1 PUSH2 0x84A JUMPI JUMPDEST PUSH2 0x6CF SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x29C2 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0xE DUP5 ADD SWAP4 DUP5 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP5 PUSH1 0x6 DUP7 LT ISZERO PUSH2 0x23F JUMPI PUSH32 0xF75BD1A9B4E512FC86093732061EE514541C41FCF65F64697FFD3E0F6328C215 SWAP7 PUSH1 0x4 DUP10 SWAP6 PUSH2 0x730 PUSH1 0x1 PUSH1 0x20 SWAP11 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE DUP1 PUSH2 0x83D JUMPI JUMPDEST ISZERO PUSH2 0x753 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x830 JUMPI JUMPDEST PUSH2 0x764 JUMPI JUMPDEST DUP1 PUSH2 0x743 JUMP JUMPDEST DUP4 DUP2 PUSH1 0xF PUSH1 0x7 PUSH32 0x8BC81353CF6671D259D22783E39ED930583C86F3F4CF7E981298E6A872DFB15D SWAP5 ADD SWAP2 PUSH1 0x0 DUP4 SLOAD SWAP4 SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD SSTORE PUSH32 0x0 DUP4 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP3 MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x7E4 DUP2 PUSH2 0x22DC JUMP JUMPDEST MLOAD SWAP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH2 0x7FB PUSH2 0x2A2B JUMP JUMPDEST POP ISZERO PUSH2 0x820 JUMPI JUMPDEST POP POP ADD PUSH2 0x810 DUP3 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP4 DUP6 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x829 SWAP2 PUSH2 0x2A5B JUMP JUMPDEST DUP11 DUP4 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0x7 DUP2 ADD SLOAD ISZERO ISZERO PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x7 DUP3 ADD SLOAD ISZERO ISZERO PUSH2 0x73D JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP5 GT ISZERO PUSH2 0x6C6 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xA65 JUMPI JUMPDEST PUSH2 0x8B9 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x8C1 PUSH2 0x29C2 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x3 SUB PUSH2 0xA29 JUMPI PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x9EC JUMPI DUP4 PUSH32 0x7E5E6BFCAB605D9254DBB5C3B4C8BD65EE4705BB30B1FC434D9651D24D368F36 SWAP5 SWAP4 PUSH1 0x0 PUSH1 0x8 DUP6 DUP3 PUSH32 0x8BC81353CF6671D259D22783E39ED930583C86F3F4CF7E981298E6A872DFB15D SWAP7 PUSH1 0x7 DUP13 SWAP10 ADD SWAP1 PUSH2 0x105 DUP3 SLOAD SWAP8 DUP9 PUSH1 0xF DUP8 ADD SSTORE PUSH2 0xFFFF NOT AND OR SWAP1 SSTORE SSTORE ADD SSTORE PUSH32 0x0 DUP2 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP7 DUP2 ADD SWAP1 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP3 MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x9A7 DUP2 PUSH2 0x22DC JUMP JUMPDEST MLOAD SWAP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH2 0x9BE PUSH2 0x2A2B JUMP JUMPDEST POP ISZERO PUSH2 0x9DC JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x9E5 SWAP2 PUSH2 0x2A5B JUMP JUMPDEST DUP8 DUP2 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B9CC8185B1C9958591E48189D5C9B9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15DA5B9B995C9CC81B9BDD081CD95B1958DD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x8B0 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xAB2 PUSH2 0x29C2 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0xC50 JUMPI JUMPDEST PUSH2 0xAC4 SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xFF PUSH1 0xE DUP5 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x4 SUB PUSH2 0xC1B JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xBAA JUMPI PUSH1 0x1 PUSH1 0x8 SWAP4 PUSH2 0xB9B SWAP8 SWAP4 DUP3 PUSH1 0x0 SWAP5 PUSH1 0xFF NOT AND OR SWAP1 SSTORE DUP3 DUP2 SSTORE ADD SSTORE ADD DUP2 DUP2 SLOAD LT ISZERO PUSH1 0x0 EQ PUSH2 0xBA1 JUMPI PUSH2 0xB4A DUP3 DUP3 SLOAD PUSH2 0x292E JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0xB75 DUP2 PUSH2 0x22C0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 SWAP1 SSTORE PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C99599D5B991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD1A1A5B99C81D1BC81C99599D5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BDD0818D85B98D95B1B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0xABB JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x0 PUSH2 0x220 PUSH1 0x40 MLOAD PUSH2 0xC7E DUP2 PUSH2 0x22A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE DUP3 PUSH2 0x1E0 DUP3 ADD MSTORE DUP3 PUSH2 0x200 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xFD7 JUMPI JUMPDEST PUSH2 0xD05 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD1F DUP3 PUSH2 0x22A3 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH2 0xD2F PUSH1 0x1 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD40 PUSH1 0x2 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xD51 PUSH1 0x3 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0xDB8 DUP2 PUSH2 0x237D JUMP JUMPDEST SWAP1 PUSH2 0xDC6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x22F8 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0xC DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xFBA JUMPI POP POP POP POP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xE02 DUP2 PUSH2 0x667 DUP2 PUSH1 0xD DUP7 ADD PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD SWAP1 PUSH1 0x6 PUSH1 0xFF DUP4 AND LT ISZERO PUSH2 0x23F JUMPI PUSH1 0xFF DUP3 DUP2 PUSH1 0x10 SWAP5 AND PUSH2 0x1C0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP5 ADD MSTORE PUSH1 0xF DUP2 ADD SLOAD PUSH2 0x200 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x220 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEA2 PUSH2 0xE8C PUSH2 0xE76 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x240 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x260 DUP6 ADD SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2475 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD SWAP3 PUSH1 0x1F NOT DUP4 DUP3 SUB ADD PUSH2 0x1A0 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xF8D JUMPI DUP7 DUP1 DUP8 PUSH2 0x220 PUSH2 0xF54 DUP13 PUSH2 0x1A0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP7 DUP4 SUB ADD PUSH2 0x1C0 DUP8 ADD MSTORE PUSH2 0x2506 JUMP JUMPDEST SWAP2 PUSH2 0xF69 PUSH2 0x1C0 DUP3 ADD MLOAD PUSH2 0x1E0 DUP7 ADD SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x240 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP7 PUSH1 0x20 DUP1 PUSH2 0xFAB PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP12 MLOAD PUSH2 0x2475 JUMP JUMPDEST SWAP10 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xFC9 DUP6 PUSH2 0x23CF JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0xCFC JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0xFFC PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1004 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x109B PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x10DA JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x10FA CALLDATASIZE PUSH2 0x24C2 JUMP JUMPDEST SWAP1 PUSH2 0x1103 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x110B PUSH2 0x29A4 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x14F4 JUMPI JUMPDEST PUSH2 0x111D SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0xFF PUSH1 0xE DUP6 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x1 PUSH2 0x114B SWAP2 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x9 DUP5 ADD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x14E6 JUMPI JUMPDEST ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x6 DUP5 ADD SWAP4 DUP5 SLOAD DUP4 LT PUSH2 0x1466 JUMPI DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x1435 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP6 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP8 DUP4 DUP11 DUP2 DUP9 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x13F4 JUMPI DUP9 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x1400 JUMPI JUMPDEST POP SWAP1 PUSH2 0x1222 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP5 ADD MSTORE CALLER DUP13 DUP5 ADD MSTORE ADDRESS PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x64 DUP3 MSTORE PUSH2 0x121D DUP3 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x2948 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x13C5 JUMPI JUMPDEST PUSH2 0x124C SWAP3 POP PUSH2 0x292E JUMP JUMPDEST SWAP6 SLOAD SWAP1 DUP2 DUP8 LT PUSH2 0x1381 JUMPI PUSH1 0x7 DUP4 ADD SWAP2 PUSH2 0x1266 DUP9 DUP5 SLOAD PUSH2 0x293B JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SLOAD LT PUSH2 0x134A JUMPI DUP1 ISZERO PUSH2 0x1335 JUMPI DUP8 DIV SWAP5 DUP6 ISZERO PUSH2 0x12F2 JUMPI POP SWAP1 PUSH1 0x1 DUP3 PUSH2 0x1292 DUP10 PUSH1 0x8 SWAP7 SWAP6 SLOAD PUSH2 0x293B JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x12A0 DUP7 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x12AD DUP8 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x12BB DUP6 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0xBF3A2998BF95EFFB9622E3AEEA768EC248F238862FD602100075C04D21CAA23C PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP5 PUSH1 0x1B PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F72206F6E65207469636B65740000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x10 DUP2 DUP9 ADD MSTORE PUSH16 0x4578636565647320686172642063617 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1B DUP2 DUP8 ADD MSTORE PUSH32 0x416D6F756E7420746F6F20736D616C6C20616674657220666565730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP5 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13ED JUMPI JUMPDEST PUSH2 0x13DB DUP2 DUP4 PUSH2 0x22F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AF JUMPI PUSH2 0x124C SWAP2 MLOAD PUSH2 0x1242 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP4 SWAP6 SWAP3 SWAP7 POP RETURNDATASIZE DUP4 GT PUSH2 0x142E JUMPI JUMPDEST PUSH2 0x1419 DUP2 DUP4 PUSH2 0x22F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AF JUMPI MLOAD SWAP3 DUP8 SWAP3 SWAP1 PUSH2 0x1222 PUSH2 0x11EA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x140F JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH2 0x144B CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0xB DUP3 ADD PUSH2 0x1459 DUP2 SLOAD PUSH2 0x2732 JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x416D6F756E742062656C6F77206D696E696D756D PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E206E6F7420696E2070726F67726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xA DUP5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1159 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1114 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0x1905 JUMPI JUMPDEST PUSH2 0x1525 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x152D PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP1 PUSH1 0xE DUP4 ADD SLOAD AND SWAP1 PUSH1 0x6 SWAP2 DUP3 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x1 PUSH2 0x155E SWAP2 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0xA DUP4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x18C8 JUMPI PUSH1 0x7 DUP4 ADD SLOAD SWAP2 PUSH1 0x4 DUP5 ADD SLOAD DUP4 LT PUSH2 0x188C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x667 PUSH2 0x159D PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x15A7 DUP2 MLOAD PUSH2 0x2A8B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x162F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x15DC DUP5 DUP8 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP7 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1603 JUMPI JUMPDEST POP PUSH2 0x15FE SWAP1 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST DUP2 SWAP6 PUSH2 0x1628 SWAP2 PUSH2 0x1616 PUSH2 0x15FE SWAP5 DUP8 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH2 0x1622 DUP3 DUP9 PUSH2 0x2851 JUMP JUMPDEST MSTORE PUSH2 0x2732 JUMP JUMPDEST SWAP5 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST DUP8 DUP5 DUP9 DUP8 PUSH2 0x163C DUP2 PUSH2 0x2A8B JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1871 JUMPI POP POP POP DUP2 SWAP1 DUP3 MLOAD ISZERO PUSH2 0x182C JUMPI PUSH1 0xC DUP5 ADD SLOAD SWAP3 MLOAD DUP1 DUP5 GT PUSH2 0x1824 JUMPI JUMPDEST POP PUSH1 0x0 NOT NUMBER ADD SWAP1 NUMBER DUP3 GT PUSH2 0x180E JUMPI PUSH1 0x4 SLOAD PUSH2 0x167C DUP2 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 BLOCKHASH DUP5 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x16AA DUP2 PUSH2 0x2271 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x174B JUMPI PUSH1 0xE DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE NUMBER PUSH1 0x10 DUP7 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE SWAP1 PUSH32 0xA15551854F54807A0F0DB8E3B861523FD994877676824ED8603655AB18CA6DD8 SWAP1 PUSH2 0x1707 SWAP1 DUP4 ADD PUSH1 0xD DUP10 ADD PUSH2 0x29E5 JUMP JUMPDEST SWAP2 NUMBER PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH1 0x4 CALLDATALOAD SWAP4 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE PUSH32 0x7E5E6BFCAB605D9254DBB5C3B4C8BD65EE4705BB30B1FC434D9651D24D368F36 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x1761 PUSH2 0x1758 DUP6 DUP4 PUSH2 0x293B JUMP JUMPDEST DUP5 PUSH1 0x4 CALLDATALOAD PUSH2 0x2ABD JUMP JUMPDEST SWAP1 PUSH2 0x176F DUP3 PUSH1 0xD DUP9 ADD PUSH2 0x28F3 JUMP JUMPDEST DUP4 MLOAD DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x180E JUMPI PUSH2 0x1789 SWAP1 PUSH1 0x0 NOT ADD PUSH2 0x2A8B JUMP JUMPDEST SWAP6 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP1 PUSH2 0x17AF DUP4 DUP11 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND SUB PUSH2 0x17C5 JUMPI JUMPDEST PUSH2 0x17C0 SWAP1 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1790 JUMP JUMPDEST SWAP5 PUSH2 0x17C0 SWAP1 PUSH2 0x17EC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17E0 DUP10 DUP12 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH2 0x1622 DUP3 DUP14 PUSH2 0x2851 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0x17B7 JUMP JUMPDEST POP SWAP6 SWAP5 POP SWAP6 SWAP1 SWAP3 POP PUSH2 0x1807 SWAP2 POP SWAP3 PUSH2 0x2732 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 POP DUP5 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656C696769626C65207061727469636970616E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1887 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1616 DUP3 DUP6 PUSH2 0x2851 JUMP JUMPDEST PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DBD99D0818D85C081B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x43616D706169676E207374696C6C20616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0x151C JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x192C PUSH2 0x225B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1948 JUMPI PUSH2 0x2A0 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x1973 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x1983 DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x19CC DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 PUSH1 0x60 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP5 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x1A3F CALLDATASIZE PUSH2 0x24C2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1A62 SWAP2 PUSH2 0x24D8 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x2A0 PUSH1 0x4 CALLDATALOAD PUSH2 0x1A9A PUSH2 0x225B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1AB5 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2619 JUMP JUMPDEST PUSH2 0x263F JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x1AF7 CALLDATASIZE PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x1AFF PUSH2 0x2543 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x1C1B JUMPI JUMPDEST PUSH2 0x1B11 SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI DUP1 PUSH1 0x1 PUSH2 0x1B46 SWAP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x1C10 JUMPI JUMPDEST POP PUSH2 0x2BB3 JUMP JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0x1BCB JUMPI PUSH1 0xA ADD DUP1 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x1B8F JUMPI DUP3 PUSH32 0x70E9F58EEC5AF783627E59F6AF135BECB4BCBD768C33D59E8F30F329CDE15F2E SWAP4 PUSH1 0x40 SWAP4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D75737420657874656E6420656E642064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642064617465206D75737420626520696E20667574757265000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP6 PUSH2 0x1B40 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x1B08 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD PUSH2 0x1C76 SWAP1 PUSH2 0x23CF JUMP JUMPDEST SWAP1 PUSH2 0x1C83 PUSH1 0x2 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1C8F PUSH1 0x3 DUP4 ADD PUSH2 0x23CF JUMP JUMPDEST SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD PUSH1 0x9 DUP7 ADD SLOAD SWAP2 PUSH1 0xA DUP8 ADD SLOAD SWAP4 PUSH1 0xB DUP9 ADD SLOAD SWAP6 PUSH1 0xE DUP10 ADD SLOAD SWAP8 PUSH1 0xF DUP11 ADD SLOAD SWAP10 PUSH1 0x10 ADD SLOAD SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP2 DUP3 MSTORE PUSH2 0x200 DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD PUSH2 0x1CEB SWAP2 PUSH2 0x2475 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB SWAP1 PUSH1 0x40 ADD MSTORE PUSH2 0x1CFD SWAP2 PUSH2 0x2475 JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x60 DUP16 ADD MSTORE PUSH2 0x1D0E SWAP2 PUSH2 0x2475 JUMP JUMPDEST SWAP11 PUSH1 0x80 DUP14 ADD MSTORE PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE PUSH2 0x180 DUP6 ADD PUSH1 0xFF DUP3 AND SWAP1 PUSH2 0x1D4E SWAP2 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1E0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D88 PUSH2 0x2543 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1E1F JUMPI JUMPDEST PUSH2 0x1D9A SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD AND SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x23F JUMPI PUSH2 0x1DD1 DUP3 PUSH1 0x1 PUSH1 0xA SWAP5 EQ SWAP1 DUP2 ISZERO PUSH2 0x1C10 JUMPI POP PUSH2 0x2BB3 JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 PUSH1 0x0 NOT TIMESTAMP ADD SWAP2 TIMESTAMP DUP4 GT PUSH2 0x180E JUMPI DUP3 DUP2 GT PUSH2 0x1DEB JUMPI STOP JUMPDEST DUP3 PUSH32 0x70E9F58EEC5AF783627E59F6AF135BECB4BCBD768C33D59E8F30F329CDE15F2E SWAP4 PUSH1 0x40 SWAP4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1D91 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x1E5E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2336 JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x1E79 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x1E91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 DUP5 DUP3 GT PUSH2 0x1AF JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1AF JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x1EB7 DUP4 PUSH2 0x237D JUMP JUMPDEST SWAP3 PUSH2 0x1EC5 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x22F8 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP9 DUP9 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x1AF JUMPI DUP10 DUP2 ADD SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2164 JUMPI POP POP POP POP POP PUSH2 0x1EF7 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD TIMESTAMP DUP2 GT ISZERO PUSH2 0x212B JUMPI PUSH1 0xE4 CALLDATALOAD SWAP2 DUP2 DUP4 GT ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x20E9 JUMPI JUMPDEST ISZERO PUSH2 0x20B6 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 ISZERO PUSH2 0x207A JUMPI SWAP3 DUP9 SWAP10 SWAP5 SWAP2 SWAP3 PUSH1 0x5 SWAP10 SWAP4 PUSH2 0x1F7E DUP11 SWAP9 SWAP7 PUSH2 0x1F75 PUSH2 0x1F6C SWAP12 PUSH2 0x1F4B PUSH1 0x3 SLOAD PUSH2 0x2732 JUMP JUMPDEST SWAP15 DUP16 SWAP10 DUP11 PUSH1 0x3 SSTORE DUP11 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP9 DUP10 SSTORE PUSH1 0x1 SWAP13 DUP14 SWAP13 DUP14 DUP12 ADD PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0xA DUP3 ADD SSTORE PUSH1 0xE DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0xC ADD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x1FFA JUMPI JUMPDEST DUP8 DUP8 DUP8 DUP2 PUSH32 0xC04C663886CAE794DC52158F70FE6C8EE3B0140D4F48647282F9B693FF688A65 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x1FEF CALLER SWAP6 DUP9 DUP4 ADD SWAP1 PUSH2 0x2475 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x200D DUP2 DUP4 PUSH2 0x2851 JUMP JUMPDEST MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2060 JUMPI DUP1 DUP7 PUSH2 0x202B SWAP3 ADD DUP9 SSTORE DUP8 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x204B JUMPI SWAP2 PUSH2 0x203F PUSH2 0x2044 SWAP3 DUP8 SWAP6 SWAP5 PUSH2 0x2741 JUMP JUMPDEST PUSH2 0x2732 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1FB0 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP13 ADD MSTORE PUSH21 0x125B9D985B1A59081D1A58DAD95D08185B5BDD5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0xC DUP2 DUP12 ADD MSTORE PUSH12 0x496E76616C69642063617073 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x84 CALLDATALOAD GT PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x10 DUP2 DUP11 ADD MSTORE PUSH16 0x496E76616C696420656E642064617465 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x12 DUP2 DUP10 ADD MSTORE PUSH18 0x496E76616C69642073746172742064617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x1AF JUMPI DUP11 SWAP2 PUSH2 0x217F DUP4 SWAP3 DUP15 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x2336 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x1EE3 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x21A3 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AF JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x224A JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AF JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x240 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x228D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1AF JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x234D DUP3 PUSH2 0x231A JUMP JUMPDEST SWAP3 PUSH2 0x235B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x22F8 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1AF JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x228D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x23C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x23AF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x23E3 DUP5 PUSH2 0x2395 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2452 JUMPI POP PUSH1 0x1 EQ PUSH2 0x240F JUMPI JUMPDEST POP POP PUSH2 0x240D SWAP3 POP SUB DUP4 PUSH2 0x22F8 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x243A JUMPI POP POP PUSH2 0x240D SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x23FF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x240D SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x23FF JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x24A1 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x23F JUMPI MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2526 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2518 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x259F JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEE57CD81E84075558E8FCC182A1F4393F91FC97F963A136E66B7F949A62F319F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x259F JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x259F JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x26B8 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x26B8 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x180E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x228D JUMPI PUSH2 0x275F DUP3 SLOAD PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2809 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x27A5 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x279A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2784 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x27F1 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x27D8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x27CE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP3 PUSH1 0x20 DUP6 LT PUSH2 0x2847 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x283C JUMPI POP POP PUSH2 0x2768 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x282E JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2825 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x286C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E20646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x43616D706169676E206E6F7420616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x228D JUMPI PUSH2 0x2910 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x24D8 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x180E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x180E JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x299B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2979 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2972 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x29B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x29D3 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A0B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29FD JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2A56 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2A3C DUP3 PUSH2 0x231A JUMP JUMPDEST SWAP2 PUSH2 0x2A4A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x22F8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x240D SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xDEAD PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH2 0x121D DUP3 PUSH2 0x22C0 JUMP JUMPDEST SWAP1 PUSH2 0x2A95 DUP3 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x2AA2 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x22F8 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2AB3 PUSH1 0x1F NOT SWAP2 PUSH2 0x237D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 JUMPDEST DUP4 MLOAD DUP7 LT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B07 PUSH2 0x2B0D SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x2AF6 DUP14 DUP13 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x293B JUMP JUMPDEST SWAP6 PUSH2 0x2732 JUMP JUMPDEST SWAP5 PUSH2 0x2AC2 JUMP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP5 POP DUP2 ISZERO PUSH2 0x2B9D JUMPI MOD SWAP1 PUSH1 0x0 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2B81 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH2 0x2B56 PUSH1 0x20 SWAP5 PUSH1 0x6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 PUSH2 0x2AF6 DUP9 DUP12 PUSH2 0x2851 JUMP JUMPDEST SWAP4 DUP5 DUP4 LT PUSH2 0x2B6D JUMPI POP PUSH2 0x2B68 SWAP1 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2B25 JUMP JUMPDEST SWAP5 POP SWAP2 SWAP1 POP PUSH2 0x2B7C SWAP3 POP PUSH2 0x2851 JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST POP POP SWAP2 POP POP DUP1 MLOAD ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x2BBA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E206E6F74206163746976652F706175736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE TIMESTAMP JUMP PUSH9 0xDEE834CF06218EABAA 0xAD PUSH30 0x45E721E673019BDE7F209CA0E62F963F2E64736F6C634300081400332F87 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"547:18957:12:-:0;;;;-1:-1:-1;;;;;547:18957:12;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;547:18957:12;;;;;;;;;818:26;;3418:25;;547:18957;;3479:32;;3530:42;3561:10;3530:42;:::i;:::-;;3582:34;3561:10;3582:34;:::i;:::-;;3626:37;3561:10;3626:37;:::i;:::-;;547:18957;;;3748:63;;3765:15;;818:26;;3782:16;547:18957;818:26;;;3561:10;818:26;;;;;;3748:63;;;3479:32;547:18957;;;;;;;;;;;;;;;818:26;3738:74;;3716:97;818:26;547:18957;;;;;;3479:32;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;6155:316:0;-1:-1:-1;;;;;547:18957:12;3441:1;547:18957;;;;;;;;;;3441:1;;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:7;6346:40:0;-1:-1:-1;;;;;;;;;;;6346:40:0;;;547:18957:12;6400:11:0;:::o;6248:217::-;6442:12;;:::o;6155:316::-;-1:-1:-1;;;;;547:18957:12;2930:6:0;547:18957:12;;;;;;;;;;2930:6:0;;547:18957:12;749:23;;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:7;6346:40:0;;;547:18957:12;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;-1:-1:-1;;;;;547:18957:12;2930:6:0;547:18957:12;;;;;;;;;;2930:6:0;;547:18957:12;818:26;;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:7;6346:40:0;;;547:18957:12;6400:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8795,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":9014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":9410,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_array_address_dyn":{"entryPoint":9478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_storage":{"entryPoint":10725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_CampaignStatus":{"entryPoint":9397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":9333,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":10891,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":9085,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":8986,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":10483,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":10555,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10542,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":9167,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":10049,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9109,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":10795,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":8952,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_43814":{"entryPoint":8817,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_43822":{"entryPoint":8867,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_54927":{"entryPoint":8896,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_54928":{"entryPoint":8924,"id":null,"parameterSlots":1,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":10568,"id":969,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":9753,"id":94,"parameterSlots":1,"returnSlots":0},"fun_checkRole_43806":{"entryPoint":9539,"id":94,"parameterSlots":0,"returnSlots":0},"fun_checkRole_43831":{"entryPoint":9661,"id":94,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":9791,"id":257,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":10690,"id":1198,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":10660,"id":1103,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":9917,"id":295,"parameterSlots":2,"returnSlots":1},"fun_safeTransfer":{"entryPoint":10843,"id":592,"parameterSlots":2,"returnSlots":0},"fun_selectWeightedWinner":{"entryPoint":10941,"id":2352,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":10034,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn":{"entryPoint":10321,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":10417,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_046e":{"entryPoint":10341,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e36e":{"entryPoint":11187,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":9432,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"1285":[{"length":32,"start":1949},{"length":32,"start":2400},{"length":32,"start":2935},{"length":32,"start":4179},{"length":32,"start":4516}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146122085750806302e060c61461218a57806303463dd914611e2b5780630b04056314611d6c578063141961bc14611c4557806316f43dd414611c27578063171e986e14611ae9578063248a9ca314611aba5780632f2ff15d14611a7b57806335abd49b14611a3157806335f3ad7a1461195a57806336568abe1461191357806339a2eb2a146115005780633b7b6188146110ec5780634a4e3bd5146110825780634eb53f991461103d57806351858e2714610fe35780635598f8cc14610c5c5780635b7baf6414610a945780635c975abb14610a715780636d1b229d1461089157806375b238fc14610856578063871f87cf146106925780638c6ab2381461061f57806391d14854146105d25780639e3696d9146104bf578063a217fddf146104a3578063b5801d91146102a2578063d547741f14610261578063de99347a146101b45763f5b541a61461017457600080fd5b346101af5760003660031901126101af5760206040517f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298152f35b600080fd5b346101af5760203660031901126101af576004356101d06125bd565b80151580610255575b6101e290612865565b806000526005602052600e604060002001805460ff811690600682101561023f576102116001600293146128b1565b60ff19161790557fab1902ee37c92d1a78dda53814d64b815e7e3ee287d60843a3dbd6954e3206b4600080a2005b634e487b7160e01b600052602160045260246000fd5b506003548111156101d9565b346101af5760403660031901126101af576102a060043561028061225b565b9080600052600060205261029b600160406000200154612619565b6126bd565b005b346101af5760403660031901126101af576004356102be61225b565b3360009081527fee57cd81e84075558e8fcc182a1f4393f91fc97f963a136e66b7f949a62f319f602090815260409091205491929160ff168015610461575b1561042c5781151580610420575b61031490612865565b60008281526006825260408082206001600160a01b03909516808352948352902054156103e3578160005260068152604060002083600052815260ff600260406000200154166103ab57816000526006815260406000209083600052526002604060002001600160ff198254161790557fd8e2a0fb3631991dd34ac6af97a04f3485326d9f70043bb29f54e66f0c5577c6600080a3005b6064906040519062461bcd60e51b825260048201526011602482015270105b1c9958591e4818dbdb5c1b195d1959607a1b6044820152fd5b6064906040519062461bcd60e51b82526004820152601660248201527555736572206e6f742070617274696369706174696e6760501b6044820152fd5b5060035482111561030b565b6064906040519062461bcd60e51b82526004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152fd5b507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560005260008152604060002033600052815260ff604060002054166102fd565b346101af5760003660031901126101af57602060405160008152f35b346101af5760203660031901126101af576004356104db6125bd565b801515806105c6575b6104ed90612865565b8060005260056020526040600020600e81019081549060ff8216600681101561023f5760020361058b57600a015442116105515760ff191660011790557f25128b02d37802123547e1526ab020238abf16bbc37a5bd0a918d5088b016e95600080a2005b60405162461bcd60e51b815260206004820152601260248201527110d85b5c185a59db881a185cc8195b99195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527210d85b5c185a59db881b9bdd081c185d5cd959606a1b6044820152606490fd5b506003548111156104e4565b346101af5760403660031901126101af576105eb61225b565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101af5760203660031901126101af5760043580151580610686575b61064590612865565b600052600760205261068261066761066e6040600020604051928380926129e5565b03826122f8565b604051918291602083526020830190612506565b0390f35b5060035481111561063c565b346101af5760403660031901126101af5760043560243580159081158082036101af576106bd612543565b8315158061084a575b6106cf90612865565b6106d76129c2565b836000526005602052604060002092600e84019384549160ff831694600686101561023f577ff75bd1a9b4e512fc86093732061ee514541c41fcf65f64697ffd3e0f6328c2159660048995610730600160209a146128b1565b60ff19161790558061083d575b15610753575b505050604051908152a260018055005b80610830575b610764575b80610743565b8381600f60077f8bc81353cf6671d259d22783e39ed930583c86f3f4cf7e981298e6a872dfb15d940191600083549355600060088201557f00000000000000000000000000000000000000000000000000000000000000008360008060405188810190630852cd8d60e31b8252846024820152602481526107e4816122dc565b5190826001600160a01b0387165af16107fb612a2b565b5015610820575b50500161081082825461293b565b9055604051908152a2838561075e565b61082991612a5b565b8a83610802565b5060078101541515610759565b506007820154151561073d565b506003548411156106c6565b346101af5760003660031901126101af5760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b346101af576020806003193601126101af576004359081151580610a65575b6108b990612865565b6108c16129c2565b81600052600581526040600020600e81019081549160ff8316600681101561023f57600303610a295760ff8360081c166109ec57837f7e5e6bfcab605d9254dbb5c3b4c8bd65ee4705bb30b1fc434d9651d24d368f3694936000600885827f8bc81353cf6671d259d22783e39ed930583c86f3f4cf7e981298e6a872dfb15d9660078c99019061010582549788600f87015561ffff19161790555501557f00000000000000000000000000000000000000000000000000000000000000008160008060405186810190630852cd8d60e31b8252846024820152602481526109a7816122dc565b5190826001600160a01b0387165af16109be612a2b565b50156109dc575b5050604051908152a260405160058152a260018055005b6109e591612a5b565b87816109c5565b60405162461bcd60e51b8152600481018590526015602482015274151bdad95b9cc8185b1c9958591e48189d5c9b9959605a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052601460248201527315da5b9b995c9cc81b9bdd081cd95b1958dd195960621b6044820152606490fd5b506003548211156108b0565b346101af5760003660031901126101af57602060ff600254166040519015158152f35b346101af576020806003193601126101af5760043590610ab26129c2565b81151580610c50575b610ac490612865565b816000526005815260406000209160ff600e84015416600681101561023f57600403610c1b5760005260068152604060002033600052815260406000208054908115610be25760048101805460ff8116610baa576001600893610b9b97938260009460ff19161790558281550155018181541015600014610ba157610b4a82825461292e565b90555b6040519163a9059cbb60e01b90830152336024830152604482015260448152610b75816122c0565b7f0000000000000000000000000000000000000000000000000000000000000000612948565b60018055005b60009055610b4d565b60405162461bcd60e51b815260048101869052601060248201526f105b1c9958591e481c99599d5b99195960821b6044820152606490fd5b60405162461bcd60e51b8152600481018490526011602482015270139bdd1a1a5b99c81d1bc81c99599d5b99607a1b6044820152606490fd5b60405162461bcd60e51b815260048101839052600d60248201526c139bdd0818d85b98d95b1b1959609a1b6044820152606490fd5b50600354821115610abb565b346101af5760203660031901126101af576000610220604051610c7e816122a3565b82815260606020820152606060408201526060808201528260808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015282610160820152606061018082015260606101a0820152826101c0820152826101e082015282610200820152015260043580151580610fd7575b610d0590612865565b6000526005602052604060002060405190610d1f826122a3565b80548252610d2f600182016123cf565b6020830152610d40600282016123cf565b6040830152610d51600382016123cf565b606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a810154610140830152600b810154610160830152600c810154610db88161237d565b90610dc660405192836122f8565b80825260208201600c840160005260206000206000915b838310610fba5750505050610180830152604051610e028161066781600d86016129e5565b6101a0830152600e81015490600660ff8316101561023f5760ff8281601094166101c086015260081c1615156101e0840152600f81015461020084015201546102208201526040516020815281516020820152610ea2610e8c610e7660208501516102406040860152610260850190612475565b6040850151848203601f19016060860152612475565b6060840151838203601f19016080850152612475565b91608081015160a083015260a081015160c083015260c081015160e083015260e081015161010083015261010081015161012083015261012081015161014083015261014081015161016083015261016081015161018083015261018081015192601f19838203016101a0840152835180825260208201916020808360051b8301019601926000915b838310610f8d57868087610220610f548c6101a0840151601f19868303016101c0870152612506565b91610f696101c08201516101e08601906124b5565b6101e081015115156102008501526102008101518285015201516102408301520390f35b9091929396602080610fab600193601f198682030187528b51612475565b99019301930191939290610f2b565b600160208192610fc9856123cf565b815201920192019190610ddd565b50600354811115610cfc565b346101af5760003660031901126101af57610ffc612543565b6110046129a4565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346101af5760003660031901126101af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101af5760003660031901126101af5761109b612543565b60025460ff8116156110da5760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346101af576110fa366124c2565b906111036129c2565b61110b6129a4565b801515806114f4575b61111d90612865565b806000526020916005835260406000209260ff600e85015416600681101561023f57600161114b91146128b1565b6009840154421015806114e6575b156114a25760068401938454831061146657836000526006825260406000203360005282526040600020805415611435575b6040516370a0823160e01b8082523060048301526024957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116939092909187838a81885afa9384156113f4578893600095611400575b509061122291604051916323b872dd60e01b86840152338c84015230604484015260648301526064825261121d82612271565b612948565b876040518095819382523060048301525afa80156113f4576000906113c5575b61124c925061292e565b95549081871061138157600783019161126688845461293b565b60058501541061134a5780156113355787049485156112f257509060018261129289600896955461293b565b8155016112a086825461293b565b90556112ad87825461293b565b9055016112bb85825461293b565b90556040519384528301527fbf3a2998bf95effb9622e3aeea768ec248f238862fd602100075c04d21caa23c60403393a360018055005b84601b6064926040519262461bcd60e51b845260048401528201527f496e73756666696369656e7420666f72206f6e65207469636b657400000000006044820152fd5b85634e487b7160e01b60005260126004526000fd5b60405162461bcd60e51b8152600481018690526010818801526f0457863656564732068617264206361760841b6044820152606490fd5b60405162461bcd60e51b815260048101859052601b818701527f416d6f756e7420746f6f20736d616c6c206166746572206665657300000000006044820152606490fd5b508482813d83116113ed575b6113db81836122f8565b810103126101af5761124c9151611242565b503d6113d1565b6040513d6000823e3d90fd5b848193959296503d831161142e575b61141981836122f8565b810103126101af5751928792906112226111ea565b503d61140f565b846000526007835261144b3360406000206128f3565b600b82016114598154612732565b905542600382015561118b565b60405162461bcd60e51b8152600481018390526014602482015273416d6f756e742062656c6f77206d696e696d756d60601b6044820152606490fd5b6064906040519062461bcd60e51b82526004820152601860248201527f43616d706169676e206e6f7420696e2070726f677265737300000000000000006044820152fd5b50600a840154421115611159565b50600354811115611114565b346101af5760203660031901126101af57600435151580611905575b61152590612865565b61152d6129c2565b6004356000526005602052604060002060ff80600e83015416906006918281101561023f57600161155e91146128b1565b600a8301544211156118c8576007830154916004840154831061188c57600435600052600760205261066761159d6040600020604051928380926129e5565b6115a78151612a8b565b9060009260005b825181101561162f5760043560009081526020839052604090206001600160a01b0390816115dc8487612851565b51166000526020528660026040600020015416611603575b506115fe90612732565b6115ae565b8195611628916116166115fe9487612851565b51166116228288612851565b52612732565b94906115f4565b8784888761163c81612a8b565b9260005b82811061187157505050819082511561182c57600c8401549251808411611824575b5060001943019043821161180e5760045461167c81612732565b600455604051916020830193408452600435604084015260608301526080820152608081526116aa81612271565b519020916000925b81841061174b57600e8501805460ff1916600317905543601086015560408051818152907fa15551854f54807a0f0db8e3b861523fd994877676824ed8603655ab18ca6dd890611707908301600d89016129e5565b9143602082015280600435930390a2604051600381527f7e5e6bfcab605d9254dbb5c3b4c8bd65ee4705bb30b1fc434d9651d24d368f36602060043592a260018055005b611761611758858361293b565b84600435612abd565b9061176f82600d88016128f3565b83518060001981011161180e576117899060001901612a8b565b9560009360005b86518110156117f4576001600160a01b03858116906117af838a612851565b5116036117c5575b6117c090612732565b611790565b946117c0906117ec906001600160a01b036117e0898b612851565b5116611622828d612851565b9590506117b7565b5095945095909250611807915092612732565b92906116b2565b634e487b7160e01b600052601160045260246000fd5b925084611662565b60405162461bcd60e51b815260206004820152601860248201527f4e6f20656c696769626c65207061727469636970616e747300000000000000006044820152606490fd5b611887906001600160a01b036116168285612851565b611640565b60405162461bcd60e51b815260206004820152601460248201527314dbd99d0818d85c081b9bdd081c995858da195960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527443616d706169676e207374696c6c2061637469766560581b6044820152606490fd5b50600354600435111561151c565b346101af5760403660031901126101af5761192c61225b565b336001600160a01b03821603611948576102a0906004356126bd565b60405163334bd91960e11b8152600490fd5b346101af5760403660031901126101af5761197361225b565b6000608060405161198381612271565b8281528260208201528260408201528260608201520152600435600052600660205260406000209060018060a01b031660005260205260a060406000206040516119cc81612271565b81549182825260018101546020830190815260ff60028301541690604084019115158252608060ff6004600386015495606088019687520154169401931515845260405194855251602085015251151560408401525160608301525115156080820152f35b346101af57611a3f366124c2565b906000526007602052604060002080548210156101af57602091611a62916124d8565b905460405160039290921b1c6001600160a01b03168152f35b346101af5760403660031901126101af576102a0600435611a9a61225b565b90806000526000602052611ab5600160406000200154612619565b61263f565b346101af5760203660031901126101af5760043560005260006020526020600160406000200154604051908152f35b346101af57611af7366124c2565b611aff612543565b81151580611c1b575b611b1190612865565b816000526005602052604060002060ff600e82015416600681101561023f57806001611b469214908115611c10575b50612bb3565b42821115611bcb57600a01805480831115611b8f57827f70e9f58eec5af783627e59f6af135becb4bcbd768c33d59e8f30f329cde15f2e936040935582519182526020820152a2005b60405162461bcd60e51b81526020600482015260146024820152734d75737420657874656e6420656e64206461746560601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f456e642064617465206d75737420626520696e206675747572650000000000006044820152606490fd5b600291501485611b40565b50600354821115611b08565b346101af5760003660031901126101af576020600354604051908152f35b346101af5760203660031901126101af576004356000526005602052604060002080549060018101611c76906123cf565b90611c83600282016123cf565b611c8f600383016123cf565b916004810154926005820154600683015460078401546008850154600986015491600a87015493600b88015495600e89015497600f8a015499601001549a6040519e8f9e8f9182526102008060208401528201611ceb91612475565b908082039060400152611cfd91612475565b8d810360608f0152611d0e91612475565b9a60808d015260a08c015260c08b015260e08a0152610100890152610120880152610140870152610160860152610180850160ff821690611d4e916124b5565b60081c60ff1615156101a08501526101c08401526101e08301520390f35b346101af5760203660031901126101af57600435611d88612543565b80151580611e1f575b611d9a90612865565b806000526005602052604060002060ff600e8201541690600682101561023f57611dd1826001600a9414908115611c105750612bb3565b0180549060001942019142831161180e57828111611deb57005b827f70e9f58eec5af783627e59f6af135becb4bcbd768c33d59e8f30f329cde15f2e936040935582519182526020820152a2005b50600354811115611d91565b346101af576101203660031901126101af5767ffffffffffffffff6004358181116101af57611e5e903690600401612336565b9060249182358281116101af57611e79903690600401612336565b6044358381116101af57611e91903690600401612336565b61010435908482116101af57366023830112156101af57816004013591611eb78361237d565b92611ec560405194856122f8565b808452602096888886019260051b840101923684116101af57898101925b848410612164575050505050611ef7612543565b60c4354281111561212b5760e43591818311156120f457606435801515806120e9575b156120b65760a43591821561207a5792889994919260059993611f7e8a9896611f75611f6c9b611f4b600354612732565b9e8f998a6003558a60005252604060002098895560019c8d9c8d8b01612741565b60028901612741565b60038701612741565b6004850155608435600585015560068401556009830155600a820155600e8101805460ff191685179055600c01936000905b611ffa575b878787817fc04c663886cae794dc52158f70fe6c8ee3b0140d4f48647282f9b693ff688a6560405185815280611fef339588830190612475565b0390a3604051908152f35b81518110156120755761200d8183612851565b518554600160401b81101561206057808661202b92018855876124d8565b61204b579161203f61204492879594612741565b612732565b9091611fb0565b84634e487b7160e01b60005260006004526000fd5b84634e487b7160e01b60005260416004526000fd5b611fb5565b60405162461bcd60e51b8152600481018a90526015818c015274125b9d985b1a59081d1a58dad95d08185b5bdd5b9d605a1b6044820152606490fd5b60405162461bcd60e51b815260048101899052600c818b01526b496e76616c6964206361707360a01b6044820152606490fd5b508060843511611f1a565b60405162461bcd60e51b8152600481018890526010818a01526f496e76616c696420656e64206461746560801b6044820152606490fd5b60405162461bcd60e51b81526004810187905260128189015271496e76616c6964207374617274206461746560701b6044820152606490fd5b83358381116101af578a9161217f83928e3691870101612336565b815201930192611ee3565b346101af5760403660031901126101af576121a361225b565b600435600052600660205260406000209060018060a01b031660005260205260a0604060002080549060018101549060ff60028201541660ff600460038401549301541692604051948552602085015215156040840152606083015215156080820152f35b346101af5760203660031901126101af576004359063ffffffff60e01b82168092036101af57602091637965db0b60e01b811490811561224a575b5015158152f35b6301ffc9a760e01b14905083612243565b602435906001600160a01b03821682036101af57565b60a0810190811067ffffffffffffffff82111761228d57604052565b634e487b7160e01b600052604160045260246000fd5b610240810190811067ffffffffffffffff82111761228d57604052565b6080810190811067ffffffffffffffff82111761228d57604052565b6060810190811067ffffffffffffffff82111761228d57604052565b90601f8019910116810190811067ffffffffffffffff82111761228d57604052565b67ffffffffffffffff811161228d57601f01601f191660200190565b81601f820112156101af5780359061234d8261231a565b9261235b60405194856122f8565b828452602083830101116101af57816000926020809301838601378301015290565b67ffffffffffffffff811161228d5760051b60200190565b90600182811c921680156123c5575b60208310146123af57565b634e487b7160e01b600052602260045260246000fd5b91607f16916123a4565b90604051918260008254926123e384612395565b908184526001948581169081600014612452575060011461240f575b505061240d925003836122f8565b565b9093915060005260209081600020936000915b81831061243a57505061240d935082010138806123ff565b85548884018501529485019487945091830191612422565b91505061240d94506020925060ff191682840152151560051b82010138806123ff565b919082519283825260005b8481106124a1575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612480565b90600682101561023f5752565b60409060031901126101af576004359060243590565b80548210156124f05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110612526575050505090565b83516001600160a01b031685529381019392810192600101612518565b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260409020547fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759060ff161561259f5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527fee57cd81e84075558e8fcc182a1f4393f91fc97f963a136e66b7f949a62f319f60205260409020547f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299060ff161561259f5750565b80600052600060205260406000203360005260205260ff604060002054161561259f5750565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416156000146126b857808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146126b85780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b600019811461180e5760010190565b919091825167ffffffffffffffff811161228d5761275f8254612395565b601f8111612809575b50602080601f83116001146127a557508192939460009261279a575b50508160011b916000199060031b1c1916179055565b015190503880612784565b90601f198316958460005282600020926000905b8882106127f1575050836001959697106127d8575b505050811b019055565b015160001960f88460031b161c191690553880806127ce565b806001859682949686015181550195019301906127b9565b600083815260208120601f840160051c81019260208510612847575b601f0160051c01915b82811061283c575050612768565b81815560010161282e565b9092508290612825565b80518210156124f05760209160051b010190565b1561286c57565b60405162461bcd60e51b815260206004820152601760248201527f43616d706169676e20646f6573206e6f742065786973740000000000000000006044820152606490fd5b156128b857565b60405162461bcd60e51b815260206004820152601360248201527243616d706169676e206e6f742061637469766560681b6044820152606490fd5b8054600160401b81101561228d57612910916001820181556124d8565b819291549060031b9160018060a01b03809116831b921b1916179055565b9190820391821161180e57565b9190820180921161180e57565b906000602091828151910182855af1156113f4576000513d61299b57506001600160a01b0381163b155b6129795750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415612972565b60ff600254166129b057565b60405163d93c066560e01b8152600490fd5b6002600154146129d3576002600155565b604051633ee5aeb560e01b8152600490fd5b90815480825260208092019260005281600020916000905b828210612a0b575050505090565b83546001600160a01b0316855293840193600193840193909101906129fd565b3d15612a56573d90612a3c8261231a565b91612a4a60405193846122f8565b82523d6000602084013e565b606090565b9061240d916040519163a9059cbb60e01b602084015261dead602484015260448301526044825261121d826122c0565b90612a958261237d565b612aa260405191826122f8565b8281528092612ab3601f199161237d565b0190602036910137565b600093845b8351861015612b1357612b07612b0d918460005260016020600681526040908160002090838060a01b03612af68d8c612851565b51166000525260002001549061293b565b95612732565b94612ac2565b91939094508115612b9d570690600091825b8251811015612b815784600052612b56602094600686526001604080600020828060a01b039889612af6888b612851565b93848310612b6d5750612b6890612732565b612b25565b9450919050612b7c9250612851565b511690565b50509150508051156124f057602001516001600160a01b031690565b634e487b7160e01b600052601260045260246000fd5b15612bba57565b60405162461bcd60e51b815260206004820152601a60248201527f43616d706169676e206e6f74206163746976652f7061757365640000000000006044820152606490fdfea2646970667358221220f0425668dee834cf06218eabaaad7d45e721e673019bde7f209ca0e62f963f2e64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x2208 JUMPI POP DUP1 PUSH4 0x2E060C6 EQ PUSH2 0x218A JUMPI DUP1 PUSH4 0x3463DD9 EQ PUSH2 0x1E2B JUMPI DUP1 PUSH4 0xB040563 EQ PUSH2 0x1D6C JUMPI DUP1 PUSH4 0x141961BC EQ PUSH2 0x1C45 JUMPI DUP1 PUSH4 0x16F43DD4 EQ PUSH2 0x1C27 JUMPI DUP1 PUSH4 0x171E986E EQ PUSH2 0x1AE9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1ABA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A7B JUMPI DUP1 PUSH4 0x35ABD49B EQ PUSH2 0x1A31 JUMPI DUP1 PUSH4 0x35F3AD7A EQ PUSH2 0x195A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1913 JUMPI DUP1 PUSH4 0x39A2EB2A EQ PUSH2 0x1500 JUMPI DUP1 PUSH4 0x3B7B6188 EQ PUSH2 0x10EC JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x1082 JUMPI DUP1 PUSH4 0x4EB53F99 EQ PUSH2 0x103D JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0xFE3 JUMPI DUP1 PUSH4 0x5598F8CC EQ PUSH2 0xC5C JUMPI DUP1 PUSH4 0x5B7BAF64 EQ PUSH2 0xA94 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xA71 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0x871F87CF EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x8C6AB238 EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0x9E3696D9 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xB5801D91 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xDE99347A EQ PUSH2 0x1B4 JUMPI PUSH4 0xF5B541A6 EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D0 PUSH2 0x25BD JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x255 JUMPI JUMPDEST PUSH2 0x1E2 SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x23F JUMPI PUSH2 0x211 PUSH1 0x1 PUSH1 0x2 SWAP4 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH32 0xAB1902EE37C92D1A78DDA53814D64B815E7E3EE287D60843A3DBD6954E3206B4 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1D9 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x2A0 PUSH1 0x4 CALLDATALOAD PUSH2 0x280 PUSH2 0x225B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x29B PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2619 JUMP JUMPDEST PUSH2 0x26BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2BE PUSH2 0x225B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEE57CD81E84075558E8FCC182A1F4393F91FC97F963A136E66B7F949A62F319F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x461 JUMPI JUMPDEST ISZERO PUSH2 0x42C JUMPI DUP2 ISZERO ISZERO DUP1 PUSH2 0x420 JUMPI JUMPDEST PUSH2 0x314 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP1 DUP4 MSTORE SWAP5 DUP4 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3E3 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3AB JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 PUSH1 0x0 MSTORE MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xD8E2A0FB3631991DD34AC6AF97A04F3485326D9F70043BB29F54E66F0C5577C6 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E4818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206E6F742070617274696369706174696E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x30B JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2FD JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4DB PUSH2 0x25BD JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x5C6 JUMPI JUMPDEST PUSH2 0x4ED SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x2 SUB PUSH2 0x58B JUMPI PUSH1 0xA ADD SLOAD TIMESTAMP GT PUSH2 0x551 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x25128B02D37802123547E1526AB020238ABF16BBC37A5BD0A918D5088B016E95 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10D85B5C185A59DB881A185CC8195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10D85B5C185A59DB881B9BDD081C185D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x4E4 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x5EB PUSH2 0x225B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x686 JUMPI JUMPDEST PUSH2 0x645 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x682 PUSH2 0x667 PUSH2 0x66E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x29E5 JUMP JUMPDEST SUB DUP3 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2506 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x63C JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP1 ISZERO SWAP1 DUP2 ISZERO DUP1 DUP3 SUB PUSH2 0x1AF JUMPI PUSH2 0x6BD PUSH2 0x2543 JUMP JUMPDEST DUP4 ISZERO ISZERO DUP1 PUSH2 0x84A JUMPI JUMPDEST PUSH2 0x6CF SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x29C2 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0xE DUP5 ADD SWAP4 DUP5 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP5 PUSH1 0x6 DUP7 LT ISZERO PUSH2 0x23F JUMPI PUSH32 0xF75BD1A9B4E512FC86093732061EE514541C41FCF65F64697FFD3E0F6328C215 SWAP7 PUSH1 0x4 DUP10 SWAP6 PUSH2 0x730 PUSH1 0x1 PUSH1 0x20 SWAP11 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE DUP1 PUSH2 0x83D JUMPI JUMPDEST ISZERO PUSH2 0x753 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x830 JUMPI JUMPDEST PUSH2 0x764 JUMPI JUMPDEST DUP1 PUSH2 0x743 JUMP JUMPDEST DUP4 DUP2 PUSH1 0xF PUSH1 0x7 PUSH32 0x8BC81353CF6671D259D22783E39ED930583C86F3F4CF7E981298E6A872DFB15D SWAP5 ADD SWAP2 PUSH1 0x0 DUP4 SLOAD SWAP4 SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD SSTORE PUSH32 0x0 DUP4 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP9 DUP2 ADD SWAP1 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP3 MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x7E4 DUP2 PUSH2 0x22DC JUMP JUMPDEST MLOAD SWAP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH2 0x7FB PUSH2 0x2A2B JUMP JUMPDEST POP ISZERO PUSH2 0x820 JUMPI JUMPDEST POP POP ADD PUSH2 0x810 DUP3 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP4 DUP6 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x829 SWAP2 PUSH2 0x2A5B JUMP JUMPDEST DUP11 DUP4 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0x7 DUP2 ADD SLOAD ISZERO ISZERO PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x7 DUP3 ADD SLOAD ISZERO ISZERO PUSH2 0x73D JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP5 GT ISZERO PUSH2 0x6C6 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xA65 JUMPI JUMPDEST PUSH2 0x8B9 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x8C1 PUSH2 0x29C2 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x3 SUB PUSH2 0xA29 JUMPI PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND PUSH2 0x9EC JUMPI DUP4 PUSH32 0x7E5E6BFCAB605D9254DBB5C3B4C8BD65EE4705BB30B1FC434D9651D24D368F36 SWAP5 SWAP4 PUSH1 0x0 PUSH1 0x8 DUP6 DUP3 PUSH32 0x8BC81353CF6671D259D22783E39ED930583C86F3F4CF7E981298E6A872DFB15D SWAP7 PUSH1 0x7 DUP13 SWAP10 ADD SWAP1 PUSH2 0x105 DUP3 SLOAD SWAP8 DUP9 PUSH1 0xF DUP8 ADD SSTORE PUSH2 0xFFFF NOT AND OR SWAP1 SSTORE SSTORE ADD SSTORE PUSH32 0x0 DUP2 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP7 DUP2 ADD SWAP1 PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP3 MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x9A7 DUP2 PUSH2 0x22DC JUMP JUMPDEST MLOAD SWAP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH2 0x9BE PUSH2 0x2A2B JUMP JUMPDEST POP ISZERO PUSH2 0x9DC JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x9E5 SWAP2 PUSH2 0x2A5B JUMP JUMPDEST DUP8 DUP2 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B9CC8185B1C9958591E48189D5C9B9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15DA5B9B995C9CC81B9BDD081CD95B1958DD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x8B0 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xAB2 PUSH2 0x29C2 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0xC50 JUMPI JUMPDEST PUSH2 0xAC4 SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xFF PUSH1 0xE DUP5 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x4 SUB PUSH2 0xC1B JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xBAA JUMPI PUSH1 0x1 PUSH1 0x8 SWAP4 PUSH2 0xB9B SWAP8 SWAP4 DUP3 PUSH1 0x0 SWAP5 PUSH1 0xFF NOT AND OR SWAP1 SSTORE DUP3 DUP2 SSTORE ADD SSTORE ADD DUP2 DUP2 SLOAD LT ISZERO PUSH1 0x0 EQ PUSH2 0xBA1 JUMPI PUSH2 0xB4A DUP3 DUP3 SLOAD PUSH2 0x292E JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0xB75 DUP2 PUSH2 0x22C0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 SWAP1 SSTORE PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C99599D5B991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD1A1A5B99C81D1BC81C99599D5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BDD0818D85B98D95B1B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0xABB JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x0 PUSH2 0x220 PUSH1 0x40 MLOAD PUSH2 0xC7E DUP2 PUSH2 0x22A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE DUP3 PUSH2 0x1E0 DUP3 ADD MSTORE DUP3 PUSH2 0x200 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xFD7 JUMPI JUMPDEST PUSH2 0xD05 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD1F DUP3 PUSH2 0x22A3 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH2 0xD2F PUSH1 0x1 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD40 PUSH1 0x2 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xD51 PUSH1 0x3 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0xDB8 DUP2 PUSH2 0x237D JUMP JUMPDEST SWAP1 PUSH2 0xDC6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x22F8 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0xC DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xFBA JUMPI POP POP POP POP PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xE02 DUP2 PUSH2 0x667 DUP2 PUSH1 0xD DUP7 ADD PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD SWAP1 PUSH1 0x6 PUSH1 0xFF DUP4 AND LT ISZERO PUSH2 0x23F JUMPI PUSH1 0xFF DUP3 DUP2 PUSH1 0x10 SWAP5 AND PUSH2 0x1C0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP5 ADD MSTORE PUSH1 0xF DUP2 ADD SLOAD PUSH2 0x200 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x220 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEA2 PUSH2 0xE8C PUSH2 0xE76 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x240 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x260 DUP6 ADD SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2475 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD SWAP3 PUSH1 0x1F NOT DUP4 DUP3 SUB ADD PUSH2 0x1A0 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xF8D JUMPI DUP7 DUP1 DUP8 PUSH2 0x220 PUSH2 0xF54 DUP13 PUSH2 0x1A0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP7 DUP4 SUB ADD PUSH2 0x1C0 DUP8 ADD MSTORE PUSH2 0x2506 JUMP JUMPDEST SWAP2 PUSH2 0xF69 PUSH2 0x1C0 DUP3 ADD MLOAD PUSH2 0x1E0 DUP7 ADD SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x240 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP7 PUSH1 0x20 DUP1 PUSH2 0xFAB PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP12 MLOAD PUSH2 0x2475 JUMP JUMPDEST SWAP10 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xFC9 DUP6 PUSH2 0x23CF JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0xCFC JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0xFFC PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1004 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x109B PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x10DA JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x10FA CALLDATASIZE PUSH2 0x24C2 JUMP JUMPDEST SWAP1 PUSH2 0x1103 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x110B PUSH2 0x29A4 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x14F4 JUMPI JUMPDEST PUSH2 0x111D SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0xFF PUSH1 0xE DUP6 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x1 PUSH2 0x114B SWAP2 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x9 DUP5 ADD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x14E6 JUMPI JUMPDEST ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x6 DUP5 ADD SWAP4 DUP5 SLOAD DUP4 LT PUSH2 0x1466 JUMPI DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x1435 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP6 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP8 DUP4 DUP11 DUP2 DUP9 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x13F4 JUMPI DUP9 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x1400 JUMPI JUMPDEST POP SWAP1 PUSH2 0x1222 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP5 ADD MSTORE CALLER DUP13 DUP5 ADD MSTORE ADDRESS PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x64 DUP3 MSTORE PUSH2 0x121D DUP3 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x2948 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x13C5 JUMPI JUMPDEST PUSH2 0x124C SWAP3 POP PUSH2 0x292E JUMP JUMPDEST SWAP6 SLOAD SWAP1 DUP2 DUP8 LT PUSH2 0x1381 JUMPI PUSH1 0x7 DUP4 ADD SWAP2 PUSH2 0x1266 DUP9 DUP5 SLOAD PUSH2 0x293B JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SLOAD LT PUSH2 0x134A JUMPI DUP1 ISZERO PUSH2 0x1335 JUMPI DUP8 DIV SWAP5 DUP6 ISZERO PUSH2 0x12F2 JUMPI POP SWAP1 PUSH1 0x1 DUP3 PUSH2 0x1292 DUP10 PUSH1 0x8 SWAP7 SWAP6 SLOAD PUSH2 0x293B JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x12A0 DUP7 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x12AD DUP8 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x12BB DUP6 DUP3 SLOAD PUSH2 0x293B JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0xBF3A2998BF95EFFB9622E3AEEA768EC248F238862FD602100075C04D21CAA23C PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP5 PUSH1 0x1B PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420666F72206F6E65207469636B65740000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x10 DUP2 DUP9 ADD MSTORE PUSH16 0x4578636565647320686172642063617 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1B DUP2 DUP8 ADD MSTORE PUSH32 0x416D6F756E7420746F6F20736D616C6C20616674657220666565730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP5 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13ED JUMPI JUMPDEST PUSH2 0x13DB DUP2 DUP4 PUSH2 0x22F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AF JUMPI PUSH2 0x124C SWAP2 MLOAD PUSH2 0x1242 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP4 SWAP6 SWAP3 SWAP7 POP RETURNDATASIZE DUP4 GT PUSH2 0x142E JUMPI JUMPDEST PUSH2 0x1419 DUP2 DUP4 PUSH2 0x22F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AF JUMPI MLOAD SWAP3 DUP8 SWAP3 SWAP1 PUSH2 0x1222 PUSH2 0x11EA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x140F JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH2 0x144B CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0xB DUP3 ADD PUSH2 0x1459 DUP2 SLOAD PUSH2 0x2732 JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x416D6F756E742062656C6F77206D696E696D756D PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E206E6F7420696E2070726F67726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xA DUP5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1159 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1114 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0x1905 JUMPI JUMPDEST PUSH2 0x1525 SWAP1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x152D PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP1 PUSH1 0xE DUP4 ADD SLOAD AND SWAP1 PUSH1 0x6 SWAP2 DUP3 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x1 PUSH2 0x155E SWAP2 EQ PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0xA DUP4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x18C8 JUMPI PUSH1 0x7 DUP4 ADD SLOAD SWAP2 PUSH1 0x4 DUP5 ADD SLOAD DUP4 LT PUSH2 0x188C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x667 PUSH2 0x159D PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x15A7 DUP2 MLOAD PUSH2 0x2A8B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x162F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x15DC DUP5 DUP8 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP7 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1603 JUMPI JUMPDEST POP PUSH2 0x15FE SWAP1 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST DUP2 SWAP6 PUSH2 0x1628 SWAP2 PUSH2 0x1616 PUSH2 0x15FE SWAP5 DUP8 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH2 0x1622 DUP3 DUP9 PUSH2 0x2851 JUMP JUMPDEST MSTORE PUSH2 0x2732 JUMP JUMPDEST SWAP5 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST DUP8 DUP5 DUP9 DUP8 PUSH2 0x163C DUP2 PUSH2 0x2A8B JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1871 JUMPI POP POP POP DUP2 SWAP1 DUP3 MLOAD ISZERO PUSH2 0x182C JUMPI PUSH1 0xC DUP5 ADD SLOAD SWAP3 MLOAD DUP1 DUP5 GT PUSH2 0x1824 JUMPI JUMPDEST POP PUSH1 0x0 NOT NUMBER ADD SWAP1 NUMBER DUP3 GT PUSH2 0x180E JUMPI PUSH1 0x4 SLOAD PUSH2 0x167C DUP2 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 BLOCKHASH DUP5 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x16AA DUP2 PUSH2 0x2271 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x174B JUMPI PUSH1 0xE DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE NUMBER PUSH1 0x10 DUP7 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE SWAP1 PUSH32 0xA15551854F54807A0F0DB8E3B861523FD994877676824ED8603655AB18CA6DD8 SWAP1 PUSH2 0x1707 SWAP1 DUP4 ADD PUSH1 0xD DUP10 ADD PUSH2 0x29E5 JUMP JUMPDEST SWAP2 NUMBER PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH1 0x4 CALLDATALOAD SWAP4 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE PUSH32 0x7E5E6BFCAB605D9254DBB5C3B4C8BD65EE4705BB30B1FC434D9651D24D368F36 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x1761 PUSH2 0x1758 DUP6 DUP4 PUSH2 0x293B JUMP JUMPDEST DUP5 PUSH1 0x4 CALLDATALOAD PUSH2 0x2ABD JUMP JUMPDEST SWAP1 PUSH2 0x176F DUP3 PUSH1 0xD DUP9 ADD PUSH2 0x28F3 JUMP JUMPDEST DUP4 MLOAD DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x180E JUMPI PUSH2 0x1789 SWAP1 PUSH1 0x0 NOT ADD PUSH2 0x2A8B JUMP JUMPDEST SWAP6 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP1 PUSH2 0x17AF DUP4 DUP11 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND SUB PUSH2 0x17C5 JUMPI JUMPDEST PUSH2 0x17C0 SWAP1 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x1790 JUMP JUMPDEST SWAP5 PUSH2 0x17C0 SWAP1 PUSH2 0x17EC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17E0 DUP10 DUP12 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH2 0x1622 DUP3 DUP14 PUSH2 0x2851 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0x17B7 JUMP JUMPDEST POP SWAP6 SWAP5 POP SWAP6 SWAP1 SWAP3 POP PUSH2 0x1807 SWAP2 POP SWAP3 PUSH2 0x2732 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 POP DUP5 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656C696769626C65207061727469636970616E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1887 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1616 DUP3 DUP6 PUSH2 0x2851 JUMP JUMPDEST PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DBD99D0818D85C081B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x43616D706169676E207374696C6C20616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0x151C JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x192C PUSH2 0x225B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1948 JUMPI PUSH2 0x2A0 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x1973 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x1983 DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x19CC DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 PUSH1 0x60 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP5 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x1A3F CALLDATASIZE PUSH2 0x24C2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1A62 SWAP2 PUSH2 0x24D8 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x2A0 PUSH1 0x4 CALLDATALOAD PUSH2 0x1A9A PUSH2 0x225B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1AB5 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2619 JUMP JUMPDEST PUSH2 0x263F JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x1AF7 CALLDATASIZE PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x1AFF PUSH2 0x2543 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x1C1B JUMPI JUMPDEST PUSH2 0x1B11 SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x23F JUMPI DUP1 PUSH1 0x1 PUSH2 0x1B46 SWAP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x1C10 JUMPI JUMPDEST POP PUSH2 0x2BB3 JUMP JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0x1BCB JUMPI PUSH1 0xA ADD DUP1 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x1B8F JUMPI DUP3 PUSH32 0x70E9F58EEC5AF783627E59F6AF135BECB4BCBD768C33D59E8F30F329CDE15F2E SWAP4 PUSH1 0x40 SWAP4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D75737420657874656E6420656E642064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642064617465206D75737420626520696E20667574757265000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP6 PUSH2 0x1B40 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x1B08 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD PUSH2 0x1C76 SWAP1 PUSH2 0x23CF JUMP JUMPDEST SWAP1 PUSH2 0x1C83 PUSH1 0x2 DUP3 ADD PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1C8F PUSH1 0x3 DUP4 ADD PUSH2 0x23CF JUMP JUMPDEST SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD PUSH1 0x9 DUP7 ADD SLOAD SWAP2 PUSH1 0xA DUP8 ADD SLOAD SWAP4 PUSH1 0xB DUP9 ADD SLOAD SWAP6 PUSH1 0xE DUP10 ADD SLOAD SWAP8 PUSH1 0xF DUP11 ADD SLOAD SWAP10 PUSH1 0x10 ADD SLOAD SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP2 DUP3 MSTORE PUSH2 0x200 DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD PUSH2 0x1CEB SWAP2 PUSH2 0x2475 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB SWAP1 PUSH1 0x40 ADD MSTORE PUSH2 0x1CFD SWAP2 PUSH2 0x2475 JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x60 DUP16 ADD MSTORE PUSH2 0x1D0E SWAP2 PUSH2 0x2475 JUMP JUMPDEST SWAP11 PUSH1 0x80 DUP14 ADD MSTORE PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x160 DUP7 ADD MSTORE PUSH2 0x180 DUP6 ADD PUSH1 0xFF DUP3 AND SWAP1 PUSH2 0x1D4E SWAP2 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1E0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D88 PUSH2 0x2543 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1E1F JUMPI JUMPDEST PUSH2 0x1D9A SWAP1 PUSH2 0x2865 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD AND SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x23F JUMPI PUSH2 0x1DD1 DUP3 PUSH1 0x1 PUSH1 0xA SWAP5 EQ SWAP1 DUP2 ISZERO PUSH2 0x1C10 JUMPI POP PUSH2 0x2BB3 JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 PUSH1 0x0 NOT TIMESTAMP ADD SWAP2 TIMESTAMP DUP4 GT PUSH2 0x180E JUMPI DUP3 DUP2 GT PUSH2 0x1DEB JUMPI STOP JUMPDEST DUP3 PUSH32 0x70E9F58EEC5AF783627E59F6AF135BECB4BCBD768C33D59E8F30F329CDE15F2E SWAP4 PUSH1 0x40 SWAP4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1D91 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x1E5E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2336 JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x1E79 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x1E91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 DUP5 DUP3 GT PUSH2 0x1AF JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1AF JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x1EB7 DUP4 PUSH2 0x237D JUMP JUMPDEST SWAP3 PUSH2 0x1EC5 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x22F8 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP9 DUP9 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x1AF JUMPI DUP10 DUP2 ADD SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2164 JUMPI POP POP POP POP POP PUSH2 0x1EF7 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD TIMESTAMP DUP2 GT ISZERO PUSH2 0x212B JUMPI PUSH1 0xE4 CALLDATALOAD SWAP2 DUP2 DUP4 GT ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x20E9 JUMPI JUMPDEST ISZERO PUSH2 0x20B6 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 ISZERO PUSH2 0x207A JUMPI SWAP3 DUP9 SWAP10 SWAP5 SWAP2 SWAP3 PUSH1 0x5 SWAP10 SWAP4 PUSH2 0x1F7E DUP11 SWAP9 SWAP7 PUSH2 0x1F75 PUSH2 0x1F6C SWAP12 PUSH2 0x1F4B PUSH1 0x3 SLOAD PUSH2 0x2732 JUMP JUMPDEST SWAP15 DUP16 SWAP10 DUP11 PUSH1 0x3 SSTORE DUP11 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP9 DUP10 SSTORE PUSH1 0x1 SWAP13 DUP14 SWAP13 DUP14 DUP12 ADD PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0xA DUP3 ADD SSTORE PUSH1 0xE DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0xC ADD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x1FFA JUMPI JUMPDEST DUP8 DUP8 DUP8 DUP2 PUSH32 0xC04C663886CAE794DC52158F70FE6C8EE3B0140D4F48647282F9B693FF688A65 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x1FEF CALLER SWAP6 DUP9 DUP4 ADD SWAP1 PUSH2 0x2475 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x200D DUP2 DUP4 PUSH2 0x2851 JUMP JUMPDEST MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2060 JUMPI DUP1 DUP7 PUSH2 0x202B SWAP3 ADD DUP9 SSTORE DUP8 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x204B JUMPI SWAP2 PUSH2 0x203F PUSH2 0x2044 SWAP3 DUP8 SWAP6 SWAP5 PUSH2 0x2741 JUMP JUMPDEST PUSH2 0x2732 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1FB0 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP13 ADD MSTORE PUSH21 0x125B9D985B1A59081D1A58DAD95D08185B5BDD5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0xC DUP2 DUP12 ADD MSTORE PUSH12 0x496E76616C69642063617073 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x84 CALLDATALOAD GT PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x10 DUP2 DUP11 ADD MSTORE PUSH16 0x496E76616C696420656E642064617465 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x12 DUP2 DUP10 ADD MSTORE PUSH18 0x496E76616C69642073746172742064617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x1AF JUMPI DUP11 SWAP2 PUSH2 0x217F DUP4 SWAP3 DUP15 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x2336 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x1EE3 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x21A3 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AF JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x224A JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AF JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x240 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x228D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x228D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1AF JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x234D DUP3 PUSH2 0x231A JUMP JUMPDEST SWAP3 PUSH2 0x235B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x22F8 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1AF JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x228D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x23C5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x23AF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x23E3 DUP5 PUSH2 0x2395 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2452 JUMPI POP PUSH1 0x1 EQ PUSH2 0x240F JUMPI JUMPDEST POP POP PUSH2 0x240D SWAP3 POP SUB DUP4 PUSH2 0x22F8 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x243A JUMPI POP POP PUSH2 0x240D SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x23FF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x240D SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x23FF JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x24A1 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x23F JUMPI MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2526 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2518 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x259F JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEE57CD81E84075558E8FCC182A1F4393F91FC97F963A136E66B7F949A62F319F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x259F JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x259F JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x26B8 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x26B8 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x180E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x228D JUMPI PUSH2 0x275F DUP3 SLOAD PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2809 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x27A5 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x279A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2784 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x27F1 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x27D8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x27CE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP3 PUSH1 0x20 DUP6 LT PUSH2 0x2847 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x283C JUMPI POP POP PUSH2 0x2768 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x282E JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2825 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x286C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E20646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x43616D706169676E206E6F7420616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x228D JUMPI PUSH2 0x2910 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x24D8 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x180E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x180E JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x299B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2979 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2972 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x29B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x29D3 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A0B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29FD JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2A56 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2A3C DUP3 PUSH2 0x231A JUMP JUMPDEST SWAP2 PUSH2 0x2A4A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x22F8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x240D SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xDEAD PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH2 0x121D DUP3 PUSH2 0x22C0 JUMP JUMPDEST SWAP1 PUSH2 0x2A95 DUP3 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x2AA2 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x22F8 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2AB3 PUSH1 0x1F NOT SWAP2 PUSH2 0x237D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 JUMPDEST DUP4 MLOAD DUP7 LT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B07 PUSH2 0x2B0D SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x2AF6 DUP14 DUP13 PUSH2 0x2851 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x293B JUMP JUMPDEST SWAP6 PUSH2 0x2732 JUMP JUMPDEST SWAP5 PUSH2 0x2AC2 JUMP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP5 POP DUP2 ISZERO PUSH2 0x2B9D JUMPI MOD SWAP1 PUSH1 0x0 SWAP2 DUP3 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2B81 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH2 0x2B56 PUSH1 0x20 SWAP5 PUSH1 0x6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 PUSH2 0x2AF6 DUP9 DUP12 PUSH2 0x2851 JUMP JUMPDEST SWAP4 DUP5 DUP4 LT PUSH2 0x2B6D JUMPI POP PUSH2 0x2B68 SWAP1 PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x2B25 JUMP JUMPDEST SWAP5 POP SWAP2 SWAP1 POP PUSH2 0x2B7C SWAP3 POP PUSH2 0x2851 JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST POP POP SWAP2 POP POP DUP1 MLOAD ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x2BBA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E206E6F74206163746976652F706175736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE TIMESTAMP JUMP PUSH9 0xDEE834CF06218EABAA 0xAD PUSH30 0x45E721E673019BDE7F209CA0E62F963F2E64736F6C634300081400330000 ","sourceMap":"547:18957:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;;818:26;547:18957;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;2484:4:0;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;16885:9;547:18957;;16924:15;547:18957;;;16924:15;547:18957;;;;;;;;;;;;16916:72;547:18957;17025:21;16924:40;;16916:72;:::i;:::-;-1:-1:-1;;547:18957:12;;;;17061:26;547:18957;;17061:26;547:18957;;;;;;;;;;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;4723:26:0;547:18957:12;;;;:::i;:::-;;;;;;;;2484:4:0;547:18957:12;;;;3877:22:0;547:18957:12;2484:4:0;:::i;:::-;4723:26;:::i;:::-;547:18957:12;;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;:::i;:::-;3233:10;547:18957;;;;;;;;;;;;;;;;;;;3210:69;;;;547:18957;;;;3072:14;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;;13275:12;547:18957;;;;;;-1:-1:-1;;;;;547:18957:12;;;;;;;;;;;;13275:47;547:18957;;;;;13275:12;547:18957;;;;;;;;;;;13368:49;547:18957;;;13368:49;547:18957;;;;;;;13275:12;547:18957;;;;;;;;;;13368:49;547:18957;;;13458:49;547:18957;;;;;;;;;13538:38;547:18957;13538:38;;547:18957;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;3210:69;547:18957;749:23;547:18957;;;;;;;;3233:10;547:18957;;;;;;;;;;3210:69;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;2484:4:0;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;17349:9;547:18957;;;;;17388:15;;;547:18957;;;;;;;;;;;;;17407:21;17388:40;547:18957;;17489:16;;547:18957;17470:15;:35;547:18957;;-1:-1:-1;;547:18957:12;4688:13;547:18957;;;17601:27;547:18957;;17601:27;547:18957;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;3072:14;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;14210:20;547:18957;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;2466:103:9;;:::i;:::-;547:18957:12;;;14765:9;547:18957;;;;;14804:15;;;;547:18957;;;;;;;;;;;;;;15723:43;14804:40;547:18957;14804:40;;14796:72;547:18957;;14804:40;;14796:72;:::i;:::-;-1:-1:-1;;547:18957:12;;;;14943:41;;;547:18957;14939:761;;;547:18957;;;;;;;;;15723:43;547:18957;;;;14939:761;15151:42;;;14939:761;15147:553;;14939:761;;;;15147:553;15282:22;;15608:20;15282:22;15657:32;15282:22;;547:18957;;;;;;;15358:25;;;547:18957;15424:10;547:18957;;;;;15441:48;;;10052:52;;;;15441:48;;;547:18957;15441:48;;547:18957;;15441:48;;;;;:::i;:::-;15416:74;;547:18957;-1:-1:-1;;;;;547:18957:12;;15416:74;;;;:::i;:::-;;15508:4;15504:91;;15147:553;15608:20;;;:30;547:18957;;;15608:30;:::i;:::-;547:18957;;;;;;;15657:32;15147:553;;;;15504:91;15573:6;;;:::i;:::-;15504:91;;;;15151:42;15167:22;;;;547:18957;15167:26;;15151:42;;14943:41;14958:22;;;;547:18957;14958:26;;14943:41;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;;749:23;547:18957;;;;;;;;;;;;;;;;;;3072:14;;;;:44;;;547:18957;3064:80;;;:::i;:::-;2466:103:9;;:::i;:::-;547:18957:12;;;9484:9;547:18957;;;;;9523:15;;;547:18957;;;;;;;;;;;;;;9523:42;547:18957;;;;;;;;;9691:22;10267:56;9691:22;;547:18957;;9691:22;;10216:36;9691:22;;;;;547:18957;;;;9764:20;;;;;547:18957;;;;;;;;9892:25;547:18957;10035:10;547:18957;;;;;10052:52;;;;;;;;;;;;;547:18957;10052:52;;;;;;:::i;:::-;10027:78;;547:18957;-1:-1:-1;;;;;547:18957:12;;10027:78;;;;:::i;:::-;;10119:3;10115:86;;547:18957;;;;;;;;10216:36;547:18957;;9484:9;547:18957;;10267:56;547:18957;;;;10115:86;10179:10;;;:::i;:::-;10115:86;;;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;1796:7:8;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:9;;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;15987:9;547:18957;;;;;16026:15;547:18957;16026:15;;;547:18957;;;;;;;;;16026:43;547:18957;;;;;;;;;;16146:10;547:18957;;;;;;;;;16216:10;;;547:18957;;;16267:20;;547:18957;;;;;;;;16414:25;547:18957;1328:43:6;547:18957:12;;;;;;;;;;;;;;16383:13;547:18957;16414:25;547:18957;;;16414:35;;16410:161;16414:35;;;16465;547:18957;;;16465:35;:::i;:::-;547:18957;;16410:161;547:18957;;;;;;1328:43:6;;;;16146:10:12;1328:43:6;;;547:18957:12;;;;;;1328:43:6;;;;;:::i;:::-;16580:10:12;1328:43:6;:::i;:::-;547:18957:12;;;;16410:161;547:18957;;;16410:161;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3072:14;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;13804:9;547:18957;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13804:9;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13804:9;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;2484:4:0;;:::i;:::-;1315:72:8;;:::i;:::-;2408:4;547:18957:12;;2398:14:8;547:18957:12;;;2398:14:8;547:18957:12;2427:20:8;547:18957:12;;;735:10:7;547:18957:12;;2427:20:8;547:18957:12;;;;;;;-1:-1:-1;;547:18957:12;;;;;;900:34;-1:-1:-1;;;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;2484:4:0;;:::i;:::-;1796:7:8;547:18957:12;;;;2140:9:8;2136:62;;547:18957:12;;;1796:7:8;547:18957:12;2674:22:8;547:18957:12;;;735:10:7;547:18957:12;;2674:22:8;547:18957:12;2136:62:8;547:18957:12;;-1:-1:-1;;;2172:15:8;;547:18957:12;;2172:15:8;547:18957:12;;;;;;;:::i;:::-;2466:103:9;;;:::i;:::-;1315:72:8;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;;;5535:9;547:18957;;;;;5574:15;547:18957;5574:15;;;547:18957;;;;;;;;5593:21;5566:72;5574:40;;5566:72;:::i;:::-;5675:18;;;547:18957;5656:15;:37;;:76;;;547:18957;;;;;5789:21;;547:18957;;;5779:31;;547:18957;;;;;;;;;;;5905:10;547:18957;;;;;;;;;6004:29;6000:202;;547:18957;;;-1:-1:-1;;;6310:35:12;;;6339:4;547:18957;6310:35;;547:18957;;;6310:10;-1:-1:-1;;;;;547:18957:12;;;6310:10;;547:18957;;6310:35;547:18957;;;;6310:35;;;;;;;;;547:18957;6310:35;;;547:18957;;;1745:53:6;547:18957:12;;;;;;;1745:53:6;;;;5905:10:12;1745:53:6;;;547:18957:12;6339:4;547:18957;;;;;;;;;1745:53:6;;;;;:::i;:::-;;:::i;:::-;547:18957:12;;;6446:35;;;;;;6339:4;547:18957;6446:35;;547:18957;6446:35;;;;;;547:18957;6446:35;;;547:18957;6446:47;;;;:::i;:::-;547:18957;;6511:33;;;;547:18957;;6641:22;;;547:18957;6641:33;547:18957;;;6641:33;:::i;:::-;5535:9;6678:16;;547:18957;-1:-1:-1;547:18957:12;;;;;;;;6846:15;;;547:18957;;;;5593:21;547:18957;6970:36;547:18957;7108:25;547:18957;;;6970:36;:::i;:::-;547:18957;;7016:23;:38;547:18957;;;7016:38;:::i;:::-;547:18957;;7064:34;547:18957;;;7064:34;:::i;:::-;547:18957;;7108:25;:37;547:18957;;;7108:37;:::i;:::-;547:18957;;;;;;;;;;7169:57;547:18957;5905:10;7169:57;;5593:21;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;6446:35;;;;;;;;;;;;;;;:::i;:::-;;;547:18957;;;;6446:47;547:18957;;6446:35;;;;;;;;547:18957;;;;;;;;;6310:35;;;;;;;;;;;;;;;;;;:::i;:::-;;;547:18957;;;;;;;;;1745:53:6;6310:35:12;;;;;;;6000:202;547:18957;;;6049:20;547:18957;;6049:49;5905:10;547:18957;;;6049:49;:::i;:::-;6112:25;;;:27;547:18957;;6112:27;:::i;:::-;547:18957;;5656:15;6153:20;;;547:18957;6000:202;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5656:76;5716:16;;;;547:18957;5656:15;5697:35;;5656:76;;3072:44;-1:-1:-1;3104:12:12;547:18957;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;3072:14;;:44;;;547:18957;3064:80;;;:::i;:::-;2466:103:9;;:::i;:::-;547:18957:12;;;;7526:9;547:18957;;;;;;7565:15;;;;547:18957;;;;;;;;;;;;7557:72;7565:40;;7557:72;:::i;:::-;7665:16;;;547:18957;7647:15;:34;547:18957;;;7725:22;;;547:18957;7751:16;547:18957;7751:16;;547:18957;7725:42;;547:18957;;;;;;7725:22;547:18957;;;;;;;;;;;;;;:::i;:::-;10719:37;547:18957;;10719:37;:::i;:::-;10766:25;547:18957;10807:13;547:18957;10850:3;547:18957;;10822:26;;;;;547:18957;;;;;;;;;;;;;-1:-1:-1;;;;;547:18957:12;;10898:18;;;;:::i;:::-;547:18957;;;;;;;10873:63;547:18957;;;10873:63;547:18957;;10869:179;;10850:3;;;;;:::i;:::-;10807:13;;10869:179;10982:18;;11018:15;10982:18;;10850:3;10982:18;;;:::i;:::-;547:18957;;10956:44;;;;:::i;:::-;547:18957;11018:15;:::i;:::-;10869:179;;;;10822:26;;;;;11143:28;;;:::i;:::-;11186:13;547:18957;11201:17;;;;;;7875:75;;;;547:18957;;;7968:31;547:18957;;8122:15;;;547:18957;;;8158:41;;;8154:113;;11181:92;547:18957;;;8444:12;547:18957;8444:12;;547:18957;;;;;;8535:13;;;:::i;:::-;547:18957;;;;8404:154;547:18957;8404:154;;8434:27;;547:18957;;;;;;;;;;;;;;;;;8404:154;;;;;:::i;:::-;547:18957;8394:165;;8634:13;547:18957;8629:356;8649:15;;;;;;7565;;;547:18957;;-1:-1:-1;;547:18957:12;;;;;8444:12;9046:29;;;547:18957;;;;;;;;9106:59;;547:18957;;;;8783:16;;;547:18957;:::i;:::-;8444:12;;547:18957;;;;;;;9106:59;;;;547:18957;;;;;9180:58;547:18957;;;9180:58;;547:18957;;;;8666:3;8702:67;8757:11;;;;:::i;:::-;547:18957;;;8702:67;:::i;:::-;8783:16;:29;:16;;;;:29;:::i;:::-;547:18957;;;;;;;;;;12689:29;;-1:-1:-1;;547:18957:12;12689:29;:::i;:::-;12728:23;547:18957;12775:13;547:18957;12806:3;547:18957;;12790:14;;;;;-1:-1:-1;;;;;547:18957:12;;;;12829:6;;;;:::i;:::-;547:18957;;12829:16;12825:114;;12806:3;;;;:::i;:::-;12775:13;;12825:114;547:18957;12806:3;;12911:13;;-1:-1:-1;;;;;12887:6:12;547:18957;12887:6;;:::i;:::-;547:18957;;12865:28;;;;:::i;12911:13::-;12825:114;;;;;12790:14;;;;;;;;;8666:3;12790:14;;8666:3;;:::i;:::-;8634:13;;;;547:18957;;;;;;;;;;;;8154:113;8215:41;-1:-1:-1;8154:113:12;;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;11220:3;;;-1:-1:-1;;;;;11251:11:12;547:18957;11251:11;;:::i;11220:3::-;11186:13;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;3072:44;-1:-1:-1;547:18957:12;;;;3090:26;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;:::i;:::-;735:10:7;-1:-1:-1;;;;;547:18957:12;;5397:34:0;5393:102;;5505:37;547:18957:12;;;5505:37:0;:::i;5393:102::-;547:18957:12;;-1:-1:-1;;;5454:30:0;;547:18957:12;;5454:30:0;547:18957:12;;;;;;-1:-1:-1;;547:18957:12;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;13988:12;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1164:57;547:18957;;;;;;;1164:57;;;;;547:18957;1164:57;;;;:::i;:::-;547:18957;;;;;;;;;;-1:-1:-1;;;;;547:18957:12;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;4306:25:0;547:18957:12;;;;:::i;:::-;;;;;;;;2484:4:0;547:18957:12;;;;3877:22:0;547:18957:12;2484:4:0;:::i;:::-;4306:25;:::i;547:18957:12:-;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;3877:22:0;547:18957:12;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;18269:9;547:18957;;;;;;18308:15;;;547:18957;;;;;;;;18308:40;18327:21;18300:123;18308:40;;:84;;;;;547:18957;18300:123;;:::i;:::-;18454:15;18441:28;;547:18957;;;18531:16;;547:18957;;18518:29;;;547:18957;;;;18691:58;547:18957;;;;;;;;;;;;;18691:58;547:18957;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;18308:84;18371:21;18352:40;;;18308:84;;;3072:44;-1:-1:-1;3104:12:12;547:18957;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;1036:45;547:18957;;;;;;;1036:45;547:18957;1036:45;;;;;:::i;:::-;;;;;;;:::i;:::-;;547:18957;1036:45;;;:::i;:::-;;547:18957;1036:45;;547:18957;1036:45;;;;547:18957;1036:45;;;547:18957;1036:45;;;547:18957;1036:45;;;547:18957;1036:45;;;547:18957;1036:45;;;;547:18957;1036:45;;;;547:18957;1036:45;;;;547:18957;1036:45;;;;547:18957;1036:45;;;547:18957;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1036:45;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;2484:4:0;;:::i;:::-;3072:14:12;;;:44;;;547:18957;3064:80;;;:::i;:::-;547:18957;;;19101:9;547:18957;;;;;;19140:15;;;547:18957;;;;;;;;;19132:123;19140:40;547:18957;19286:16;19140:40;;:84;;;;;19132:123;;:::i;:::-;19286:16;547:18957;;;;;19329:15;547:18957;19329:15;;547:18957;;;;19316:32;;;19312:184;;547:18957;19312:184;547:18957;19421:64;547:18957;;;;;;;;;;;;;19421:64;547:18957;3072:44;-1:-1:-1;547:18957:12;;3090:26;;;3072:44;;547:18957;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:4:0;;;;;;;:::i;:::-;547:18957:12;;4293:15;4281:27;;547:18957;;;;;4349:19;;;;547:18957;;;;;4407:11;;;:32;;;547:18957;;;;;;4474:16;;;547:18957;;;;;;;;;;;;;;;;;;4527:14;547:18957;;4527:14;:::i;:::-;547:18957;;;;;;;;;;;;;;;;;4688:13;;;;;;547:18957;:::i;:::-;4718:20;;;547:18957;:::i;:::-;;4762:17;;547:18957;:::i;:::-;;4800:16;;547:18957;;;;4836:16;;547:18957;4872:21;;;547:18957;4918:18;;;547:18957;4958:16;;;547:18957;4994:15;;;547:18957;;-1:-1:-1;;547:18957:12;;;;;5139:15;;;-1:-1:-1;;547:18957:12;;;5081:100;547:18957;;;;5196:45;547:18957;;;;;5224:10;547:18957;5224:10;547:18957;;;;;;:::i;:::-;5196:45;;;547:18957;;;;;;5120:3;547:18957;;5101:17;;;;;5160:9;;;;:::i;:::-;;547:18957;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;:::i;:::-;;;;;5120:3;547:18957;;;;;:::i;:::-;5120:3;:::i;:::-;5086:13;;;;547:18957;;;;;;;;;;;;;;;;;;;;;;;;5101:17;;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;4407:32;547:18957;;;;4422:17;4407:32;;547:18957;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;:::i;:::-;;;;;1087:71;547:18957;;;;;;;;;;;;;;;;;;;;;;1087:71;547:18957;1087:71;;547:18957;1087:71;547:18957;1087:71;;;547:18957;;;;;1087:71;;547:18957;1087:71;;547:18957;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;547:18957:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;547:18957:12;;;;;;;2649:87:0;-1:-1:-1;;;829:40:10;;-1:-1:-1;2649:87:0;;;547:18957:12;;;;-1:-1:-1;;;;;547:18957:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;547:18957:12;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;547:18957:12;;;;-1:-1:-1;547:18957:12;;-1:-1:-1;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;547:18957:12;;-1:-1:-1;547:18957:12;;;-1:-1:-1;547:18957:12;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;547:18957:12;;;;;;;;;;;;;;;3175:103:0;735:10:7;2930:6:0;547:18957:12;;;;;;;;;;749:23;;547:18957;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;547:18957:12;;;;3541:47:0;;;;;;735:10:7;3541:47:0;;;547:18957:12;;;;;3541:47:0;3175:103;735:10:7;2930:6:0;547:18957:12;;;;;;;;;;818:26;;547:18957;;3495:23:0;3491:108;;3175:103;:::o;:::-;547:18957:12;2930:6:0;547:18957:12;2930:6:0;547:18957:12;;;2930:6:0;547:18957:12;735:10:7;2930:6:0;547:18957:12;;;;;2930:6:0;547:18957:12;;;3495:23:0;3491:108;;3175:103;:::o;6155:316::-;;2930:6;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:7;6346:40:0;;;547:18957:12;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6708:317::-;;2930:6;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:7;6900:40:0;;;547:18957:12;6954:11:0;:::o;547:18957:12:-;-1:-1:-1;;547:18957:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:18957:12;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;8370:720:6:-;;-1:-1:-1;8507:421:6;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:6;;8942:15;;-1:-1:-1;;;;;;547:18957:12;;8960:26:6;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;547:18957:12;;-1:-1:-1;;;9033:40:6;;-1:-1:-1;;;;;547:18957:12;;;9033:40:6;;;547:18957:12;;;9033:40:6;8942:68;9009:1;8994:16;;8942:68;;1878:128:8;547:18957:12;1796:7:8;547:18957:12;;1939:61:8;;1878:128::o;1939:61::-;547:18957:12;;-1:-1:-1;;;1974:15:8;;;;;2575:307:9;1899:1;2702:7;547:18957:12;2702:18:9;2698:86;;1899:1;2702:7;547:18957:12;2575:307:9:o;2698:86::-;547:18957:12;;-1:-1:-1;;;2743:30:9;;;;;547:18957:12;;;;;;;;;;;;-1:-1:-1;547:18957:12;;-1:-1:-1;547:18957:12;;-1:-1:-1;547:18957:12;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;547:18957:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;547:18957:12;;;;:::o;:::-;;;:::o;1219:160:6:-;;1328:43;1219:160;547:18957:12;;;;;;1328:43:6;;;;547:18957:12;1328:43:6;;;547:18957:12;;;;;;1328:43:6;;;;;:::i;547:18957:12:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;11405:1052::-;11672:1;11688:13;;11736:3;547:18957;;11703:31;;;;;11755:77;11736:3;547:18957;;11672:1;547:18957;;;11771:12;547:18957;;;;;11672:1;547:18957;;;;;;;11796:23;;;;:::i;:::-;547:18957;;11672:1;547:18957;;11672:1;547:18957;11771:61;547:18957;11755:77;;:::i;:::-;11736:3;;:::i;:::-;11688:13;;;11703:31;;;;;;547:18957;;;;;12038:29;11672:1;12082:13;;12130:3;547:18957;;12097:31;;;;;547:18957;11672:1;547:18957;12149:82;547:18957;;11771:12;547:18957;;;;;11672:1;547:18957;;;;;;12195:23;;;;;;:::i;12149:82::-;12249:32;;;;12245:101;;12130:3;;;;:::i;:::-;12082:13;;12245:101;12308:23;;;;;;;;;:::i;:::-;547:18957;;12301:30;:::o;12097:31::-;;;;;;547:18957;;;;;;;;-1:-1:-1;;;;;547:18957:12;;11405:1052::o;547:18957::-;;;;11672:1;547:18957;;;;;11672:1;547:18957;;;;;:::o;:::-;;;-1:-1:-1;;;547:18957:12;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"2263400","executionCost":"infinite","totalCost":"infinite"},"external":{"ADMIN_ROLE()":"617","DEFAULT_ADMIN_ROLE()":"727","OPERATOR_ROLE()":"812","burnTokens(uint256)":"infinite","campaignParticipants(uint256,uint256)":"6940","campaigns(uint256)":"infinite","claimRefund(uint256)":"infinite","confirmSocialTasks(uint256,address)":"37872","createCampaign(string,string,string,uint256,uint256,uint256,uint256,uint256,string[])":"infinite","emergencyPause()":"30107","emergencyTerminateCampaign(uint256,bool)":"infinite","emergencyUnpause()":"27936","endCampaignNow(uint256)":"32893","getCampaign(uint256)":"infinite","getCampaignParticipants(uint256)":"infinite","getParticipant(uint256,address)":"infinite","getRoleAdmin(bytes32)":"2484","getTotalCampaigns()":"2368","grantRole(bytes32,address)":"33393","hasRole(bytes32,address)":"3018","participants(uint256,address)":"11032","pauseCampaign(uint256)":"30708","paused()":"2688","renounceRole(bytes32,address)":"29041","resumeCampaign(uint256)":"32720","revokeRole(bytes32,address)":"33824","selectWinners(uint256)":"infinite","squdyToken()":"infinite","stakeTokens(uint256,uint256)":"infinite","supportsInterface(bytes4)":"271","updateCampaignEndDate(uint256,uint256)":"32983"},"internal":{"getEligibleParticipants(uint256)":"infinite","removeFromArray(address[] memory,address)":"infinite","selectWeightedWinner(uint256,address[] memory,uint256)":"infinite"}},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","OPERATOR_ROLE()":"f5b541a6","burnTokens(uint256)":"6d1b229d","campaignParticipants(uint256,uint256)":"35abd49b","campaigns(uint256)":"141961bc","claimRefund(uint256)":"5b7baf64","confirmSocialTasks(uint256,address)":"b5801d91","createCampaign(string,string,string,uint256,uint256,uint256,uint256,uint256,string[])":"03463dd9","emergencyPause()":"51858e27","emergencyTerminateCampaign(uint256,bool)":"871f87cf","emergencyUnpause()":"4a4e3bd5","endCampaignNow(uint256)":"0b040563","getCampaign(uint256)":"5598f8cc","getCampaignParticipants(uint256)":"8c6ab238","getParticipant(uint256,address)":"35f3ad7a","getRoleAdmin(bytes32)":"248a9ca3","getTotalCampaigns()":"16f43dd4","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","participants(uint256,address)":"02e060c6","pauseCampaign(uint256)":"de99347a","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","resumeCampaign(uint256)":"9e3696d9","revokeRole(bytes32,address)":"d547741f","selectWinners(uint256)":"39a2eb2a","squdyToken()":"4eb53f99","stakeTokens(uint256,uint256)":"3b7b6188","supportsInterface(bytes4)":"01ffc9a7","updateCampaignEndDate(uint256,uint256)":"171e986e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_squdyToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldEndDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEndDate\",\"type\":\"uint256\"}],\"name\":\"CampaignEndDateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"CampaignPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"CampaignResumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum AutomatedSqudyCampaignManager.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"CampaignStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"name\":\"CampaignTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"SocialTasksCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tickets\",\"type\":\"uint256\"}],\"name\":\"UserStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"WinnersSelected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaignParticipants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundableAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"internalType\":\"enum AutomatedSqudyCampaignManager.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"tokensAreBurned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalBurned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winnerSelectionBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"confirmSocialTasks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"prizes\",\"type\":\"string[]\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundUsers\",\"type\":\"bool\"}],\"name\":\"emergencyTerminateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"endCampaignNow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundableAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"prizes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"internalType\":\"enum AutomatedSqudyCampaignManager.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"tokensAreBurned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalBurned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winnerSelectionBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct AutomatedSqudyCampaignManager.Campaign\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaignParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getParticipant\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasCompletedSocial\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"joinedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnRefund\",\"type\":\"bool\"}],\"internalType\":\"struct AutomatedSqudyCampaignManager.Participant\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCampaigns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasCompletedSocial\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"joinedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnRefund\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"pauseCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"resumeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"selectWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"squdyToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newEndDate\",\"type\":\"uint256\"}],\"name\":\"updateCampaignEndDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Squdy Team\",\"details\":\"Simplified campaign manager with automated winner selection\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"burnTokens(uint256)\":{\"details\":\"Burn all staked tokens after winner selection\"},\"claimRefund(uint256)\":{\"details\":\"Users claim their refund after a cancelled campaign\"},\"confirmSocialTasks(uint256,address)\":{\"details\":\"Confirm social tasks completion for a user\"},\"createCampaign(string,string,string,uint256,uint256,uint256,uint256,uint256,string[])\":{\"details\":\"Creates a new campaign\"},\"emergencyPause()\":{\"details\":\"Emergency pause all contract operations (admin only)\"},\"emergencyTerminateCampaign(uint256,bool)\":{\"details\":\"Emergency terminate campaign (admin only) Allows early termination with optional refunds\"},\"emergencyUnpause()\":{\"details\":\"Emergency unpause all contract operations (admin only)\"},\"endCampaignNow(uint256)\":{\"details\":\"Admin convenience: force a campaign to be considered ended immediately Sets endDate to block.timestamp - 1 without changing other fields\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pauseCampaign(uint256)\":{\"details\":\"Pause a specific campaign (admin/operator only)\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"resumeCampaign(uint256)\":{\"details\":\"Resume a paused campaign (admin/operator only)\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"selectWinners(uint256)\":{\"details\":\"Automated winner selection when campaign ends Can be called by anyone after campaign ends\"},\"stakeTokens(uint256,uint256)\":{\"details\":\"Stake tokens in a campaign\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"updateCampaignEndDate(uint256,uint256)\":{\"details\":\"Update campaign end date (admin only, before campaign ends)\"}},\"title\":\"AutomatedSqudyCampaignManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AutomatedSqudyCampaignManager.sol\":\"AutomatedSqudyCampaignManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {IERC165, ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\\n\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/AutomatedSqudyCampaignManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n// import \\\"./ISqudyToken.sol\\\"; // Using IERC20 instead\\n\\n/**\\n * @title AutomatedSqudyCampaignManager\\n * @dev Simplified campaign manager with automated winner selection\\n * @author Squdy Team\\n */\\ncontract AutomatedSqudyCampaignManager is AccessControl, ReentrancyGuard, Pausable {\\n    using SafeERC20 for IERC20;\\n\\n    // ============ CONSTANTS ============\\n    bytes32 public constant ADMIN_ROLE = keccak256(\\\"ADMIN_ROLE\\\");\\n    bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n    // ============ STATE VARIABLES ============\\n    IERC20 public immutable squdyToken;\\n    uint256 private _campaignIds;\\n    uint256 private _randomSeed;\\n    \\n    // Campaign storage\\n    mapping(uint256 => Campaign) public campaigns;\\n    mapping(uint256 => mapping(address => Participant)) public participants;\\n    mapping(uint256 => address[]) public campaignParticipants;\\n    \\n    // ============ STRUCTS ============\\n    struct Campaign {\\n        uint256 id;\\n        string name;\\n        string description;\\n        string imageUrl;\\n        uint256 softCap;\\n        uint256 hardCap;\\n        uint256 ticketAmount;\\n        uint256 currentAmount;\\n        uint256 refundableAmount;\\n        uint256 startDate;\\n        uint256 endDate;\\n        uint256 participantCount;\\n        string[] prizes;\\n        address[] winners;\\n        CampaignStatus status;\\n        bool tokensAreBurned;\\n        uint256 totalBurned;\\n        uint256 winnerSelectionBlock; // Block number when winners were selected\\n    }\\n\\n    struct Participant {\\n        uint256 stakedAmount;\\n        uint256 ticketCount;\\n        bool hasCompletedSocial;\\n        uint256 joinedAt;\\n        bool hasWithdrawnRefund;\\n    }\\n\\n    enum CampaignStatus { Pending, Active, Paused, Finished, Cancelled, Burned }\\n\\n    // ============ EVENTS ============\\n    event CampaignCreated(uint256 indexed campaignId, address indexed creator, string name);\\n    event UserStaked(uint256 indexed campaignId, address indexed user, uint256 amount, uint256 tickets);\\n    event SocialTasksCompleted(uint256 indexed campaignId, address indexed user);\\n    event WinnersSelected(uint256 indexed campaignId, address[] winners, uint256 blockNumber);\\n    event TokensBurned(uint256 indexed campaignId, uint256 amount);\\n    event CampaignStatusChanged(uint256 indexed campaignId, CampaignStatus status);\\n    event CampaignTerminated(uint256 indexed campaignId, bool refunded);\\n    event CampaignPaused(uint256 indexed campaignId);\\n    event CampaignResumed(uint256 indexed campaignId);\\n    event CampaignEndDateUpdated(uint256 indexed campaignId, uint256 oldEndDate, uint256 newEndDate);\\n\\n    // ============ MODIFIERS ============\\n    modifier campaignExists(uint256 campaignId) {\\n        require(campaignId > 0 && campaignId <= _campaignIds, \\\"Campaign does not exist\\\");\\n        _;\\n    }\\n\\n    modifier onlyOperator() {\\n        require(hasRole(OPERATOR_ROLE, msg.sender) || hasRole(ADMIN_ROLE, msg.sender), \\\"Not authorized\\\");\\n        _;\\n    }\\n\\n    // ============ CONSTRUCTOR ============\\n    constructor(address _squdyToken) {\\n        require(_squdyToken != address(0), \\\"Invalid token address\\\");\\n        squdyToken = IERC20(_squdyToken);\\n        \\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        _grantRole(ADMIN_ROLE, msg.sender);\\n        _grantRole(OPERATOR_ROLE, msg.sender);\\n        \\n        // Initialize random seed\\n        _randomSeed = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender)));\\n    }\\n\\n    // ============ MAIN FUNCTIONS ============\\n\\n    /**\\n     * @dev Creates a new campaign\\n     */\\n    function createCampaign(\\n        string memory name,\\n        string memory description,\\n        string memory imageUrl,\\n        uint256 softCap,\\n        uint256 hardCap,\\n        uint256 ticketAmount,\\n        uint256 startDate,\\n        uint256 endDate,\\n        string[] memory prizes\\n    ) external onlyRole(ADMIN_ROLE) returns (uint256) {\\n        require(startDate > block.timestamp, \\\"Invalid start date\\\");\\n        require(endDate > startDate, \\\"Invalid end date\\\");\\n        require(softCap > 0 && hardCap > softCap, \\\"Invalid caps\\\");\\n        require(ticketAmount > 0, \\\"Invalid ticket amount\\\");\\n\\n        _campaignIds++;\\n        uint256 campaignId = _campaignIds;\\n\\n        Campaign storage campaign = campaigns[campaignId];\\n        campaign.id = campaignId;\\n        campaign.name = name;\\n        campaign.description = description;\\n        campaign.imageUrl = imageUrl;\\n        campaign.softCap = softCap;\\n        campaign.hardCap = hardCap;\\n        campaign.ticketAmount = ticketAmount;\\n        campaign.startDate = startDate;\\n        campaign.endDate = endDate;\\n        campaign.status = CampaignStatus.Active;\\n        \\n        // Copy prizes array\\n        for (uint256 i = 0; i < prizes.length; i++) {\\n            campaign.prizes.push(prizes[i]);\\n        }\\n\\n        emit CampaignCreated(campaignId, msg.sender, name);\\n        return campaignId;\\n    }\\n\\n    /**\\n     * @dev Stake tokens in a campaign\\n     */\\n    function stakeTokens(uint256 campaignId, uint256 amount) \\n        external \\n        nonReentrant \\n        whenNotPaused \\n        campaignExists(campaignId) \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Active, \\\"Campaign not active\\\");\\n        require(block.timestamp >= campaign.startDate && block.timestamp <= campaign.endDate, \\\"Campaign not in progress\\\");\\n        require(amount >= campaign.ticketAmount, \\\"Amount below minimum\\\");\\n\\n        Participant storage participant = participants[campaignId][msg.sender];\\n        \\n        // If first time participating, add to participants list\\n        if (participant.stakedAmount == 0) {\\n            campaignParticipants[campaignId].push(msg.sender);\\n            campaign.participantCount++;\\n            participant.joinedAt = block.timestamp;\\n        }\\n\\n        // Transfer tokens and compute actual received (fee-on-transfer safe)\\n        uint256 balBefore = squdyToken.balanceOf(address(this));\\n        squdyToken.safeTransferFrom(msg.sender, address(this), amount);\\n        uint256 received = squdyToken.balanceOf(address(this)) - balBefore;\\n        require(received >= campaign.ticketAmount, \\\"Amount too small after fees\\\");\\n\\n        // Enforce hardCap on actual received\\n        require(campaign.currentAmount + received <= campaign.hardCap, \\\"Exceeds hard cap\\\");\\n\\n        // Calculate tickets on actual received\\n        uint256 ticketCount = received / campaign.ticketAmount;\\n        require(ticketCount > 0, \\\"Insufficient for one ticket\\\");\\n\\n        // CEI: update state before external effects already done\\n        participant.stakedAmount += received;\\n        participant.ticketCount += ticketCount;\\n        campaign.currentAmount += received;\\n        campaign.refundableAmount += received;\\n        \\n        emit UserStaked(campaignId, msg.sender, received, ticketCount);\\n    }\\n\\n    /**\\n     * @dev Automated winner selection when campaign ends\\n     * Can be called by anyone after campaign ends\\n     */\\n    function selectWinners(uint256 campaignId) \\n        external \\n        campaignExists(campaignId) \\n        nonReentrant \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Active, \\\"Campaign not active\\\");\\n        require(block.timestamp > campaign.endDate, \\\"Campaign still active\\\");\\n        require(campaign.currentAmount >= campaign.softCap, \\\"Soft cap not reached\\\");\\n\\n        // Get eligible participants (those who completed social tasks)\\n        address[] memory eligibleParticipants = getEligibleParticipants(campaignId);\\n        require(eligibleParticipants.length > 0, \\\"No eligible participants\\\");\\n\\n        // Select winners based on weighted random selection\\n        uint256 winnerCount = campaign.prizes.length;\\n        if (winnerCount > eligibleParticipants.length) {\\n            winnerCount = eligibleParticipants.length;\\n        }\\n\\n        // Pseudo-randomness (non-VRF): mix prior blockhash to reduce manipulation surface\\n        uint256 entropy = uint256(keccak256(abi.encodePacked(\\n            blockhash(block.number - 1),\\n            campaignId,\\n            campaign.currentAmount,\\n            _randomSeed++\\n        )));\\n\\n        // Select winners using weighted random selection\\n        for (uint256 i = 0; i < winnerCount; i++) {\\n            address winner = selectWeightedWinner(campaignId, eligibleParticipants, entropy + i);\\n            campaign.winners.push(winner);\\n            \\n            // Remove winner from eligible list for next selection\\n            eligibleParticipants = removeFromArray(eligibleParticipants, winner);\\n        }\\n\\n        campaign.status = CampaignStatus.Finished;\\n        campaign.winnerSelectionBlock = block.number;\\n\\n        emit WinnersSelected(campaignId, campaign.winners, block.number);\\n        emit CampaignStatusChanged(campaignId, CampaignStatus.Finished);\\n    }\\n\\n    /**\\n     * @dev Burn all staked tokens after winner selection\\n     */\\n    function burnTokens(uint256 campaignId) \\n        external \\n        campaignExists(campaignId) \\n        nonReentrant \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Finished, \\\"Winners not selected\\\");\\n        require(!campaign.tokensAreBurned, \\\"Tokens already burned\\\");\\n\\n        uint256 burnAmount = campaign.currentAmount;\\n        campaign.tokensAreBurned = true;\\n        campaign.totalBurned = burnAmount;\\n        campaign.status = CampaignStatus.Burned;\\n        campaign.currentAmount = 0;\\n        campaign.refundableAmount = 0;\\n\\n        // Attempt real burn; fallback to transfer-to-dead if token lacks burn()\\n        (bool ok, ) = address(squdyToken).call(abi.encodeWithSignature(\\\"burn(uint256)\\\", burnAmount));\\n        if (!ok) {\\n            squdyToken.safeTransfer(address(0xdEaD), burnAmount);\\n        }\\n\\n        emit TokensBurned(campaignId, burnAmount);\\n        emit CampaignStatusChanged(campaignId, CampaignStatus.Burned);\\n    }\\n\\n    // ============ INTERNAL FUNCTIONS ============\\n\\n    /**\\n     * @dev Get eligible participants (those who completed social tasks)\\n     */\\n    function getEligibleParticipants(uint256 campaignId) \\n        internal \\n        view \\n        returns (address[] memory) \\n    {\\n        address[] memory allParticipants = campaignParticipants[campaignId];\\n        address[] memory eligible = new address[](allParticipants.length);\\n        uint256 eligibleCount = 0;\\n\\n        for (uint256 i = 0; i < allParticipants.length; i++) {\\n            if (participants[campaignId][allParticipants[i]].hasCompletedSocial) {\\n                eligible[eligibleCount] = allParticipants[i];\\n                eligibleCount++;\\n            }\\n        }\\n\\n        // Resize array to actual eligible count\\n        address[] memory result = new address[](eligibleCount);\\n        for (uint256 i = 0; i < eligibleCount; i++) {\\n            result[i] = eligible[i];\\n        }\\n\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Select winner using weighted random selection based on ticket count\\n     */\\n    function selectWeightedWinner(\\n        uint256 campaignId, \\n        address[] memory eligibleParticipants, \\n        uint256 randomness\\n    ) internal view returns (address) {\\n        // Calculate total tickets for eligible participants\\n        uint256 totalTickets = 0;\\n        for (uint256 i = 0; i < eligibleParticipants.length; i++) {\\n            totalTickets += participants[campaignId][eligibleParticipants[i]].ticketCount;\\n        }\\n\\n        // Generate random number within total tickets\\n        uint256 randomTicket = randomness % totalTickets;\\n        \\n        // Find winner based on cumulative ticket distribution\\n        uint256 cumulativeTickets = 0;\\n        for (uint256 i = 0; i < eligibleParticipants.length; i++) {\\n            cumulativeTickets += participants[campaignId][eligibleParticipants[i]].ticketCount;\\n            if (randomTicket < cumulativeTickets) {\\n                return eligibleParticipants[i];\\n            }\\n        }\\n        \\n        // Fallback (should never reach here)\\n        return eligibleParticipants[0];\\n    }\\n\\n    /**\\n     * @dev Remove address from array\\n     */\\n    function removeFromArray(address[] memory arr, address target) \\n        internal \\n        pure \\n        returns (address[] memory) \\n    {\\n        address[] memory result = new address[](arr.length - 1);\\n        uint256 resultIndex = 0;\\n        \\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] != target) {\\n                result[resultIndex] = arr[i];\\n                resultIndex++;\\n            }\\n        }\\n        \\n        return result;\\n    }\\n\\n    // ============ ADMIN FUNCTIONS ============\\n\\n    /**\\n     * @dev Confirm social tasks completion for a user\\n     */\\n    function confirmSocialTasks(uint256 campaignId, address user) \\n        external \\n        onlyOperator \\n        campaignExists(campaignId) \\n    {\\n        require(participants[campaignId][user].stakedAmount > 0, \\\"User not participating\\\");\\n        require(!participants[campaignId][user].hasCompletedSocial, \\\"Already completed\\\");\\n        \\n        participants[campaignId][user].hasCompletedSocial = true;\\n        \\n        emit SocialTasksCompleted(campaignId, user);\\n    }\\n\\n    // ============ VIEW FUNCTIONS ============\\n\\n    function getCampaign(uint256 campaignId) \\n        external \\n        view \\n        campaignExists(campaignId) \\n        returns (Campaign memory) \\n    {\\n        return campaigns[campaignId];\\n    }\\n\\n    function getParticipant(uint256 campaignId, address user) \\n        external \\n        view \\n        returns (Participant memory) \\n    {\\n        return participants[campaignId][user];\\n    }\\n\\n    function getCampaignParticipants(uint256 campaignId) \\n        external \\n        view \\n        campaignExists(campaignId) \\n        returns (address[] memory) \\n    {\\n        return campaignParticipants[campaignId];\\n    }\\n\\n    function getTotalCampaigns() external view returns (uint256) {\\n        return _campaignIds;\\n    }\\n\\n    // ============ ADMIN EMERGENCY FUNCTIONS ============\\n\\n    /**\\n     * @dev Emergency terminate campaign (admin only)\\n     * Allows early termination with optional refunds\\n     */\\n    function emergencyTerminateCampaign(uint256 campaignId, bool refundUsers) \\n        external \\n        onlyRole(ADMIN_ROLE) \\n        campaignExists(campaignId) \\n        nonReentrant \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Active, \\\"Campaign not active\\\");\\n        \\n        campaign.status = CampaignStatus.Cancelled;\\n        if (refundUsers && campaign.currentAmount > 0) {\\n            // Move to claim-based refunds to avoid gas DoS\\n            // Funds remain held by contract; users call claimRefund() individually\\n        } else if (!refundUsers && campaign.currentAmount > 0) {\\n            // Optional: burn immediately if no refunds\\n            uint256 amount = campaign.currentAmount;\\n            campaign.currentAmount = 0;\\n            campaign.refundableAmount = 0;\\n            (bool ok2, ) = address(squdyToken).call(abi.encodeWithSignature(\\\"burn(uint256)\\\", amount));\\n            if (!ok2) {\\n                squdyToken.safeTransfer(address(0xdEaD), amount);\\n            }\\n            campaign.totalBurned += amount;\\n            emit TokensBurned(campaignId, amount);\\n        }\\n        \\n        emit CampaignTerminated(campaignId, refundUsers);\\n    }\\n\\n    /**\\n     * @dev Users claim their refund after a cancelled campaign\\n     */\\n    function claimRefund(uint256 campaignId) external nonReentrant campaignExists(campaignId) {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Cancelled, \\\"Not cancelled\\\");\\n        Participant storage p = participants[campaignId][msg.sender];\\n        uint256 amount = p.stakedAmount;\\n        require(amount > 0, \\\"Nothing to refund\\\");\\n        require(!p.hasWithdrawnRefund, \\\"Already refunded\\\");\\n        p.hasWithdrawnRefund = true;\\n        p.stakedAmount = 0;\\n        p.ticketCount = 0;\\n        if (campaign.refundableAmount >= amount) {\\n            campaign.refundableAmount -= amount;\\n        } else {\\n            campaign.refundableAmount = 0;\\n        }\\n        squdyToken.safeTransfer(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Pause a specific campaign (admin/operator only)\\n     */\\n    function pauseCampaign(uint256 campaignId) \\n        external \\n        onlyRole(OPERATOR_ROLE) \\n        campaignExists(campaignId) \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Active, \\\"Campaign not active\\\");\\n        \\n        campaign.status = CampaignStatus.Paused;\\n        emit CampaignPaused(campaignId);\\n    }\\n\\n    /**\\n     * @dev Resume a paused campaign (admin/operator only)\\n     */\\n    function resumeCampaign(uint256 campaignId) \\n        external \\n        onlyRole(OPERATOR_ROLE) \\n        campaignExists(campaignId) \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Paused, \\\"Campaign not paused\\\");\\n        require(block.timestamp <= campaign.endDate, \\\"Campaign has ended\\\");\\n        \\n        campaign.status = CampaignStatus.Active;\\n        emit CampaignResumed(campaignId);\\n    }\\n\\n    /**\\n     * @dev Emergency pause all contract operations (admin only)\\n     */\\n    function emergencyPause() external onlyRole(ADMIN_ROLE) {\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Emergency unpause all contract operations (admin only)\\n     */\\n    function emergencyUnpause() external onlyRole(ADMIN_ROLE) {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Update campaign end date (admin only, before campaign ends)\\n     */\\n    function updateCampaignEndDate(uint256 campaignId, uint256 newEndDate) \\n        external \\n        onlyRole(ADMIN_ROLE) \\n        campaignExists(campaignId) \\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Active || campaign.status == CampaignStatus.Paused, \\\"Campaign not active/paused\\\");\\n        require(newEndDate > block.timestamp, \\\"End date must be in future\\\");\\n        require(newEndDate > campaign.endDate, \\\"Must extend end date\\\");\\n        \\n        uint256 oldEndDate = campaign.endDate;\\n        campaign.endDate = newEndDate;\\n        \\n        emit CampaignEndDateUpdated(campaignId, oldEndDate, newEndDate);\\n    }\\n\\n    /**\\n     * @dev Admin convenience: force a campaign to be considered ended immediately\\n     * Sets endDate to block.timestamp - 1 without changing other fields\\n     */\\n    function endCampaignNow(uint256 campaignId)\\n        external\\n        onlyRole(ADMIN_ROLE)\\n        campaignExists(campaignId)\\n    {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.status == CampaignStatus.Active || campaign.status == CampaignStatus.Paused, \\\"Campaign not active/paused\\\");\\n        uint256 oldEndDate = campaign.endDate;\\n        if (oldEndDate > block.timestamp - 1) {\\n            campaign.endDate = block.timestamp - 1;\\n            emit CampaignEndDateUpdated(campaignId, oldEndDate, campaign.endDate);\\n        }\\n    }\\n}\",\"keccak256\":\"0xed81adf16d192b0d8a6d34f44b3eb9700b34326cbc875870f46aaa5dc37f23cf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)22_storage)"},{"astId":1160,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":1050,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"_paused","offset":0,"slot":"2","type":"t_bool"},{"astId":1287,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"_campaignIds","offset":0,"slot":"3","type":"t_uint256"},{"astId":1289,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"_randomSeed","offset":0,"slot":"4","type":"t_uint256"},{"astId":1294,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"campaigns","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(Campaign)1346_storage)"},{"astId":1301,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"participants","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)1357_storage))"},{"astId":1306,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"campaignParticipants","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(CampaignStatus)1364":{"encoding":"inplace","label":"enum AutomatedSqudyCampaignManager.CampaignStatus","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Participant)1357_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AutomatedSqudyCampaignManager.Participant)","numberOfBytes":"32","value":"t_struct(Participant)1357_storage"},"t_mapping(t_bytes32,t_struct(RoleData)22_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)22_storage"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)1357_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct AutomatedSqudyCampaignManager.Participant))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(Participant)1357_storage)"},"t_mapping(t_uint256,t_struct(Campaign)1346_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct AutomatedSqudyCampaignManager.Campaign)","numberOfBytes":"32","value":"t_struct(Campaign)1346_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Campaign)1346_storage":{"encoding":"inplace","label":"struct AutomatedSqudyCampaignManager.Campaign","members":[{"astId":1308,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1310,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1312,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"description","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1314,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"imageUrl","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1316,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"softCap","offset":0,"slot":"4","type":"t_uint256"},{"astId":1318,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"hardCap","offset":0,"slot":"5","type":"t_uint256"},{"astId":1320,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"ticketAmount","offset":0,"slot":"6","type":"t_uint256"},{"astId":1322,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"currentAmount","offset":0,"slot":"7","type":"t_uint256"},{"astId":1324,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"refundableAmount","offset":0,"slot":"8","type":"t_uint256"},{"astId":1326,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"startDate","offset":0,"slot":"9","type":"t_uint256"},{"astId":1328,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"endDate","offset":0,"slot":"10","type":"t_uint256"},{"astId":1330,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"participantCount","offset":0,"slot":"11","type":"t_uint256"},{"astId":1333,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"prizes","offset":0,"slot":"12","type":"t_array(t_string_storage)dyn_storage"},{"astId":1336,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"winners","offset":0,"slot":"13","type":"t_array(t_address)dyn_storage"},{"astId":1339,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"status","offset":0,"slot":"14","type":"t_enum(CampaignStatus)1364"},{"astId":1341,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"tokensAreBurned","offset":1,"slot":"14","type":"t_bool"},{"astId":1343,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"totalBurned","offset":0,"slot":"15","type":"t_uint256"},{"astId":1345,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"winnerSelectionBlock","offset":0,"slot":"16","type":"t_uint256"}],"numberOfBytes":"544"},"t_struct(Participant)1357_storage":{"encoding":"inplace","label":"struct AutomatedSqudyCampaignManager.Participant","members":[{"astId":1348,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"stakedAmount","offset":0,"slot":"0","type":"t_uint256"},{"astId":1350,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"ticketCount","offset":0,"slot":"1","type":"t_uint256"},{"astId":1352,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"hasCompletedSocial","offset":0,"slot":"2","type":"t_bool"},{"astId":1354,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"joinedAt","offset":0,"slot":"3","type":"t_uint256"},{"astId":1356,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"hasWithdrawnRefund","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_struct(RoleData)22_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":19,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":21,"contract":"contracts/AutomatedSqudyCampaignManager.sol:AutomatedSqudyCampaignManager","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}