version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: squdy-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: squdy_db
      POSTGRES_USER: squdy_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-squdy_password_change_in_production}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - squdy-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: squdy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - squdy-network
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: squdy-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      DATABASE_URL: postgresql://squdy_user:${DB_PASSWORD:-squdy_password_change_in_production}@postgres:5432/squdy_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:8080}
      TWITTER_BEARER_TOKEN: ${TWITTER_BEARER_TOKEN}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - squdy-network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: squdy-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001/api}
      VITE_SQUDY_TOKEN_ADDRESS: ${VITE_SQUDY_TOKEN_ADDRESS}
      VITE_CAMPAIGN_MANAGER_ADDRESS: ${VITE_CAMPAIGN_MANAGER_ADDRESS}
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - squdy-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: squdy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - squdy-network

volumes:
  postgres_data:
  redis_data:

networks:
  squdy-network:
    driver: bridge